// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code, unnecessary_cast
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:io';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';
import 'package:amap_search_fluttify/src/android/android.export.g.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';
import 'package:core_location_fluttify/core_location_fluttify.dart';

// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import
extension TypeOpAmapSearchFluttifyAndroid on Object {
  // type check
  Future<bool> is__<T>() async {
    final typeName = T.toString();
    if (RegExp('(List<)?(String|int|double)(>)?|(Map<String,(String|int|double)>)').hasMatch(typeName)) {
      return this is T;
    }
    else if (T == com_amap_api_services_traffic_TrafficStatusInfo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_traffic_TrafficStatusInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_traffic_TrafficStatusResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_traffic_TrafficStatusResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_traffic_TrafficSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_traffic_TrafficSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_traffic_RoadTrafficQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_traffic_RoadTrafficQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_traffic_CircleTrafficQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_traffic_CircleTrafficQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_traffic_TrafficStatusEvaluation) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_traffic_TrafficStatusEvaluation', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusLineItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusLineItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusStationResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusStationResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusStationSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusStationSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusLineSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusLineSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusLineQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusLineQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusLineResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusLineResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusStationItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusStationItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_busline_BusStationQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_busline_BusStationQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_AMapException) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_AMapException', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_ServiceSettings) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_ServiceSettings', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_SearchUtils) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_SearchUtils', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_LatLonSharePoint) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_LatLonSharePoint', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_LatLonPoint) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_LatLonPoint', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_PoiItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_PoiItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_core_SuggestionCity) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_core_SuggestionCity', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_Photo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_Photo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_SubPoiItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_SubPoiItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_PoiItemExtension) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_PoiItemExtension', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_PoiSearch_SearchBound) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_PoiSearch_SearchBound', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_PoiResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_PoiResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_PoiSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_PoiSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_PoiSearch_Query) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_PoiSearch_Query', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_poisearch_IndoorData) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_poisearch_IndoorData', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_Railway) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_Railway', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_BusPath) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_BusPath', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DriveRoutePlanResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DriveRoutePlanResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_TruckRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_TruckRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TMC) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TMC', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteBusWalkItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteBusWalkItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_BusStep) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_BusStep', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TaxiItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TaxiItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_BusRouteResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_BusRouteResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RoutePlanResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RoutePlanResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RailwaySpace) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RailwaySpace', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TruckRouteRestult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TruckRouteRestult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_RideRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_RideRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_DriveRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_DriveRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteRailwayItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteRailwayItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_WalkStep) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_WalkStep', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RailwayStationItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RailwayStationItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RideRouteResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RideRouteResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_FromAndTo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_FromAndTo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RidePath) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RidePath', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_BusRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_BusRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RideStep) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RideStep', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearchCity) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearchCity', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DistanceResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DistanceResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_WalkRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_WalkRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_District) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_District', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_WalkRouteResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_WalkRouteResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DistanceSearch_DistanceQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DistanceSearch_DistanceQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_SearchCity) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_SearchCity', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DistanceSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DistanceSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_WalkPath) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_WalkPath', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteBusLineItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteBusLineItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_RouteSearch_DrivePlanQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_RouteSearch_DrivePlanQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DrivePlanStep) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DrivePlanStep', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TimeInfo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TimeInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DriveStep) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DriveStep', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TruckStep) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TruckStep', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DriveRouteResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DriveRouteResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DrivePath) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DrivePath', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TruckPath) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TruckPath', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_Doorway) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_Doorway', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DrivePlanPath) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DrivePlanPath', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_TimeInfosElement) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_TimeInfosElement', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_DistanceItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_DistanceItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_route_Path) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_route_Path', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_road_Road) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_road_Road', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_road_Crossroad) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_road_Crossroad', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_nearby_NearbyInfo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_nearby_NearbyInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_nearby_UploadInfo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_nearby_UploadInfo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_nearby_NearbySearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_nearby_NearbySearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_nearby_NearbySearchResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_nearby_NearbySearchResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_nearby_NearbySearch_NearbyQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_nearby_NearbySearch_NearbyQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_a_) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_a_', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOIItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOIItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOISearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOISearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOISearchResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOISearchResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOISearchQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_routepoisearch_RoutePOISearchQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch_Query) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch_Query', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch_SearchBound) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch_SearchBound', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudImage) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudImage', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch_Sortingrules) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudSearch_Sortingrules', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_cloud_CloudItemDetail) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_cloud_CloudItemDetail', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_LocalDayWeatherForecast) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_LocalDayWeatherForecast', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_WeatherSearchQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_WeatherSearchQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherForecastResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherForecastResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherForecast) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherForecast', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_WeatherSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_WeatherSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherLive) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherLive', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherLiveResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_weather_LocalWeatherLiveResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_BusinessArea) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_BusinessArea', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_AoiItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_AoiItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeRoad) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeRoad', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeAddress) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_GeocodeAddress', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_StreetNumber) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_StreetNumber', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeAddress) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_geocoder_RegeocodeAddress', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_district_DistrictSearchQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_district_DistrictSearchQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_district_DistrictSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_district_DistrictSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_district_DistrictResult) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_district_DistrictResult', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_district_DistrictItem) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_district_DistrictItem', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_help_Tip) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_help_Tip', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_help_InputtipsQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_help_InputtipsQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_help_Inputtips) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_help_Inputtips', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IDistrictSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IDistrictSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IBusStationSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IBusStationSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IRouteSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IRouteSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IShareSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IShareSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IRoutePOISearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IRoutePOISearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_ITrafficSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_ITrafficSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IInputtipsSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IInputtipsSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IGeocodeSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IGeocodeSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_ICloudSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_ICloudSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IDistanceSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IDistanceSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IPoiSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IPoiSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IWeatherSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IWeatherSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_INearbySearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_INearbySearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_interfaces_IBusLineSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_interfaces_IBusLineSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareNaviQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareNaviQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareBusRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareBusRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_share_ShareSearch) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_share_ShareSearch', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareFromAndTo) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareFromAndTo', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareWalkRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareWalkRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfcom_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_content_Context) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_content_Context', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_content_Intent) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_content_Intent', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_content_ContentProvider) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_content_ContentProvider', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_Application) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_app_Application', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_Notification) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_app_Notification', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_Activity) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_app_Activity', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_app_PendingIntent) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_app_PendingIntent', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_os_Bundle) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_os_Bundle', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_os_Binder) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_os_Binder', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_View) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_view_View', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_SurfaceView) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_view_SurfaceView', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_ViewGroup) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_view_ViewGroup', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_Point) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_Point', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_PointF) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_PointF', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_Bitmap) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_Bitmap', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_ImageView) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_ImageView', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == java_io_Closeable) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfjava_io_Closeable', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == java_io_File) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfjava_io_File', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_location_Location) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_location_Location', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_view_MotionEvent) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_view_MotionEvent', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_graphics_drawable_Drawable) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_graphics_drawable_Drawable', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_FrameLayout) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_FrameLayout', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_TextView) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_TextView', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_LinearLayout) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_LinearLayout', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_widget_RelativeLayout) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_widget_RelativeLayout', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_os_Parcelable) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_os_Parcelable', {'refId': (this as Ref).refId});
      return result;
    }
    else if (T == android_util_Pair) {
      final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('RefClass::isKindOfandroid_util_Pair', {'refId': (this as Ref).refId});
      return result;
    }
  }

  // type cast
  T as__<T>() {
    final typeName = T.toString();
    // jsonable 直接造型 返回
    if (RegExp('(List<)?(String|int|double)(>)?|(Map<String,(String|int|double)>)').hasMatch(typeName)) {
      return this as T;
    }
    else if (T == com_amap_api_services_traffic_TrafficStatusInfo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_traffic_TrafficStatusInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_traffic_TrafficStatusResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_traffic_TrafficStatusResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_traffic_TrafficSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_traffic_TrafficSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_traffic_RoadTrafficQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_traffic_RoadTrafficQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_traffic_CircleTrafficQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_traffic_CircleTrafficQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_traffic_TrafficStatusEvaluation) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_traffic_TrafficStatusEvaluation()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusLineItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusLineItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusStationResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusStationResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusStationSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusStationSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusLineSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusLineSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusLineQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusLineQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusLineResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusLineResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusStationItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusStationItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_busline_BusStationQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_busline_BusStationQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_AMapException) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_AMapException()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_ServiceSettings) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_ServiceSettings()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_SearchUtils) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_SearchUtils()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_LatLonSharePoint) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_LatLonSharePoint()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_LatLonPoint) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_LatLonPoint()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_PoiItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_PoiItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_core_SuggestionCity) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_core_SuggestionCity()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_Photo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_Photo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_SubPoiItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_SubPoiItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_PoiItemExtension) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_PoiItemExtension()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_PoiSearch_SearchBound) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_PoiSearch_SearchBound()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_PoiResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_PoiResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_PoiSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_PoiSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_PoiSearch_Query) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_PoiSearch_Query()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_poisearch_IndoorData) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_poisearch_IndoorData()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_Railway) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_Railway()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_BusPath) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_BusPath()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DriveRoutePlanResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DriveRoutePlanResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_TruckRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_TruckRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TMC) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TMC()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteBusWalkItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteBusWalkItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_BusStep) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_BusStep()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TaxiItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TaxiItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_BusRouteResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_BusRouteResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RoutePlanResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RoutePlanResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RailwaySpace) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RailwaySpace()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TruckRouteRestult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TruckRouteRestult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_RideRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_RideRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_DriveRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_DriveRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteRailwayItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteRailwayItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_WalkStep) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_WalkStep()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RailwayStationItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RailwayStationItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RideRouteResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RideRouteResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_FromAndTo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_FromAndTo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RidePath) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RidePath()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_BusRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_BusRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RideStep) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RideStep()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearchCity) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearchCity()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DistanceResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DistanceResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_WalkRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_WalkRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_District) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_District()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_WalkRouteResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_WalkRouteResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DistanceSearch_DistanceQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DistanceSearch_DistanceQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_SearchCity) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_SearchCity()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DistanceSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DistanceSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_WalkPath) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_WalkPath()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteBusLineItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteBusLineItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_RouteSearch_DrivePlanQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_RouteSearch_DrivePlanQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DrivePlanStep) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DrivePlanStep()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TimeInfo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TimeInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DriveStep) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DriveStep()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TruckStep) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TruckStep()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DriveRouteResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DriveRouteResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DrivePath) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DrivePath()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TruckPath) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TruckPath()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_Doorway) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_Doorway()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DrivePlanPath) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DrivePlanPath()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_TimeInfosElement) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_TimeInfosElement()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_DistanceItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_DistanceItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_route_Path) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_route_Path()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_road_Road) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_road_Road()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_road_Crossroad) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_road_Crossroad()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_nearby_NearbyInfo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_nearby_NearbyInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_nearby_UploadInfo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_nearby_UploadInfo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_nearby_NearbySearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_nearby_NearbySearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_nearby_NearbySearchResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_nearby_NearbySearchResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_nearby_NearbySearch_NearbyQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_nearby_NearbySearch_NearbyQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_a_) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_a_()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOIItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_routepoisearch_RoutePOIItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOISearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_routepoisearch_RoutePOISearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOISearchResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_routepoisearch_RoutePOISearchResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_routepoisearch_RoutePOISearchQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_routepoisearch_RoutePOISearchQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch_Query) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudSearch_Query()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch_SearchBound) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudSearch_SearchBound()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudImage) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudImage()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudSearch_Sortingrules) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudSearch_Sortingrules()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_cloud_CloudItemDetail) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_cloud_CloudItemDetail()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_LocalDayWeatherForecast) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_LocalDayWeatherForecast()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_WeatherSearchQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_WeatherSearchQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherForecastResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_LocalWeatherForecastResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherForecast) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_LocalWeatherForecast()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_WeatherSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_WeatherSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherLive) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_LocalWeatherLive()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_weather_LocalWeatherLiveResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_weather_LocalWeatherLiveResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_BusinessArea) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_BusinessArea()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_GeocodeQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_GeocodeSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_RegeocodeResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_GeocodeResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_AoiItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_AoiItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeRoad) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_RegeocodeRoad()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_GeocodeAddress) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_GeocodeAddress()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_RegeocodeQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_StreetNumber) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_StreetNumber()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_geocoder_RegeocodeAddress) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_geocoder_RegeocodeAddress()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_district_DistrictSearchQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_district_DistrictSearchQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_district_DistrictSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_district_DistrictSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_district_DistrictResult) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_district_DistrictResult()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_district_DistrictItem) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_district_DistrictItem()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_help_Tip) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_help_Tip()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_help_InputtipsQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_help_InputtipsQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_help_Inputtips) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_help_Inputtips()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IDistrictSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IDistrictSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IBusStationSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IBusStationSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IRouteSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IRouteSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IShareSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IShareSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IRoutePOISearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IRoutePOISearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_ITrafficSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_ITrafficSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IInputtipsSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IInputtipsSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IGeocodeSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IGeocodeSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_ICloudSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_ICloudSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IDistanceSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IDistanceSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IPoiSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IPoiSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IWeatherSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IWeatherSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_INearbySearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_INearbySearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_interfaces_IBusLineSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_interfaces_IBusLineSearch.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareNaviQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_share_ShareSearch_ShareNaviQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareBusRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_share_ShareSearch_ShareBusRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_share_ShareSearch) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_share_ShareSearch()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareFromAndTo) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_share_ShareSearch_ShareFromAndTo()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareWalkRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_share_ShareSearch_ShareWalkRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == com_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (com_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_content_Context) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_content_Context()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_content_Intent) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_content_Intent()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_content_ContentProvider) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_content_ContentProvider()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_app_Application) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_app_Application()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_app_Notification) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_app_Notification()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_app_Activity) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_app_Activity()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_app_PendingIntent) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_app_PendingIntent()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_os_Bundle) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_os_Bundle()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_os_Binder) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_os_Binder()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_view_View) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_view_View()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_view_SurfaceView) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_view_SurfaceView()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_view_ViewGroup) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_view_ViewGroup()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_graphics_Point) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_graphics_Point()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_graphics_PointF) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_graphics_PointF()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_graphics_Bitmap) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_graphics_Bitmap()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_widget_ImageView) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_widget_ImageView()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == java_io_Closeable) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (java_io_Closeable.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == java_io_File) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (java_io_File()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_location_Location) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_location_Location()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_view_MotionEvent) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_view_MotionEvent()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_graphics_drawable_Drawable) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_graphics_drawable_Drawable()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_widget_FrameLayout) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_widget_FrameLayout()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_widget_TextView) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_widget_TextView()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_widget_LinearLayout) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_widget_LinearLayout()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_widget_RelativeLayout) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_widget_RelativeLayout()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_os_Parcelable) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_os_Parcelable.subInstance()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
    else if (T == android_util_Pair) {
      // 如果是Ref类的cast, 那么取其refId, 如果本身是refId, 那么直接使用(int)
      return (android_util_Pair()..refId = (this is Ref ? (this as Ref).refId : this as int)..tag__ = 'amap_search_fluttify') as T;
    }
  }
}