// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:amap_search_fluttify/src/ios/ios.export.g.dart';

final _channel = MethodChannel('me.yohom/amap_search_fluttify');

Future<AMapPOISearchBaseRequest> createAMapPOISearchBaseRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOISearchBaseRequest');
  final object = AMapPOISearchBaseRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOIIDSearchRequest> createAMapPOIIDSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOIIDSearchRequest');
  final object = AMapPOIIDSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOIKeywordsSearchRequest> createAMapPOIKeywordsSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOIKeywordsSearchRequest');
  final object = AMapPOIKeywordsSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOIAroundSearchRequest> createAMapPOIAroundSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOIAroundSearchRequest');
  final object = AMapPOIAroundSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOIPolygonSearchRequest> createAMapPOIPolygonSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOIPolygonSearchRequest');
  final object = AMapPOIPolygonSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOISearchResponse> createAMapPOISearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOISearchResponse');
  final object = AMapPOISearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoutePOISearchRequest> createAMapRoutePOISearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoutePOISearchRequest');
  final object = AMapRoutePOISearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoutePOISearchResponse> createAMapRoutePOISearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoutePOISearchResponse');
  final object = AMapRoutePOISearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapInputTipsSearchRequest> createAMapInputTipsSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapInputTipsSearchRequest');
  final object = AMapInputTipsSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapInputTipsSearchResponse> createAMapInputTipsSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapInputTipsSearchResponse');
  final object = AMapInputTipsSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapGeocodeSearchRequest> createAMapGeocodeSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapGeocodeSearchRequest');
  final object = AMapGeocodeSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapGeocodeSearchResponse> createAMapGeocodeSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapGeocodeSearchResponse');
  final object = AMapGeocodeSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapReGeocodeSearchRequest> createAMapReGeocodeSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapReGeocodeSearchRequest');
  final object = AMapReGeocodeSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapReGeocodeSearchResponse> createAMapReGeocodeSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapReGeocodeSearchResponse');
  final object = AMapReGeocodeSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusStopSearchRequest> createAMapBusStopSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusStopSearchRequest');
  final object = AMapBusStopSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusStopSearchResponse> createAMapBusStopSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusStopSearchResponse');
  final object = AMapBusStopSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusLineBaseSearchRequest> createAMapBusLineBaseSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusLineBaseSearchRequest');
  final object = AMapBusLineBaseSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusLineNameSearchRequest> createAMapBusLineNameSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusLineNameSearchRequest');
  final object = AMapBusLineNameSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusLineIDSearchRequest> createAMapBusLineIDSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusLineIDSearchRequest');
  final object = AMapBusLineIDSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusLineSearchResponse> createAMapBusLineSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusLineSearchResponse');
  final object = AMapBusLineSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDistrictSearchRequest> createAMapDistrictSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDistrictSearchRequest');
  final object = AMapDistrictSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDistrictSearchResponse> createAMapDistrictSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDistrictSearchResponse');
  final object = AMapDistrictSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRouteSearchBaseRequest> createAMapRouteSearchBaseRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRouteSearchBaseRequest');
  final object = AMapRouteSearchBaseRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDrivingRouteSearchRequest> createAMapDrivingRouteSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDrivingRouteSearchRequest');
  final object = AMapDrivingRouteSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapWalkingRouteSearchRequest> createAMapWalkingRouteSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapWalkingRouteSearchRequest');
  final object = AMapWalkingRouteSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTransitRouteSearchRequest> createAMapTransitRouteSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTransitRouteSearchRequest');
  final object = AMapTransitRouteSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRidingRouteSearchRequest> createAMapRidingRouteSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRidingRouteSearchRequest');
  final object = AMapRidingRouteSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRouteSearchResponse> createAMapRouteSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRouteSearchResponse');
  final object = AMapRouteSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRidingRouteSearchResponse> createAMapRidingRouteSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRidingRouteSearchResponse');
  final object = AMapRidingRouteSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTruckRouteSearchRequest> createAMapTruckRouteSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTruckRouteSearchRequest');
  final object = AMapTruckRouteSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDistanceSearchRequest> createAMapDistanceSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDistanceSearchRequest');
  final object = AMapDistanceSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDistanceSearchResponse> createAMapDistanceSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDistanceSearchResponse');
  final object = AMapDistanceSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapWeatherSearchRequest> createAMapWeatherSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapWeatherSearchRequest');
  final object = AMapWeatherSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapWeatherSearchResponse> createAMapWeatherSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapWeatherSearchResponse');
  final object = AMapWeatherSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoadTrafficSearchBaseRequest> createAMapRoadTrafficSearchBaseRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoadTrafficSearchBaseRequest');
  final object = AMapRoadTrafficSearchBaseRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoadTrafficSearchRequest> createAMapRoadTrafficSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoadTrafficSearchRequest');
  final object = AMapRoadTrafficSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoadTrafficCircleSearchRequest> createAMapRoadTrafficCircleSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoadTrafficCircleSearchRequest');
  final object = AMapRoadTrafficCircleSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoadTrafficSearchResponse> createAMapRoadTrafficSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoadTrafficSearchResponse');
  final object = AMapRoadTrafficSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapNearbySearchRequest> createAMapNearbySearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapNearbySearchRequest');
  final object = AMapNearbySearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapNearbySearchResponse> createAMapNearbySearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapNearbySearchResponse');
  final object = AMapNearbySearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudSearchBaseRequest> createAMapCloudSearchBaseRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudSearchBaseRequest');
  final object = AMapCloudSearchBaseRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudPOIAroundSearchRequest> createAMapCloudPOIAroundSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudPOIAroundSearchRequest');
  final object = AMapCloudPOIAroundSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudPOIPolygonSearchRequest> createAMapCloudPOIPolygonSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudPOIPolygonSearchRequest');
  final object = AMapCloudPOIPolygonSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudPOIIDSearchRequest> createAMapCloudPOIIDSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudPOIIDSearchRequest');
  final object = AMapCloudPOIIDSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudPOILocalSearchRequest> createAMapCloudPOILocalSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudPOILocalSearchRequest');
  final object = AMapCloudPOILocalSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudPOISearchResponse> createAMapCloudPOISearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudPOISearchResponse');
  final object = AMapCloudPOISearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapShareSearchBaseRequest> createAMapShareSearchBaseRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapShareSearchBaseRequest');
  final object = AMapShareSearchBaseRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapLocationShareSearchRequest> createAMapLocationShareSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapLocationShareSearchRequest');
  final object = AMapLocationShareSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOIShareSearchRequest> createAMapPOIShareSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOIShareSearchRequest');
  final object = AMapPOIShareSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRouteShareSearchRequest> createAMapRouteShareSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRouteShareSearchRequest');
  final object = AMapRouteShareSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapNavigationShareSearchRequest> createAMapNavigationShareSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapNavigationShareSearchRequest');
  final object = AMapNavigationShareSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapShareSearchResponse> createAMapShareSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapShareSearchResponse');
  final object = AMapShareSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapFutureRouteSearchRequest> createAMapFutureRouteSearchRequest() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapFutureRouteSearchRequest');
  final object = AMapFutureRouteSearchRequest()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapFutureRouteSearchResponse> createAMapFutureRouteSearchResponse() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapFutureRouteSearchResponse');
  final object = AMapFutureRouteSearchResponse()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapSearchObject> createAMapSearchObject() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapSearchObject');
  final object = AMapSearchObject()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapGeoPoint> createAMapGeoPoint() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapGeoPoint');
  final object = AMapGeoPoint()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapGeoPolygon> createAMapGeoPolygon() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapGeoPolygon');
  final object = AMapGeoPolygon()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCity> createAMapCity() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCity');
  final object = AMapCity()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapSuggestion> createAMapSuggestion() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapSuggestion');
  final object = AMapSuggestion()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTip> createAMapTip() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTip');
  final object = AMapTip()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapImage> createAMapImage() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapImage');
  final object = AMapImage()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOIExtension> createAMapPOIExtension() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOIExtension');
  final object = AMapPOIExtension()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapIndoorData> createAMapIndoorData() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapIndoorData');
  final object = AMapIndoorData()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapSubPOI> createAMapSubPOI() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapSubPOI');
  final object = AMapSubPOI()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoutePOI> createAMapRoutePOI() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoutePOI');
  final object = AMapRoutePOI()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPOI> createAMapPOI() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPOI');
  final object = AMapPOI()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapAOI> createAMapAOI() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapAOI');
  final object = AMapAOI()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoad> createAMapRoad() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoad');
  final object = AMapRoad()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoadInter> createAMapRoadInter() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoadInter');
  final object = AMapRoadInter()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapStreetNumber> createAMapStreetNumber() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapStreetNumber');
  final object = AMapStreetNumber()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusinessArea> createAMapBusinessArea() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusinessArea');
  final object = AMapBusinessArea()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapAddressComponent> createAMapAddressComponent() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapAddressComponent');
  final object = AMapAddressComponent()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapReGeocode> createAMapReGeocode() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapReGeocode');
  final object = AMapReGeocode()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapGeocode> createAMapGeocode() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapGeocode');
  final object = AMapGeocode()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusStop> createAMapBusStop() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusStop');
  final object = AMapBusStop()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapBusLine> createAMapBusLine() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapBusLine');
  final object = AMapBusLine()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDistrict> createAMapDistrict() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDistrict');
  final object = AMapDistrict()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTMC> createAMapTMC() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTMC');
  final object = AMapTMC()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapStep> createAMapStep() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapStep');
  final object = AMapStep()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapPath> createAMapPath() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapPath');
  final object = AMapPath()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapFutureTimeInfoElement> createAMapFutureTimeInfoElement() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapFutureTimeInfoElement');
  final object = AMapFutureTimeInfoElement()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapFutureTimeInfo> createAMapFutureTimeInfo() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapFutureTimeInfo');
  final object = AMapFutureTimeInfo()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapWalking> createAMapWalking() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapWalking');
  final object = AMapWalking()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTaxi> createAMapTaxi() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTaxi');
  final object = AMapTaxi()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRailwayStation> createAMapRailwayStation() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRailwayStation');
  final object = AMapRailwayStation()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRailwaySpace> createAMapRailwaySpace() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRailwaySpace');
  final object = AMapRailwaySpace()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRailway> createAMapRailway() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRailway');
  final object = AMapRailway()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapSegment> createAMapSegment() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapSegment');
  final object = AMapSegment()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTransit> createAMapTransit() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTransit');
  final object = AMapTransit()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapRoute> createAMapRoute() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapRoute');
  final object = AMapRoute()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapDistanceResult> createAMapDistanceResult() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapDistanceResult');
  final object = AMapDistanceResult()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapLocalWeatherLive> createAMapLocalWeatherLive() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapLocalWeatherLive');
  final object = AMapLocalWeatherLive()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapLocalDayWeatherForecast> createAMapLocalDayWeatherForecast() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapLocalDayWeatherForecast');
  final object = AMapLocalDayWeatherForecast()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapLocalWeatherForecast> createAMapLocalWeatherForecast() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapLocalWeatherForecast');
  final object = AMapLocalWeatherForecast()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapNearbyUserInfo> createAMapNearbyUserInfo() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapNearbyUserInfo');
  final object = AMapNearbyUserInfo()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTrafficEvaluation> createAMapTrafficEvaluation() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTrafficEvaluation');
  final object = AMapTrafficEvaluation()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTrafficRoad> createAMapTrafficRoad() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTrafficRoad');
  final object = AMapTrafficRoad()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapTrafficInfo> createAMapTrafficInfo() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapTrafficInfo');
  final object = AMapTrafficInfo()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudImage> createAMapCloudImage() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudImage');
  final object = AMapCloudImage()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapCloudPOI> createAMapCloudPOI() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapCloudPOI');
  final object = AMapCloudPOI()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapNearbyUploadInfo> createAMapNearbyUploadInfo() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapNearbyUploadInfo');
  final object = AMapNearbyUploadInfo()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

Future<AMapSearchAPI> createAMapSearchAPI() async {
  final int refId = await _channel.invokeMethod('ObjectFactory::createAMapSearchAPI');
  final object = AMapSearchAPI()..refId = refId..tag = 'amap_search_fluttify';

  kNativeObjectPool.add(object);
  return object;
}

