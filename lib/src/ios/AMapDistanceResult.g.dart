// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_search_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_search_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class AMapDistanceResult extends AMapSearchObject with NSCoding, NSCopying {
  //region constants
  
  //endregion

  //region creators
  static Future<AMapDistanceResult> create__() async {
    final int refId = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('ObjectFactory::createAMapDistanceResult');
    final object = AMapDistanceResult()..refId = refId..tag = 'amap_search_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<AMapDistanceResult>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('ObjectFactory::create_batchAMapDistanceResult', {'length': length});
  
    final List<AMapDistanceResult> typedResult = resultBatch.map((result) => AMapDistanceResult()..refId = result..tag = 'amap_search_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<int> get_originID() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_originID", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_destID() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_destID", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_distance() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_distance", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_duration() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_duration", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_info() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_info", {'refId': refId});
  
    return result;
  }
  
  Future<int> get_code() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_code", {'refId': refId});
  
    return result;
  }
  
  //endregion

  //region setters
  Future<void> set_originID(int originID) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_originID', {'refId': refId, "originID": originID});
  
  
  }
  
  Future<void> set_destID(int destID) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_destID', {'refId': refId, "destID": destID});
  
  
  }
  
  Future<void> set_distance(int distance) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_distance', {'refId': refId, "distance": distance});
  
  
  }
  
  Future<void> set_duration(int duration) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_duration', {'refId': refId, "duration": duration});
  
  
  }
  
  Future<void> set_info(String info) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_info', {'refId': refId, "info": info});
  
  
  }
  
  Future<void> set_code(int code) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_code', {'refId': refId, "code": code});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension AMapDistanceResult_Batch on List<AMapDistanceResult> {
  //region getters
  Future<List<int>> get_originID_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_originID_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_destID_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_destID_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_distance_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_distance_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_duration_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_duration_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_info_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_info_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<int>> get_code_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapDistanceResult::get_code_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_originID_batch(List<int> originID) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_originID_batch_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "originID": originID[i]}]);
  
  
  }
  
  Future<void> set_destID_batch(List<int> destID) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_destID_batch_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "destID": destID[i]}]);
  
  
  }
  
  Future<void> set_distance_batch(List<int> distance) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_distance_batch_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "distance": distance[i]}]);
  
  
  }
  
  Future<void> set_duration_batch(List<int> duration) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_duration_batch_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "duration": duration[i]}]);
  
  
  }
  
  Future<void> set_info_batch(List<String> info) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_info_batch_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "info": info[i]}]);
  
  
  }
  
  Future<void> set_code_batch(List<int> code) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapDistanceResult::set_code_batch_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "code": code[i]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}