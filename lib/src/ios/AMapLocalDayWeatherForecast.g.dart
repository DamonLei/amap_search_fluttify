// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable, dead_code
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_search_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_search_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

import 'package:foundation_fluttify/foundation_fluttify.dart';

class AMapLocalDayWeatherForecast extends AMapSearchObject with NSCoding, NSCopying {
  //region constants
  
  //endregion

  //region creators
  static Future<AMapLocalDayWeatherForecast> create__() async {
    final int refId = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('ObjectFactory::createAMapLocalDayWeatherForecast');
    final object = AMapLocalDayWeatherForecast()..refId = refId..tag = 'amap_search_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  static Future<List<AMapLocalDayWeatherForecast>> create_batch__(int length) async {
    if (false) {
      return Future.error('all args must have same length!');
    }
    final List resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('ObjectFactory::create_batchAMapLocalDayWeatherForecast', {'length': length});
  
    final List<AMapLocalDayWeatherForecast> typedResult = resultBatch.map((result) => AMapLocalDayWeatherForecast()..refId = result..tag = 'amap_search_fluttify').toList();
    kNativeObjectPool.addAll(typedResult);
    return typedResult;
  }
  
  //endregion

  //region getters
  Future<String> get_date() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_date", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_week() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_week", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_dayWeather() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayWeather", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_nightWeather() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightWeather", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_dayTemp() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayTemp", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_nightTemp() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightTemp", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_dayWind() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayWind", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_nightWind() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightWind", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_dayPower() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayPower", {'refId': refId});
  
    return result;
  }
  
  Future<String> get_nightPower() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightPower", {'refId': refId});
  
    return result;
  }
  
  //endregion

  //region setters
  Future<void> set_date(String date) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_date', {'refId': refId, "date": date});
  
  
  }
  
  Future<void> set_week(String week) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_week', {'refId': refId, "week": week});
  
  
  }
  
  Future<void> set_dayWeather(String dayWeather) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayWeather', {'refId': refId, "dayWeather": dayWeather});
  
  
  }
  
  Future<void> set_nightWeather(String nightWeather) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightWeather', {'refId': refId, "nightWeather": nightWeather});
  
  
  }
  
  Future<void> set_dayTemp(String dayTemp) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayTemp', {'refId': refId, "dayTemp": dayTemp});
  
  
  }
  
  Future<void> set_nightTemp(String nightTemp) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightTemp', {'refId': refId, "nightTemp": nightTemp});
  
  
  }
  
  Future<void> set_dayWind(String dayWind) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayWind', {'refId': refId, "dayWind": dayWind});
  
  
  }
  
  Future<void> set_nightWind(String nightWind) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightWind', {'refId': refId, "nightWind": nightWind});
  
  
  }
  
  Future<void> set_dayPower(String dayPower) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayPower', {'refId': refId, "dayPower": dayPower});
  
  
  }
  
  Future<void> set_nightPower(String nightPower) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightPower', {'refId': refId, "nightPower": nightPower});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}

extension AMapLocalDayWeatherForecast_Batch on List<AMapLocalDayWeatherForecast> {
  //region getters
  Future<List<String>> get_date_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_date_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_week_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_week_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_dayWeather_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayWeather_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_nightWeather_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightWeather_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_dayTemp_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayTemp_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_nightTemp_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightTemp_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_dayWind_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayWind_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_nightWind_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightWind_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_dayPower_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_dayPower_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  Future<List<String>> get_nightPower_batch() async {
    final resultBatch = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapLocalDayWeatherForecast::get_nightPower_batch", [for (final item in this) {'refId': item.refId}]);
    final typedResult = (resultBatch as List).map((result) => result).toList();
  
    return typedResult;
  }
  
  //endregion

  //region setters
  Future<void> set_date_batch(List<String> date) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_date_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "date": date[i]}]);
  
  
  }
  
  Future<void> set_week_batch(List<String> week) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_week_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "week": week[i]}]);
  
  
  }
  
  Future<void> set_dayWeather_batch(List<String> dayWeather) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayWeather_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "dayWeather": dayWeather[i]}]);
  
  
  }
  
  Future<void> set_nightWeather_batch(List<String> nightWeather) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightWeather_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "nightWeather": nightWeather[i]}]);
  
  
  }
  
  Future<void> set_dayTemp_batch(List<String> dayTemp) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayTemp_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "dayTemp": dayTemp[i]}]);
  
  
  }
  
  Future<void> set_nightTemp_batch(List<String> nightTemp) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightTemp_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "nightTemp": nightTemp[i]}]);
  
  
  }
  
  Future<void> set_dayWind_batch(List<String> dayWind) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayWind_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "dayWind": dayWind[i]}]);
  
  
  }
  
  Future<void> set_nightWind_batch(List<String> nightWind) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightWind_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "nightWind": nightWind[i]}]);
  
  
  }
  
  Future<void> set_dayPower_batch(List<String> dayPower) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_dayPower_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "dayPower": dayPower[i]}]);
  
  
  }
  
  Future<void> set_nightPower_batch(List<String> nightPower) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapLocalDayWeatherForecast::set_nightPower_batch', [for (int i = 0; i < this.length; i++) {'refId': this[i].refId, "nightPower": nightPower[i]}]);
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}