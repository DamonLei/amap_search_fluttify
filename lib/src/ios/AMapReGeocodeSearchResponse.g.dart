// ignore_for_file: non_constant_identifier_names, camel_case_types, missing_return, unused_import, unused_local_variable
//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

import 'dart:typed_data';

import 'package:amap_search_fluttify/src/ios/ios.export.g.dart';
import 'package:amap_search_fluttify/src/android/android.export.g.dart';
import 'package:flutter/foundation.dart';
import 'package:flutter/services.dart';

class AMapReGeocodeSearchResponse extends AMapSearchObject  {
  //region constants
  
  //endregion

  //region creators
  static Future<AMapReGeocodeSearchResponse> create() async {
    final int refId = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('ObjectFactory::createAMapReGeocodeSearchResponse');
    final object = AMapReGeocodeSearchResponse()..refId = refId..tag = 'amap_search_fluttify';
  
    kNativeObjectPool.add(object);
    return object;
  }
  
  //endregion

  //region getters
  Future<AMapReGeocode> get_regeocode() async {
    final result = await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod("AMapReGeocodeSearchResponse::get_regeocode", {'refId': refId});
    kNativeObjectPool.add(AMapReGeocode()..refId = result..tag = 'amap_search_fluttify');
    return AMapReGeocode()..refId = result..tag = 'amap_search_fluttify';
  }
  
  //endregion

  //region setters
  Future<void> set_regeocode(AMapReGeocode regeocode) async {
    await MethodChannel('me.yohom/amap_search_fluttify').invokeMethod('AMapReGeocodeSearchResponse::set_regeocode', {'refId': refId, "regeocode": regeocode.refId});
  
  
  }
  
  //endregion

  //region methods
  
  //endregion
}