//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_search_fluttify;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class AmapSearchFluttifyPlugin implements FlutterPlugin, MethodChannel.MethodCallHandler {

    private BinaryMessenger messenger;

    private final Map<String, Handler> handlerMap = new HashMap<String, Handler>() {{
        // getter
        put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_NO_DRIVE", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            int result = ref.ERROR_CODE_NO_DRIVE;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_TOO_FAR", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            int result = ref.ERROR_CODE_TOO_FAR;
        
        
        
            methodResult.success(result);
        });
        // getter
        put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_NOT_IN_CHINA", (args, methodResult) -> {
            // ref object
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            int result = ref.ERROR_CODE_NOT_IN_CHINA;
        
        
        
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getStatus", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getStatus(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStatus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setStatus", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setStatus(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStatus(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getAngle", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getAngle(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getAngle();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setAngle", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setAngle(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAngle(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getSpeed", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getSpeed(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getSpeed();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setSpeed", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setSpeed(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSpeed(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getLcodes", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getLcodes(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLcodes();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setLcodes", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setLcodes(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLcodes(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::getCoordinates", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getCoordinates(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getCoordinates();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusInfo::setCoordinates", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setCoordinates(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCoordinates(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusResult::getDescription", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::getDescription(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDescription();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusResult::setDescription", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::setDescription(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDescription(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusResult::getEvaluation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::getEvaluation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.traffic.TrafficStatusEvaluation result;
            try {
                result = ref.getEvaluation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusResult::setEvaluation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.traffic.TrafficStatusEvaluation var1 = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::setEvaluation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setEvaluation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusResult::getRoads", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::getRoads(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.traffic.TrafficStatusInfo> result;
            try {
                result = ref.getRoads();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.traffic.TrafficStatusInfo item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusResult::setRoads", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.traffic.TrafficStatusInfo> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::setRoads(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoads(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficSearch::setTrafficSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficSearch ref = (com.amap.api.services.traffic.TrafficSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficSearch@" + refId + "::setTrafficSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setTrafficSearchListener(new com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.traffic.TrafficSearch::setTrafficSearchListener::Callback");
        
                // call dart method
                @Override
                public void onRoadTrafficSearched(com.amap.api.services.traffic.TrafficStatusResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRoadTrafficSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener::onRoadTrafficSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener::onRoadTrafficSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.traffic.TrafficStatusResult var1 = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener ref = (com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener@" + refId + "::onRoadTrafficSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onRoadTrafficSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::getExpedite", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getExpedite(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getExpedite();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::setExpedite", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setExpedite(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setExpedite(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::getCongested", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getCongested(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCongested();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::setCongested", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setCongested(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCongested(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::getBlocked", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getBlocked(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBlocked();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::setBlocked", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setBlocked(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBlocked(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::getUnknown", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getUnknown(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUnknown();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::setUnknown", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setUnknown(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUnknown(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::getStatus", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getStatus(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStatus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::setStatus", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setStatus(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStatus(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::getDescription", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getDescription(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDescription();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.traffic.TrafficStatusEvaluation::setDescription", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setDescription(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDescription(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener::onBusLineSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusLineResult var1 = (com.amap.api.services.busline.BusLineResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener ref = (com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener@" + refId + "::onBusLineSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onBusLineSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener::onBusStationSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationResult var1 = (com.amap.api.services.busline.BusStationResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener ref = (com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener@" + refId + "::onBusStationSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onBusStationSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBusLineName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusLineName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusLineName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBusLineName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusLineName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusLineName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBusLineType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusLineType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusLineType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBusLineType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusLineType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusLineType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getCityCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getCityCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setCityCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setCityCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getDirectionsCoordinates", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getDirectionsCoordinates(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getDirectionsCoordinates();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setDirectionsCoordinates", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setDirectionsCoordinates(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDirectionsCoordinates(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBounds", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBounds(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getBounds();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBounds", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBounds(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBounds(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBusLineId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusLineId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusLineId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBusLineId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusLineId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusLineId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getOriginatingStation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getOriginatingStation(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOriginatingStation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setOriginatingStation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setOriginatingStation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOriginatingStation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getTerminalStation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getTerminalStation(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTerminalStation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setTerminalStation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setTerminalStation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTerminalStation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBusCompany", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusCompany(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusCompany();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBusCompany", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusCompany(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusCompany(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBasicPrice", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBasicPrice(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getBasicPrice();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBasicPrice", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBasicPrice(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBasicPrice(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getTotalPrice", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getTotalPrice(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTotalPrice();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setTotalPrice", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setTotalPrice(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTotalPrice(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::getBusStations", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusStations(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.busline.BusStationItem> result;
            try {
                result = ref.getBusStations();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.busline.BusStationItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineItem::setBusStations", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.busline.BusStationItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.busline.BusStationItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusStations(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusStations(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationResult::createPagedResult", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationQuery var0 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            int var1 = (int) args.get("var1");
            // list arg
            List<Integer> var2RefIdList = (List<Integer>) args.get("var2");
            List<com.amap.api.services.core.SuggestionCity> var2 = new ArrayList<>();
            for (int refId : var2RefIdList) {
                var2.add((com.amap.api.services.core.SuggestionCity) getHEAP().get(refId));
            }
            // jsonable arg
            List<String> var3 = (List<String>) args.get("var3");
            // list arg
            List<Integer> var4RefIdList = (List<Integer>) args.get("var4");
            List<com.amap.api.services.busline.BusStationItem> var4 = new ArrayList<>();
            for (int refId : var4RefIdList) {
                var4.add((com.amap.api.services.busline.BusStationItem) getHEAP().get(refId));
            }
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult::createPagedResult(" + var0 + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationResult result;
            try {
                result = com.amap.api.services.busline.BusStationResult.createPagedResult(var0, var1, new ArrayList(var2), new ArrayList(var3), new ArrayList(var4));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationResult::getPageCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getPageCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationResult::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationResult::getSearchSuggestionKeywords", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getSearchSuggestionKeywords(" + "" + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getSearchSuggestionKeywords();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationResult::getSearchSuggestionCities", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getSearchSuggestionCities(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.SuggestionCity> result;
            try {
                result = ref.getSearchSuggestionCities();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.SuggestionCity item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationResult::getBusStations", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getBusStations(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.busline.BusStationItem> result;
            try {
                result = ref.getBusStations();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.busline.BusStationItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationSearch::searchBusStation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::searchBusStation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationResult result;
            try {
                result = ref.searchBusStation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationSearch::setOnBusStationSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::setOnBusStationSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnBusStationSearchListener(new com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.busline.BusStationSearch::setOnBusStationSearchListener::Callback");
        
                // call dart method
                @Override
                public void onBusStationSearched(com.amap.api.services.busline.BusStationResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusStationSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener::onBusStationSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationSearch::searchBusStationAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::searchBusStationAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchBusStationAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationQuery var1 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineSearch::searchBusLine", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::searchBusLine(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineResult result;
            try {
                result = ref.searchBusLine();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineSearch::setOnBusLineSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::setOnBusLineSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnBusLineSearchListener(new com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.busline.BusLineSearch::setOnBusLineSearchListener::Callback");
        
                // call dart method
                @Override
                public void onBusLineSearched(com.amap.api.services.busline.BusLineResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusLineSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener::onBusLineSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineSearch::searchBusLineAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::searchBusLineAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchBusLineAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusLineQuery var1 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::getCategory", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getCategory(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineQuery.SearchType result;
            try {
                result = ref.getCategory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::getQueryString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getQueryString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getQueryString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::setQueryString", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setQueryString(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQueryString(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::getPageSize", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getPageSize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageSize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::setPageSize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setPageSize(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageSize(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::getPageNumber", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getPageNumber(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageNumber();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::setPageNumber", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setPageNumber(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageNumber(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::setCategory", (args, methodResult) -> {
            // args
            // enum arg
            com.amap.api.services.busline.BusLineQuery.SearchType var1 = com.amap.api.services.busline.BusLineQuery.SearchType.values()[(int) args.get("var1")];
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setCategory(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCategory(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineQuery::weakEquals", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusLineQuery var1 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::weakEquals(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.weakEquals(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineResult::createPagedResult", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusLineQuery var0 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            int var1 = (int) args.get("var1");
            // list arg
            List<Integer> var2RefIdList = (List<Integer>) args.get("var2");
            List<com.amap.api.services.core.SuggestionCity> var2 = new ArrayList<>();
            for (int refId : var2RefIdList) {
                var2.add((com.amap.api.services.core.SuggestionCity) getHEAP().get(refId));
            }
            // jsonable arg
            List<String> var3 = (List<String>) args.get("var3");
            // list arg
            List<Integer> var4RefIdList = (List<Integer>) args.get("var4");
            List<com.amap.api.services.busline.BusLineItem> var4 = new ArrayList<>();
            for (int refId : var4RefIdList) {
                var4.add((com.amap.api.services.busline.BusLineItem) getHEAP().get(refId));
            }
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult::createPagedResult(" + var0 + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineResult result;
            try {
                result = com.amap.api.services.busline.BusLineResult.createPagedResult(var0, var1, new ArrayList(var2), new ArrayList(var3), new ArrayList(var4));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineResult::getPageCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getPageCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineResult::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineResult::getSearchSuggestionKeywords", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getSearchSuggestionKeywords(" + "" + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getSearchSuggestionKeywords();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusLineResult::getSearchSuggestionCities", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getSearchSuggestionCities(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.SuggestionCity> result;
            try {
                result = ref.getSearchSuggestionCities();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.SuggestionCity item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusLineResult::getBusLines", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getBusLines(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.busline.BusLineItem> result;
            try {
                result = ref.getBusLines();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.busline.BusLineItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::getBusStationId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getBusStationId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusStationId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::setBusStationId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setBusStationId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusStationId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::getBusStationName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getBusStationName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusStationName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::setBusStationName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setBusStationName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusStationName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::setLatLonPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setLatLonPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLonPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::getCityCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getCityCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::setCityCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setCityCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::getBusLineItems", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getBusLineItems(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.busline.BusLineItem> result;
            try {
                result = ref.getBusLineItems();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.busline.BusLineItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationItem::setBusLineItems", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.busline.BusLineItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.busline.BusLineItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setBusLineItems(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusLineItems(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::getQueryString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getQueryString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getQueryString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::getPageSize", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getPageSize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageSize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::getPageNumber", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getPageNumber(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageNumber();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::setQueryString", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setQueryString(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQueryString(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::setPageSize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setPageSize(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageSize(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::setPageNumber", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setPageNumber(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageNumber(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.busline.BusStationQuery::weakEquals", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationQuery var1 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::weakEquals(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.weakEquals(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.AMapException::getErrorLevel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorLevel(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getErrorLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.AMapException::getErrorType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getErrorType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.AMapException::getErrorMessage", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorMessage(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getErrorMessage();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.AMapException::getErrorCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorCode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getErrorCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::getConnectionTimeOut", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getConnectionTimeOut(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getConnectionTimeOut();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::getSoTimeOut", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getSoTimeOut(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getSoTimeOut();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::setConnectionTimeOut", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setConnectionTimeOut(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setConnectionTimeOut(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::setSoTimeOut", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setSoTimeOut(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSoTimeOut(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::getInstance", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings::getInstance(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.ServiceSettings result;
            try {
                result = com.amap.api.services.core.ServiceSettings.getInstance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::setLanguage", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setLanguage(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLanguage(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::setProtocol", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setProtocol(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProtocol(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::getLanguage", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getLanguage(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLanguage();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::getProtocol", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getProtocol(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getProtocol();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::setApiKey", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setApiKey(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setApiKey(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.ServiceSettings::destroyInnerAsynThreadPool", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::destroyInnerAsynThreadPool(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.destroyInnerAsynThreadPool();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.SearchUtils::getSHA1", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SearchUtils::getSHA1(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.amap.api.services.core.SearchUtils.getSHA1(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.SearchUtils::getPkgName", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SearchUtils::getPkgName(" + var0 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.amap.api.services.core.SearchUtils.getPkgName(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.SearchUtils::getVersion", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SearchUtils::getVersion(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = com.amap.api.services.core.SearchUtils.getVersion();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.LatLonSharePoint::getSharePointName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonSharePoint ref = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonSharePoint@" + refId + "::getSharePointName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSharePointName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.LatLonSharePoint::setSharePointName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonSharePoint ref = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonSharePoint@" + refId + "::setSharePointName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSharePointName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.LatLonPoint::getLongitude", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::getLongitude(" + "" + ")");
            }
        
            // invoke native method
            double result;
            try {
                result = ref.getLongitude();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.LatLonPoint::setLongitude", (args, methodResult) -> {
            // args
            // jsonable arg
            double var1 = (double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::setLongitude(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLongitude(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.LatLonPoint::getLatitude", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::getLatitude(" + "" + ")");
            }
        
            // invoke native method
            double result;
            try {
                result = ref.getLatitude();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.LatLonPoint::setLatitude", (args, methodResult) -> {
            // args
            // jsonable arg
            double var1 = (double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::setLatitude(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatitude(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.LatLonPoint::copy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::copy(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.copy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::getBusinessArea", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getBusinessArea(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBusinessArea();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setBusinessArea", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setBusinessArea(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusinessArea(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getAdName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getAdName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setAdName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setAdName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getCityName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getCityName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setCityName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setCityName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getProvinceName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getProvinceName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getProvinceName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setProvinceName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setProvinceName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProvinceName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getTypeDes", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTypeDes(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTypeDes();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setTypeDes", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setTypeDes(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTypeDes(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getTel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTel(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setTel", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setTel(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTel(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getPoiId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getPoiId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPoiId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getTitle", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTitle(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTitle();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::getSnippet", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getSnippet(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSnippet();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::getCityCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getCityCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setCityCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setCityCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getEnter", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getEnter(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getEnter();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::setEnter", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setEnter(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setEnter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getExit", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getExit(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getExit();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::setExit", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setExit(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setExit(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getWebsite", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getWebsite(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getWebsite();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setWebsite", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setWebsite(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWebsite(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getPostcode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getPostcode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPostcode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setPostcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setPostcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPostcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getEmail", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getEmail(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getEmail();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setEmail", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setEmail(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setEmail(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::setIndoorMap", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setIndoorMap(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setIndoorMap(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::isIndoorMap", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::isIndoorMap(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isIndoorMap();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setProvinceCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setProvinceCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProvinceCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getProvinceCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getProvinceCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getProvinceCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setParkingType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setParkingType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setParkingType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getParkingType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getParkingType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getParkingType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setSubPois", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.poisearch.SubPoiItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setSubPois(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSubPois(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getSubPois", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getSubPois(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.poisearch.SubPoiItem> result;
            try {
                result = ref.getSubPois();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.poisearch.SubPoiItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::getIndoorData", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getIndoorData(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.IndoorData result;
            try {
                result = ref.getIndoorData();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::setIndoorDate", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.IndoorData var1 = (com.amap.api.services.poisearch.IndoorData) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setIndoorDate(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setIndoorDate(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getPhotos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getPhotos(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.poisearch.Photo> result;
            try {
                result = ref.getPhotos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.poisearch.Photo item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::setPhotos", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.poisearch.Photo> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.poisearch.Photo) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setPhotos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPhotos(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getPoiExtension", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getPoiExtension(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiItemExtension result;
            try {
                result = ref.getPoiExtension();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.core.PoiItem::setPoiExtension", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiItemExtension var1 = (com.amap.api.services.poisearch.PoiItemExtension) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setPoiExtension(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoiExtension(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getTypeCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTypeCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTypeCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setTypeCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setTypeCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTypeCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.PoiItem::getShopID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getShopID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getShopID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.PoiItem::setShopID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setShopID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setShopID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::getCityName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::getCityName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::setCityName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::setCityName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::getCityCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::getCityCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::setCityCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::setCityCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::getSuggestionNum", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::getSuggestionNum(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getSuggestionNum();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.core.SuggestionCity::setSuggestionNum", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.core.SuggestionCity ref = (com.amap.api.services.core.SuggestionCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SuggestionCity@" + refId + "::setSuggestionNum(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSuggestionNum(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.Photo::getTitle", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.Photo@" + refId + "::getTitle(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTitle();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.Photo::setTitle", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.Photo@" + refId + "::setTitle(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTitle(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.Photo::getUrl", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.Photo@" + refId + "::getUrl(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUrl();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.Photo::setUrl", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.Photo ref = (com.amap.api.services.poisearch.Photo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.Photo@" + refId + "::setUrl(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getPoiId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getPoiId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPoiId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setPoiId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setPoiId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoiId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getTitle", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getTitle(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTitle();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setTitle", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setTitle(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTitle(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getSubName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getSubName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSubName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setSubName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setSubName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSubName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setLatLonPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setLatLonPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLonPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getSnippet", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getSnippet(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSnippet();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setSnippet", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setSnippet(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSnippet(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::getSubTypeDes", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::getSubTypeDes(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSubTypeDes();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.SubPoiItem::setSubTypeDes", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.SubPoiItem ref = (com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.SubPoiItem@" + refId + "::setSubTypeDes(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSubTypeDes(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener::onPoiSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiResult var1 = (com.amap.api.services.poisearch.PoiResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener ref = (com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener@" + refId + "::onPoiSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onPoiSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener::onPoiItemSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.PoiItem var1 = (com.amap.api.services.core.PoiItem) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener ref = (com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener@" + refId + "::onPoiItemSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onPoiItemSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiItemExtension::getOpentime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiItemExtension ref = (com.amap.api.services.poisearch.PoiItemExtension) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiItemExtension@" + refId + "::getOpentime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOpentime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiItemExtension::getmRating", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiItemExtension ref = (com.amap.api.services.poisearch.PoiItemExtension) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiItemExtension@" + refId + "::getmRating(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getmRating();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getLowerLeft", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::getLowerLeft(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLowerLeft();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getUpperRight", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::getUpperRight(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getUpperRight();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getCenter", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::getCenter(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getCenter();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getRange", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::getRange(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRange();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getShape", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::getShape(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getShape();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::isDistanceSort", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::isDistanceSort(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isDistanceSort();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::getPolyGonList", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::getPolyGonList(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyGonList();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.SearchBound::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.SearchBound ref = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.SearchBound@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.SearchBound result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::createPagedResult", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.Query var0 = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get((int) args.get("var0"));
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.SearchBound var1 = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            List<String> var2 = (List<String>) args.get("var2");
            // list arg
            List<Integer> var3RefIdList = (List<Integer>) args.get("var3");
            List<com.amap.api.services.core.SuggestionCity> var3 = new ArrayList<>();
            for (int refId : var3RefIdList) {
                var3.add((com.amap.api.services.core.SuggestionCity) getHEAP().get(refId));
            }
            // jsonable arg
            int var4 = (int) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
            // list arg
            List<Integer> var6RefIdList = (List<Integer>) args.get("var6");
            List<com.amap.api.services.core.PoiItem> var6 = new ArrayList<>();
            for (int refId : var6RefIdList) {
                var6.add((com.amap.api.services.core.PoiItem) getHEAP().get(refId));
            }
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult::createPagedResult(" + var0 + var1 + var2 + var3 + var4 + var5 + var6 + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiResult result;
            try {
                result = com.amap.api.services.poisearch.PoiResult.createPagedResult(var0, var1, new ArrayList(var2), new ArrayList(var3), var4, var5, new ArrayList(var6));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::getPageCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult@" + refId + "::getPageCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.Query result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::getBound", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult@" + refId + "::getBound(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.SearchBound result;
            try {
                result = ref.getBound();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::getPois", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult@" + refId + "::getPois(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.PoiItem> result;
            try {
                result = ref.getPois();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.PoiItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::getSearchSuggestionKeywords", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult@" + refId + "::getSearchSuggestionKeywords(" + "" + ")");
            }
        
            // invoke native method
            List<String> result;
            try {
                result = ref.getSearchSuggestionKeywords();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiResult::getSearchSuggestionCitys", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiResult ref = (com.amap.api.services.poisearch.PoiResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiResult@" + refId + "::getSearchSuggestionCitys(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.SuggestionCity> result;
            try {
                result = ref.getSearchSuggestionCitys();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.SuggestionCity item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::setOnPoiSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::setOnPoiSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnPoiSearchListener(new com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.poisearch.PoiSearch::setOnPoiSearchListener::Callback");
        
                // call dart method
                @Override
                public void onPoiSearched(com.amap.api.services.poisearch.PoiResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPoiSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener::onPoiSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onPoiItemSearched(com.amap.api.services.core.PoiItem var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPoiItemSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener::onPoiItemSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::setLanguage", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::setLanguage(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLanguage(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::getLanguage", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::getLanguage(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLanguage();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::searchPOI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::searchPOI(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiResult result;
            try {
                result = ref.searchPOI();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::searchPOIAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::searchPOIAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchPOIAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::searchPOIId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::searchPOIId(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.PoiItem result;
            try {
                result = ref.searchPOIId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::searchPOIIdAsyn", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::searchPOIIdAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchPOIIdAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.Query var1 = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::setBound", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.SearchBound var1 = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::setBound(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBound(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.Query result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch::getBound", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch ref = (com.amap.api.services.poisearch.PoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch@" + refId + "::getBound(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.SearchBound result;
            try {
                result = ref.getBound();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getBuilding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getBuilding(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBuilding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setBuilding", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setBuilding(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBuilding(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getQueryString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getQueryString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getQueryString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setQueryLanguage", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setQueryLanguage(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQueryLanguage(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getCategory", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getCategory(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCategory();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getPageNum", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getPageNum(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageNum();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setPageNum", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setPageNum(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageNum(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setPageSize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setPageSize(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageSize(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getPageSize", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getPageSize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageSize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setCityLimit", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setCityLimit(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityLimit(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getCityLimit", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getCityLimit(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.getCityLimit();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::requireSubPois", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::requireSubPois(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.requireSubPois(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::isRequireSubPois", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::isRequireSubPois(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isRequireSubPois();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::isDistanceSort", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::isDistanceSort(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isDistanceSort();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setDistanceSort", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setDistanceSort(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistanceSort(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::getLocation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::getLocation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLocation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::setLocation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::setLocation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::queryEquals", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.Query var1 = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::queryEquals(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.queryEquals(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.PoiSearch.Query::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.PoiSearch.Query ref = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.PoiSearch.Query@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.Query result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.poisearch.IndoorData::getPoiId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.IndoorData@" + refId + "::getPoiId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPoiId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.IndoorData::setPoiId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.IndoorData@" + refId + "::setPoiId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoiId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.IndoorData::getFloor", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.IndoorData@" + refId + "::getFloor(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getFloor();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.IndoorData::setFloor", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.IndoorData@" + refId + "::setFloor(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFloor(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.poisearch.IndoorData::getFloorName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.IndoorData@" + refId + "::getFloorName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFloorName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.poisearch.IndoorData::setFloorName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.poisearch.IndoorData ref = (com.amap.api.services.poisearch.IndoorData) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.poisearch.IndoorData@" + refId + "::setFloorName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFloorName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.Railway::getID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Railway@" + refId + "::getID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.Railway::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Railway@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.Railway::setID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Railway@" + refId + "::setID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.Railway::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Railway ref = (com.amap.api.services.route.Railway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Railway@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusPath::getCost", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::getCost(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getCost();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.BusPath::setCost", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::setCost(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCost(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusPath::isNightBus", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::isNightBus(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isNightBus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.BusPath::setNightBus", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::setNightBus(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNightBus(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusPath::getWalkDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::getWalkDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getWalkDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.BusPath::setWalkDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::setWalkDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWalkDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusPath::getBusDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::getBusDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getBusDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.BusPath::setBusDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::setBusDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusPath::getSteps", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::getSteps(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.BusStep> result;
            try {
                result = ref.getSteps();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.BusStep item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusPath::setSteps", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.BusStep> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.BusStep) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusPath ref = (com.amap.api.services.route.BusPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusPath@" + refId + "::setSteps(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSteps(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveRoutePlanResult::getPaths", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRoutePlanResult@" + refId + "::getPaths(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.DrivePlanPath> result;
            try {
                result = ref.getPaths();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.DrivePlanPath item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveRoutePlanResult::setPaths", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.DrivePlanPath> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRoutePlanResult@" + refId + "::setPaths(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPaths(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveRoutePlanResult::getTimeInfos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRoutePlanResult@" + refId + "::getTimeInfos(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TimeInfo> result;
            try {
                result = ref.getTimeInfos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TimeInfo item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveRoutePlanResult::setTimeInfos", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TimeInfo> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TimeInfo) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRoutePlanResult@" + refId + "::setTimeInfos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTimeInfos(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveRoutePlanResult::setDrivePlanQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRoutePlanResult ref = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRoutePlanResult@" + refId + "::setDrivePlanQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDrivePlanQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setMode", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setMode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setMode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckSize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setTruckSize(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckSize(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckHeight", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setTruckHeight(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckHeight(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckWidth", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setTruckWidth(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckWidth(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckLoad", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setTruckLoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckLoad(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckWeight", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setTruckWeight(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckWeight(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::setTruckAxis", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::setTruckAxis(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckAxis(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::hasPassPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::hasPassPoint(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.hasPassPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getPassedPointStr", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getPassedPointStr(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPassedPointStr();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckSize", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getTruckSize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getTruckSize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckHeight", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getTruckHeight(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTruckHeight();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckWidth", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getTruckWidth(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTruckWidth();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckLoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getTruckLoad(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTruckLoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckWeight", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getTruckWeight(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTruckWeight();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::getTruckAxis", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::getTruckAxis(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTruckAxis();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.TruckRouteQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.TruckRouteQuery ref = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.TruckRouteQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.TruckRouteQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TMC::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TMC@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TMC::getStatus", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TMC@" + refId + "::getStatus(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStatus();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TMC::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TMC@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TMC::setStatus", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TMC@" + refId + "::setStatus(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStatus(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TMC::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TMC@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TMC::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TMC ref = (com.amap.api.services.route.TMC) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TMC@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusWalkItem::getOrigin", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusWalkItem@" + refId + "::getOrigin(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getOrigin();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteBusWalkItem::setOrigin", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusWalkItem@" + refId + "::setOrigin(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrigin(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusWalkItem::getDestination", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusWalkItem@" + refId + "::getDestination(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getDestination();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteBusWalkItem::setDestination", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusWalkItem ref = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusWalkItem@" + refId + "::setDestination(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestination(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteResult::getStartPos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteResult@" + refId + "::getStartPos(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getStartPos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteResult::setStartPos", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteResult@" + refId + "::setStartPos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStartPos(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteResult::getTargetPos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteResult@" + refId + "::getTargetPos(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getTargetPos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteResult::setTargetPos", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteResult ref = (com.amap.api.services.route.RouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteResult@" + refId + "::setTargetPos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTargetPos(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::setRouteSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::setRouteSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setRouteSearchListener(new com.amap.api.services.route.RouteSearch.OnRouteSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.route.RouteSearch::setRouteSearchListener::Callback");
        
                // call dart method
                @Override
                public void onBusRouteSearched(com.amap.api.services.route.BusRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onBusRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onDriveRouteSearched(com.amap.api.services.route.DriveRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDriveRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onDriveRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWalkRouteSearched(com.amap.api.services.route.WalkRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWalkRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onWalkRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onRideRouteSearched(com.amap.api.services.route.RideRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRideRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onRideRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::setOnTruckRouteSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::setOnTruckRouteSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnTruckRouteSearchListener(new com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.route.RouteSearch::setOnTruckRouteSearchListener::Callback");
        
                // call dart method
                @Override
                public void onTruckRouteSearched(com.amap.api.services.route.TruckRouteRestult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onTruckRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener::onTruckRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::setOnRoutePlanSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::setOnRoutePlanSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnRoutePlanSearchListener(new com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.route.RouteSearch::setOnRoutePlanSearchListener::Callback");
        
                // call dart method
                @Override
                public void onDriveRoutePlanSearched(com.amap.api.services.route.DriveRoutePlanResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDriveRoutePlanSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener::onDriveRoutePlanSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateWalkRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateWalkRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.WalkRouteResult result;
            try {
                result = ref.calculateWalkRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateWalkRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateWalkRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateWalkRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateBusRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateBusRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.BusRouteResult result;
            try {
                result = ref.calculateBusRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateBusRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateBusRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateBusRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateDriveRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateDriveRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DriveRouteResult result;
            try {
                result = ref.calculateDriveRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateDriveRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateDriveRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateDriveRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateRideRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateRideRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateRideRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateRideRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateRideRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RideRouteResult result;
            try {
                result = ref.calculateRideRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateTruckRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateTruckRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.TruckRouteRestult result;
            try {
                result = ref.calculateTruckRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateTruckRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateTruckRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateTruckRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateDrivePlan", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateDrivePlan(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DriveRoutePlanResult result;
            try {
                result = ref.calculateDrivePlan(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch::calculateDrivePlanAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch ref = (com.amap.api.services.route.RouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch@" + refId + "::calculateDrivePlanAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateDrivePlanAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusStep::getWalk", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::getWalk(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteBusWalkItem result;
            try {
                result = ref.getWalk();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusStep::setWalk", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteBusWalkItem var1 = (com.amap.api.services.route.RouteBusWalkItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::setWalk(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWalk(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusStep::getBusLines", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::getBusLines(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RouteBusLineItem> result;
            try {
                result = ref.getBusLines();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RouteBusLineItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusStep::setBusLines", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RouteBusLineItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::setBusLines(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusLines(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusStep::getEntrance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::getEntrance(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.Doorway result;
            try {
                result = ref.getEntrance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusStep::setEntrance", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.Doorway var1 = (com.amap.api.services.route.Doorway) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::setEntrance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setEntrance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusStep::getExit", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::getExit(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.Doorway result;
            try {
                result = ref.getExit();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusStep::setExit", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.Doorway var1 = (com.amap.api.services.route.Doorway) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::setExit(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setExit(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusStep::getRailway", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::getRailway(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteRailwayItem result;
            try {
                result = ref.getRailway();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusStep::setRailway", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteRailwayItem var1 = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::setRailway(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRailway(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusStep::getTaxi", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::getTaxi(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.TaxiItem result;
            try {
                result = ref.getTaxi();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusStep::setTaxi", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.TaxiItem var1 = (com.amap.api.services.route.TaxiItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusStep ref = (com.amap.api.services.route.BusStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusStep@" + refId + "::setTaxi(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTaxi(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TaxiItem::getOrigin", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::getOrigin(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getOrigin();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TaxiItem::getDestination", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::getDestination(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getDestination();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TaxiItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TaxiItem::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TaxiItem::getmSname", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::getmSname(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getmSname();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TaxiItem::getmTname", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::getmTname(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getmTname();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TaxiItem::setOrigin", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::setOrigin(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrigin(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TaxiItem::setDestination", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::setDestination(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestination(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TaxiItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TaxiItem::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TaxiItem::setSname", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::setSname(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSname(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TaxiItem::setTname", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TaxiItem ref = (com.amap.api.services.route.TaxiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TaxiItem@" + refId + "::setTname(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTname(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusRouteResult::getTaxiCost", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusRouteResult@" + refId + "::getTaxiCost(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTaxiCost();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.BusRouteResult::setTaxiCost", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusRouteResult@" + refId + "::setTaxiCost(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTaxiCost(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusRouteResult::getPaths", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusRouteResult@" + refId + "::getPaths(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.BusPath> result;
            try {
                result = ref.getPaths();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.BusPath item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusRouteResult::setPaths", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.BusPath> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.BusPath) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusRouteResult@" + refId + "::setPaths(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPaths(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.BusRouteResult::getBusQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusRouteResult@" + refId + "::getBusQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.BusRouteQuery result;
            try {
                result = ref.getBusQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.BusRouteResult::setBusQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.BusRouteResult ref = (com.amap.api.services.route.BusRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.BusRouteResult@" + refId + "::setBusQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RoutePlanResult::getStartPos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RoutePlanResult@" + refId + "::getStartPos(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getStartPos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RoutePlanResult::setStartPos", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RoutePlanResult@" + refId + "::setStartPos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStartPos(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RoutePlanResult::getTargetPos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RoutePlanResult@" + refId + "::getTargetPos(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getTargetPos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RoutePlanResult::setTargetPos", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RoutePlanResult ref = (com.amap.api.services.route.RoutePlanResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RoutePlanResult@" + refId + "::setTargetPos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTargetPos(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener::onDistanceSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DistanceResult var1 = (com.amap.api.services.route.DistanceResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener ref = (com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener@" + refId + "::onDistanceSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onDistanceSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwaySpace::getCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwaySpace ref = (com.amap.api.services.route.RailwaySpace) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwaySpace@" + refId + "::getCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwaySpace::getCost", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwaySpace ref = (com.amap.api.services.route.RailwaySpace) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwaySpace@" + refId + "::getCost(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getCost();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::setTruckQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::setTruckQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTruckQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::setPaths", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TruckPath> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TruckPath) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::setPaths(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPaths(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::setStartPos", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::setStartPos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStartPos(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::setTargetPos", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::setTargetPos(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTargetPos(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::getTruckQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::getTruckQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.TruckRouteQuery result;
            try {
                result = ref.getTruckQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::getPaths", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::getPaths(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TruckPath> result;
            try {
                result = ref.getPaths();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TruckPath item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::getStartPos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::getStartPos(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getStartPos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TruckRouteRestult::getTargetPos", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckRouteRestult ref = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckRouteRestult@" + refId + "::getTargetPos(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getTargetPos();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.RideRouteQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.RideRouteQuery ref = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.RideRouteQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.RideRouteQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.RideRouteQuery ref = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.RideRouteQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.RideRouteQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.RideRouteQuery ref = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.RideRouteQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.RideRouteQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getCarType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getCarType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCarType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getPassedByPoints", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getPassedByPoints(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPassedByPoints();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getAvoidRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getAvoidRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAvoidRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getPassedPointStr", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getPassedPointStr(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPassedPointStr();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::hasPassPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::hasPassPoint(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.hasPassPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::getAvoidpolygonsStr", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::getAvoidpolygonsStr(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAvoidpolygonsStr();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::hasAvoidpolygons", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::hasAvoidpolygons(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.hasAvoidpolygons();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::hasAvoidRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::hasAvoidRoad(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.hasAvoidRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.DriveRouteQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::isUseFerry", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::isUseFerry(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isUseFerry();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::setUseFerry", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::setUseFerry(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUseFerry(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DriveRouteQuery::setCarType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DriveRouteQuery ref = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DriveRouteQuery@" + refId + "::setCarType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCarType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getTime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getTrip", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getTrip(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTrip();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getDeparturestop", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getDeparturestop(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RailwayStationItem result;
            try {
                result = ref.getDeparturestop();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getArrivalstop", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getArrivalstop(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RailwayStationItem result;
            try {
                result = ref.getArrivalstop();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getViastops", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getViastops(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RailwayStationItem> result;
            try {
                result = ref.getViastops();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RailwayStationItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getAlters", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getAlters(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.Railway> result;
            try {
                result = ref.getAlters();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.Railway item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::getSpaces", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::getSpaces(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RailwaySpace> result;
            try {
                result = ref.getSpaces();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RailwaySpace item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setTime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setTime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setTrip", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setTrip(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTrip(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setDeparturestop", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RailwayStationItem var1 = (com.amap.api.services.route.RailwayStationItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setDeparturestop(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDeparturestop(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setArrivalstop", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RailwayStationItem var1 = (com.amap.api.services.route.RailwayStationItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setArrivalstop(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setArrivalstop(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setViastops", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RailwayStationItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setViastops(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setViastops(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setAlters", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.Railway> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.Railway) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setAlters(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAlters(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteRailwayItem::setSpaces", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RailwaySpace> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RailwaySpace) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteRailwayItem ref = (com.amap.api.services.route.RouteRailwayItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteRailwayItem@" + refId + "::setSpaces(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSpaces(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getInstruction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getInstruction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getInstruction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setInstruction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setInstruction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setInstruction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getOrientation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getOrientation(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOrientation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setOrientation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setOrientation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrientation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.WalkStep::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkStep::getAssistantAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::getAssistantAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAssistantAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.WalkStep::setAssistantAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkStep ref = (com.amap.api.services.route.WalkStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkStep@" + refId + "::setAssistantAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAssistantAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::getID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::getID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::getLocation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::getLocation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLocation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::getAdcode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::getAdcode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdcode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::getTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::getTime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::isStart", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::isStart(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isStart();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::isEnd", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::isEnd(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isEnd();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::getWait", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::getWait(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getWait();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setLocation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setLocation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setAdcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setAdcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setTime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setTime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setisStart", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setisStart(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setisStart(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setisEnd", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setisEnd(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setisEnd(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RailwayStationItem::setWait", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RailwayStationItem ref = (com.amap.api.services.route.RailwayStationItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RailwayStationItem@" + refId + "::setWait(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWait(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideRouteResult::getPaths", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideRouteResult ref = (com.amap.api.services.route.RideRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideRouteResult@" + refId + "::getPaths(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RidePath> result;
            try {
                result = ref.getPaths();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RidePath item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RideRouteResult::setPaths", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RidePath> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RidePath) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideRouteResult ref = (com.amap.api.services.route.RideRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideRouteResult@" + refId + "::setPaths(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPaths(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideRouteResult::getRideQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideRouteResult ref = (com.amap.api.services.route.RideRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideRouteResult@" + refId + "::getRideQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.RideRouteQuery result;
            try {
                result = ref.getRideQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RideRouteResult::setRideQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideRouteResult ref = (com.amap.api.services.route.RideRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideRouteResult@" + refId + "::setRideQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRideQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getFrom", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getFrom(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getFrom();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getStartPoiID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getStartPoiID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStartPoiID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::setStartPoiID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::setStartPoiID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStartPoiID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getDestinationPoiID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getDestinationPoiID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDestinationPoiID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::setDestinationPoiID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::setDestinationPoiID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestinationPoiID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getOriginType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getOriginType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOriginType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::setOriginType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::setOriginType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOriginType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getDestinationType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getDestinationType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDestinationType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::setDestinationType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::setDestinationType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestinationType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getPlateProvince", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getPlateProvince(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPlateProvince();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::setPlateProvince", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::setPlateProvince(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPlateProvince(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::getPlateNumber", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::getPlateNumber(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPlateNumber();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::setPlateNumber", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::setPlateNumber(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPlateNumber(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.FromAndTo::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.FromAndTo ref = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.FromAndTo@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RidePath::getSteps", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RidePath ref = (com.amap.api.services.route.RidePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RidePath@" + refId + "::getSteps(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RideStep> result;
            try {
                result = ref.getSteps();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RideStep item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RidePath::setSteps", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RideStep> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RideStep) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RidePath ref = (com.amap.api.services.route.RidePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RidePath@" + refId + "::setSteps(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSteps(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::getNightFlag", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::getNightFlag(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getNightFlag();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::getCityd", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::getCityd(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityd();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::setCityd", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::setCityd(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityd(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.BusRouteQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.BusRouteQuery ref = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.BusRouteQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.BusRouteQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RideStep::getInstruction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getInstruction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getInstruction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setInstruction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setInstruction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setInstruction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getOrientation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getOrientation(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOrientation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setOrientation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setOrientation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrientation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RideStep::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RideStep::getAssistantAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::getAssistantAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAssistantAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RideStep::setAssistantAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RideStep ref = (com.amap.api.services.route.RideStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RideStep@" + refId + "::setAssistantAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAssistantAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearchCity::getDistricts", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearchCity ref = (com.amap.api.services.route.RouteSearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearchCity@" + refId + "::getDistricts(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.District> result;
            try {
                result = ref.getDistricts();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.District item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearchCity::setDistricts", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.District> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.District) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearchCity ref = (com.amap.api.services.route.RouteSearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearchCity@" + refId + "::setDistricts(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistricts(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onBusRouteSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.BusRouteResult var1 = (com.amap.api.services.route.BusRouteResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.OnRouteSearchListener ref = (com.amap.api.services.route.RouteSearch.OnRouteSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.OnRouteSearchListener@" + refId + "::onBusRouteSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onBusRouteSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onDriveRouteSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DriveRouteResult var1 = (com.amap.api.services.route.DriveRouteResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.OnRouteSearchListener ref = (com.amap.api.services.route.RouteSearch.OnRouteSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.OnRouteSearchListener@" + refId + "::onDriveRouteSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onDriveRouteSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onWalkRouteSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.WalkRouteResult var1 = (com.amap.api.services.route.WalkRouteResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.OnRouteSearchListener ref = (com.amap.api.services.route.RouteSearch.OnRouteSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.OnRouteSearchListener@" + refId + "::onWalkRouteSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onWalkRouteSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onRideRouteSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RideRouteResult var1 = (com.amap.api.services.route.RideRouteResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.OnRouteSearchListener ref = (com.amap.api.services.route.RouteSearch.OnRouteSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.OnRouteSearchListener@" + refId + "::onRideRouteSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onRideRouteSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceResult::setDistanceQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DistanceSearch.DistanceQuery var1 = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceResult ref = (com.amap.api.services.route.DistanceResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceResult@" + refId + "::setDistanceQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistanceQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceResult::getDistanceQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceResult ref = (com.amap.api.services.route.DistanceResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceResult@" + refId + "::getDistanceQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DistanceSearch.DistanceQuery result;
            try {
                result = ref.getDistanceQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DistanceResult::getDistanceResults", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceResult ref = (com.amap.api.services.route.DistanceResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceResult@" + refId + "::getDistanceResults(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.DistanceItem> result;
            try {
                result = ref.getDistanceResults();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.DistanceItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DistanceResult::setDistanceResults", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.DistanceItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.DistanceItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceResult ref = (com.amap.api.services.route.DistanceResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceResult@" + refId + "::setDistanceResults(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistanceResults(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.WalkRouteQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.WalkRouteQuery ref = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.WalkRouteQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.WalkRouteQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.WalkRouteQuery ref = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.WalkRouteQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.WalkRouteQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.WalkRouteQuery ref = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.WalkRouteQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.WalkRouteQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.District::getDistrictName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.District ref = (com.amap.api.services.route.District) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.District@" + refId + "::getDistrictName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDistrictName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.District::setDistrictName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.District ref = (com.amap.api.services.route.District) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.District@" + refId + "::setDistrictName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrictName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.District::getDistrictAdcode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.District ref = (com.amap.api.services.route.District) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.District@" + refId + "::getDistrictAdcode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDistrictAdcode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.District::setDistrictAdcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.District ref = (com.amap.api.services.route.District) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.District@" + refId + "::setDistrictAdcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrictAdcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkRouteResult::getPaths", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkRouteResult ref = (com.amap.api.services.route.WalkRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkRouteResult@" + refId + "::getPaths(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.WalkPath> result;
            try {
                result = ref.getPaths();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.WalkPath item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.WalkRouteResult::setPaths", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.WalkPath> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.WalkPath) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkRouteResult ref = (com.amap.api.services.route.WalkRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkRouteResult@" + refId + "::setPaths(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPaths(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkRouteResult::getWalkQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkRouteResult ref = (com.amap.api.services.route.WalkRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkRouteResult@" + refId + "::getWalkQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.WalkRouteQuery result;
            try {
                result = ref.getWalkQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.WalkRouteResult::setWalkQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkRouteResult ref = (com.amap.api.services.route.WalkRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkRouteResult@" + refId + "::setWalkQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWalkQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DistanceSearch.DistanceQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::getOrigins", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::getOrigins(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getOrigins();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::getDestination", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::getDestination(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getDestination();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::setType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::setType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::setOrigins", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::setOrigins(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrigins(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::addOrigins", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::addOrigins(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.addOrigins(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch.DistanceQuery::setDestination", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch.DistanceQuery ref = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch.DistanceQuery@" + refId + "::setDestination(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestination(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.SearchCity::getSearchCityName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.SearchCity ref = (com.amap.api.services.route.SearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.SearchCity@" + refId + "::getSearchCityName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSearchCityName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.SearchCity::setSearchCityName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.SearchCity ref = (com.amap.api.services.route.SearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.SearchCity@" + refId + "::setSearchCityName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSearchCityName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.SearchCity::getSearchCitycode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.SearchCity ref = (com.amap.api.services.route.SearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.SearchCity@" + refId + "::getSearchCitycode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSearchCitycode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.SearchCity::setSearchCitycode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.SearchCity ref = (com.amap.api.services.route.SearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.SearchCity@" + refId + "::setSearchCitycode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSearchCitycode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.SearchCity::getSearchCityAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.SearchCity ref = (com.amap.api.services.route.SearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.SearchCity@" + refId + "::getSearchCityAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSearchCityAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.SearchCity::setSearchCityhAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.SearchCity ref = (com.amap.api.services.route.SearchCity) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.SearchCity@" + refId + "::setSearchCityhAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSearchCityhAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener::onDriveRoutePlanSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DriveRoutePlanResult var1 = (com.amap.api.services.route.DriveRoutePlanResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener ref = (com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener@" + refId + "::onDriveRoutePlanSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onDriveRoutePlanSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch::setDistanceSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch ref = (com.amap.api.services.route.DistanceSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch@" + refId + "::setDistanceSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setDistanceSearchListener(new com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.route.DistanceSearch::setDistanceSearchListener::Callback");
        
                // call dart method
                @Override
                public void onDistanceSearched(com.amap.api.services.route.DistanceResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDistanceSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener::onDistanceSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceSearch::calculateRouteDistance", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DistanceSearch.DistanceQuery var1 = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch ref = (com.amap.api.services.route.DistanceSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch@" + refId + "::calculateRouteDistance(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DistanceResult result;
            try {
                result = ref.calculateRouteDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DistanceSearch::calculateRouteDistanceAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DistanceSearch.DistanceQuery var1 = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceSearch ref = (com.amap.api.services.route.DistanceSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceSearch@" + refId + "::calculateRouteDistanceAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateRouteDistanceAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.WalkPath::getSteps", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkPath ref = (com.amap.api.services.route.WalkPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkPath@" + refId + "::getSteps(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.WalkStep> result;
            try {
                result = ref.getSteps();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.WalkStep item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.WalkPath::setSteps", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.WalkStep> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.WalkStep) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.WalkPath ref = (com.amap.api.services.route.WalkPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.WalkPath@" + refId + "::setSteps(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSteps(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::getDepartureBusStation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::getDepartureBusStation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationItem result;
            try {
                result = ref.getDepartureBusStation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::setDepartureBusStation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationItem var1 = (com.amap.api.services.busline.BusStationItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::setDepartureBusStation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDepartureBusStation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::getArrivalBusStation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::getArrivalBusStation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationItem result;
            try {
                result = ref.getArrivalBusStation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::setArrivalBusStation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationItem var1 = (com.amap.api.services.busline.BusStationItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::setArrivalBusStation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setArrivalBusStation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::getPassStationNum", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::getPassStationNum(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPassStationNum();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::setPassStationNum", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::setPassStationNum(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPassStationNum(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::getPassStations", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::getPassStations(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.busline.BusStationItem> result;
            try {
                result = ref.getPassStations();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.busline.BusStationItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::setPassStations", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.busline.BusStationItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.busline.BusStationItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::setPassStations(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPassStations(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteBusLineItem::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteBusLineItem ref = (com.amap.api.services.route.RouteBusLineItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteBusLineItem@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.FromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getDestParentPoiID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getDestParentPoiID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDestParentPoiID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getCarType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getCarType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCarType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getFirstTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getFirstTime(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getFirstTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getInterval", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getInterval(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getInterval();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::getCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::getCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.DrivePlanQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::setDestParentPoiID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::setDestParentPoiID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestParentPoiID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::setMode", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::setMode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setMode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.RouteSearch.DrivePlanQuery::setCarType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.DrivePlanQuery ref = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.DrivePlanQuery@" + refId + "::setCarType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCarType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::getRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::getRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::setRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::setRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::getToll", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::getToll(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.getToll();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::setToll", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::setToll(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setToll(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DrivePlanStep::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanStep ref = (com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanStep@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfo::getStartTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfo ref = (com.amap.api.services.route.TimeInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfo@" + refId + "::getStartTime(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getStartTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TimeInfo::setStartTime", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfo ref = (com.amap.api.services.route.TimeInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfo@" + refId + "::setStartTime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStartTime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfo::getElements", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfo ref = (com.amap.api.services.route.TimeInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfo@" + refId + "::getElements(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TimeInfosElement> result;
            try {
                result = ref.getElements();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TimeInfosElement item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TimeInfo::setElements", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TimeInfosElement> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfo ref = (com.amap.api.services.route.TimeInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfo@" + refId + "::setElements(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setElements(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getInstruction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getInstruction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getInstruction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setInstruction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setInstruction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setInstruction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getOrientation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getOrientation(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOrientation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setOrientation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setOrientation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrientation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getTolls", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getTolls(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTolls();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setTolls", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setTolls(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTolls(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getTollDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getTollDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTollDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setTollDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setTollDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTollDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getTollRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getTollRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTollRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setTollRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setTollRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTollRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveStep::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getAssistantAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getAssistantAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAssistantAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveStep::setAssistantAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setAssistantAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAssistantAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getRouteSearchCityList", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getRouteSearchCityList(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RouteSearchCity> result;
            try {
                result = ref.getRouteSearchCityList();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RouteSearchCity item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveStep::setRouteSearchCityList", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RouteSearchCity> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RouteSearchCity) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setRouteSearchCityList(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRouteSearchCityList(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveStep::getTMCs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::getTMCs(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TMC> result;
            try {
                result = ref.getTMCs();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TMC item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveStep::setTMCs", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TMC> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TMC) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveStep ref = (com.amap.api.services.route.DriveStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveStep@" + refId + "::setTMCs(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTMCs(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setInstruction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setInstruction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setInstruction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setOrientation", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setOrientation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOrientation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setTolls", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setTolls(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTolls(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setTollDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setTollDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTollDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setTollRoad", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setTollRoad(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTollRoad(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setPolyline", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setPolyline(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPolyline(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setAssistantAction", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setAssistantAction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAssistantAction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setRouteSearchCityList", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.RouteSearchCity> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.RouteSearchCity) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setRouteSearchCityList(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRouteSearchCityList(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::setTMCs", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TMC> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TMC) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::setTMCs(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTMCs(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckStep::getInstruction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getInstruction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getInstruction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getOrientation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getOrientation(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getOrientation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getTolls", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getTolls(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTolls();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getTollDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getTollDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTollDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getTollRoad", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getTollRoad(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTollRoad();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getPolyline", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getPolyline(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyline();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TruckStep::getAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getAssistantAction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getAssistantAction(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAssistantAction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckStep::getRouteSearchCityList", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getRouteSearchCityList(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.RouteSearchCity> result;
            try {
                result = ref.getRouteSearchCityList();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.RouteSearchCity item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.TruckStep::getTMCs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckStep ref = (com.amap.api.services.route.TruckStep) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckStep@" + refId + "::getTMCs(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TMC> result;
            try {
                result = ref.getTMCs();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TMC item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveRouteResult::getTaxiCost", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRouteResult ref = (com.amap.api.services.route.DriveRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRouteResult@" + refId + "::getTaxiCost(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTaxiCost();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DriveRouteResult::setTaxiCost", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRouteResult ref = (com.amap.api.services.route.DriveRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRouteResult@" + refId + "::setTaxiCost(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTaxiCost(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveRouteResult::getPaths", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRouteResult ref = (com.amap.api.services.route.DriveRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRouteResult@" + refId + "::getPaths(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.DrivePath> result;
            try {
                result = ref.getPaths();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.DrivePath item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveRouteResult::setPaths", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.DrivePath> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.DrivePath) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRouteResult ref = (com.amap.api.services.route.DriveRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRouteResult@" + refId + "::setPaths(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPaths(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DriveRouteResult::getDriveQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRouteResult ref = (com.amap.api.services.route.DriveRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRouteResult@" + refId + "::getDriveQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RouteSearch.DriveRouteQuery result;
            try {
                result = ref.getDriveQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DriveRouteResult::setDriveQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DriveRouteResult ref = (com.amap.api.services.route.DriveRouteResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DriveRouteResult@" + refId + "::setDriveQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDriveQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePath::getStrategy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::getStrategy(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStrategy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePath::setStrategy", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::setStrategy(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStrategy(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePath::getTolls", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::getTolls(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTolls();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePath::setTolls", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::setTolls(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTolls(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePath::getTollDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::getTollDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTollDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePath::setTollDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::setTollDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTollDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePath::getTotalTrafficlights", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::getTotalTrafficlights(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getTotalTrafficlights();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePath::setTotalTrafficlights", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::setTotalTrafficlights(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTotalTrafficlights(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePath::getSteps", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::getSteps(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.DriveStep> result;
            try {
                result = ref.getSteps();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.DriveStep item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DrivePath::setSteps", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.DriveStep> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.DriveStep) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::setSteps(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSteps(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePath::getRestriction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::getRestriction(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRestriction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePath::setRestriction", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePath ref = (com.amap.api.services.route.DrivePath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePath@" + refId + "::setRestriction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRestriction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setStrategy", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setStrategy(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStrategy(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setTolls", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setTolls(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTolls(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setTollDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setTollDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTollDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setTotalTrafficlights", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setTotalTrafficlights(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTotalTrafficlights(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setRestriction", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setRestriction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRestriction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::setSteps", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TruckStep> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TruckStep) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::setSteps(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSteps(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TruckPath::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getStrategy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getStrategy(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStrategy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getTolls", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getTolls(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTolls();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getTollDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getTollDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTollDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getTotalTrafficlights", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getTotalTrafficlights(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getTotalTrafficlights();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getRestriction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getRestriction(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRestriction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TruckPath::getSteps", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TruckPath ref = (com.amap.api.services.route.TruckPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TruckPath@" + refId + "::getSteps(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TruckStep> result;
            try {
                result = ref.getSteps();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TruckStep item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.Doorway::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Doorway ref = (com.amap.api.services.route.Doorway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Doorway@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.Doorway::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Doorway ref = (com.amap.api.services.route.Doorway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Doorway@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.Doorway::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Doorway ref = (com.amap.api.services.route.Doorway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Doorway@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.Doorway::setLatLonPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Doorway ref = (com.amap.api.services.route.Doorway) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Doorway@" + refId + "::setLatLonPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLonPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanPath::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanPath ref = (com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanPath@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePlanPath::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanPath ref = (com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanPath@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanPath::getTrafficLights", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanPath ref = (com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanPath@" + refId + "::getTrafficLights(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTrafficLights();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DrivePlanPath::setTrafficLights", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanPath ref = (com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanPath@" + refId + "::setTrafficLights(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTrafficLights(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DrivePlanPath::getSteps", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanPath ref = (com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanPath@" + refId + "::getSteps(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.DrivePlanStep> result;
            try {
                result = ref.getSteps();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.DrivePlanStep item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.DrivePlanPath::setSteps", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.DrivePlanStep> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.DrivePlanStep) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DrivePlanPath ref = (com.amap.api.services.route.DrivePlanPath) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DrivePlanPath@" + refId + "::setSteps(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSteps(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::getPathindex", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::getPathindex(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPathindex();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::setPathindex", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::setPathindex(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPathindex(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::getTolls", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::getTolls(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getTolls();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::setTolls", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::setTolls(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTolls(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::getRestriction", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::getRestriction(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRestriction();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::setRestriction", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::setRestriction(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRestriction(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::setTMCs", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.route.TMC> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.route.TMC) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::setTMCs(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTMCs(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.TimeInfosElement::getTMCs", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.TimeInfosElement ref = (com.amap.api.services.route.TimeInfosElement) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.TimeInfosElement@" + refId + "::getTMCs(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.route.TMC> result;
            try {
                result = ref.getTMCs();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.route.TMC item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener::onTruckRouteSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.TruckRouteRestult var1 = (com.amap.api.services.route.TruckRouteRestult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener ref = (com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener@" + refId + "::onTruckRouteSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onTruckRouteSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceItem::getOriginId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::getOriginId(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getOriginId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceItem::getDestId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::getDestId(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDestId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceItem::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceItem::getErrorInfo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::getErrorInfo(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getErrorInfo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceItem::getErrorCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::getErrorCode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getErrorCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.DistanceItem::setOriginId", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::setOriginId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setOriginId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceItem::setDestId", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::setDestId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDestId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceItem::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceItem::setErrorInfo", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::setErrorInfo(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setErrorInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.DistanceItem::setErrorCode", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.DistanceItem@" + refId + "::setErrorCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setErrorCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.Path::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Path ref = (com.amap.api.services.route.Path) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Path@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.Path::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Path ref = (com.amap.api.services.route.Path) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Path@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.route.Path::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Path ref = (com.amap.api.services.route.Path) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Path@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.route.Path::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.route.Path ref = (com.amap.api.services.route.Path) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.route.Path@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::setId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::setId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::getCityCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::getCityCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Road::setCityCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::setCityCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::getRoadWidth", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::getRoadWidth(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getRoadWidth();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Road::setRoadWidth", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::setRoadWidth(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoadWidth(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Road::setType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::setType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::getCenterPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::getCenterPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getCenterPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.road.Road::setCenterPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::setCenterPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCenterPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Road::getId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::getId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Road::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Road ref = (com.amap.api.services.road.Road) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Road@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Crossroad::getDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::getDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::setDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::setDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Crossroad::getFirstRoadId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::getFirstRoadId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFirstRoadId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::setFirstRoadId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::setFirstRoadId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFirstRoadId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Crossroad::getFirstRoadName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::getFirstRoadName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFirstRoadName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::setFirstRoadName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::setFirstRoadName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFirstRoadName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Crossroad::getSecondRoadId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::getSecondRoadId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSecondRoadId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::setSecondRoadId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::setSecondRoadId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSecondRoadId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.road.Crossroad::getSecondRoadName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::getSecondRoadName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSecondRoadName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.road.Crossroad::setSecondRoadName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.road.Crossroad ref = (com.amap.api.services.road.Crossroad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.road.Crossroad@" + refId + "::setSecondRoadName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSecondRoadName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyListener::onUserInfoCleared", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyListener ref = (com.amap.api.services.nearby.NearbySearch.NearbyListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyListener@" + refId + "::onUserInfoCleared(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onUserInfoCleared(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.NearbySearchResult var1 = (com.amap.api.services.nearby.NearbySearchResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyListener ref = (com.amap.api.services.nearby.NearbySearch.NearbyListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyListener@" + refId + "::onNearbyInfoSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onNearbyInfoSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoUploaded", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyListener ref = (com.amap.api.services.nearby.NearbySearch.NearbyListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyListener@" + refId + "::onNearbyInfoUploaded(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onNearbyInfoUploaded(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.UploadInfoCallback::OnUploadInfoCallback", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfoCallback ref = (com.amap.api.services.nearby.UploadInfoCallback) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfoCallback@" + refId + "::OnUploadInfoCallback(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.nearby.UploadInfo result;
            try {
                result = ref.OnUploadInfoCallback();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::setUserID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::setUserID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUserID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::getUserID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::getUserID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUserID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::getPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::getPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::setPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::setPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::setTimeStamp", (args, methodResult) -> {
            // args
            // jsonable arg
            long var1 = (long) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::setTimeStamp(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTimeStamp(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::getTimeStamp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::getTimeStamp(" + "" + ")");
            }
        
            // invoke native method
            long result;
            try {
                result = ref.getTimeStamp();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::setDrivingDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::setDrivingDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDrivingDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbyInfo::getDrivingDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbyInfo ref = (com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbyInfo@" + refId + "::getDrivingDistance(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDrivingDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.UploadInfo::setPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfo ref = (com.amap.api.services.nearby.UploadInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfo@" + refId + "::setPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.UploadInfo::getPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfo ref = (com.amap.api.services.nearby.UploadInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfo@" + refId + "::getPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.UploadInfo::setUserID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfo ref = (com.amap.api.services.nearby.UploadInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfo@" + refId + "::setUserID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUserID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.UploadInfo::getUserID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfo ref = (com.amap.api.services.nearby.UploadInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfo@" + refId + "::getUserID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUserID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.UploadInfo::getCoordType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfo ref = (com.amap.api.services.nearby.UploadInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfo@" + refId + "::getCoordType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCoordType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.UploadInfo::setCoordType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.UploadInfo ref = (com.amap.api.services.nearby.UploadInfo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.UploadInfo@" + refId + "::setCoordType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCoordType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::getInstance", (args, methodResult) -> {
            // args
            // ref arg
            android.content.Context var0 = (android.content.Context) getHEAP().get((int) args.get("var0"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch::getInstance(" + var0 + ")");
            }
        
            // invoke native method
            com.amap.api.services.nearby.NearbySearch result;
            try {
                result = com.amap.api.services.nearby.NearbySearch.getInstance(var0);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::addNearbyListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::addNearbyListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.addNearbyListener(new com.amap.api.services.nearby.NearbySearch.NearbyListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.nearby.NearbySearch::addNearbyListener::Callback");
        
                // call dart method
                @Override
                public void onUserInfoCleared(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onUserInfoCleared(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onUserInfoCleared",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoSearched(com.amap.api.services.nearby.NearbySearchResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoUploaded(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoUploaded(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoUploaded",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::removeNearbyListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::removeNearbyListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.removeNearbyListener(new com.amap.api.services.nearby.NearbySearch.NearbyListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.nearby.NearbySearch::removeNearbyListener::Callback");
        
                // call dart method
                @Override
                public void onUserInfoCleared(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onUserInfoCleared(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onUserInfoCleared",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoSearched(com.amap.api.services.nearby.NearbySearchResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoUploaded(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoUploaded(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoUploaded",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::clearUserInfoAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::clearUserInfoAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.clearUserInfoAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::setUserID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::setUserID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUserID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::startUploadNearbyInfoAuto", (args, methodResult) -> {
            // args
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::startUploadNearbyInfoAuto(" + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.startUploadNearbyInfoAuto(new com.amap.api.services.nearby.UploadInfoCallback() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.nearby.NearbySearch::startUploadNearbyInfoAuto::Callback");
        
                // call dart method
                @Override
                public com.amap.api.services.nearby.UploadInfo OnUploadInfoCallback() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: OnUploadInfoCallback(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.UploadInfoCallback::OnUploadInfoCallback",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
                    return null;
                }
        
            }, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::stopUploadNearbyInfoAuto", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::stopUploadNearbyInfoAuto(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopUploadNearbyInfoAuto();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::uploadNearbyInfoAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.UploadInfo var1 = (com.amap.api.services.nearby.UploadInfo) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::uploadNearbyInfoAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.uploadNearbyInfoAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::searchNearbyInfoAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.NearbySearch.NearbyQuery var1 = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::searchNearbyInfoAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchNearbyInfoAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::searchNearbyInfo", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.NearbySearch.NearbyQuery var1 = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch ref = (com.amap.api.services.nearby.NearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch@" + refId + "::searchNearbyInfo(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.nearby.NearbySearchResult result;
            try {
                result = ref.searchNearbyInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch::destroy(" + "" + ")");
            }
        
            // invoke native method
            try {
                com.amap.api.services.nearby.NearbySearch.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearchResult::getNearbyInfoList", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearchResult ref = (com.amap.api.services.nearby.NearbySearchResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearchResult@" + refId + "::getNearbyInfoList(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.nearby.NearbyInfo> result;
            try {
                result = ref.getNearbyInfoList();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.nearby.NearbyInfo item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.NearbySearchResult::getTotalNum", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearchResult ref = (com.amap.api.services.nearby.NearbySearchResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearchResult@" + refId + "::getTotalNum(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getTotalNum();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbySearchResult::setNearbyInfoList", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.nearby.NearbyInfo> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.nearby.NearbyInfo) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearchResult ref = (com.amap.api.services.nearby.NearbySearchResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearchResult@" + refId + "::setNearbyInfoList(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNearbyInfoList(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::setCenterPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::setCenterPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCenterPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::getCenterPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::getCenterPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getCenterPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::getRadius", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::getRadius(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRadius();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::setRadius", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::setRadius(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRadius(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::setType", (args, methodResult) -> {
            // args
            // enum arg
            com.amap.api.services.nearby.NearbySearchFunctionType var1 = com.amap.api.services.nearby.NearbySearchFunctionType.values()[(int) args.get("var1")];
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::setType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::setCoordType", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::setCoordType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCoordType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::getCoordType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::getCoordType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getCoordType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::setTimeRange", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::setTimeRange(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTimeRange(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.nearby.NearbySearch.NearbyQuery::getTimeRange", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.nearby.NearbySearch.NearbyQuery ref = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.nearby.NearbySearch.NearbyQuery@" + refId + "::getTimeRange(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getTimeRange();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::getID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::getID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::setID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::setID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::getTitle", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::getTitle(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTitle();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::setTitle", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::setTitle(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTitle(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::getPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::getPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::setPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::setPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::getDuration", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::getDuration(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDuration();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOIItem::setDuration", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOIItem ref = (com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOIItem@" + refId + "::setDuration(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDuration(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearch::setPoiSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearch ref = (com.amap.api.services.routepoisearch.RoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearch@" + refId + "::setPoiSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setPoiSearchListener(new com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.routepoisearch.RoutePOISearch::setPoiSearchListener::Callback");
        
                // call dart method
                @Override
                public void onRoutePoiSearched(com.amap.api.services.routepoisearch.RoutePOISearchResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRoutePoiSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener::onRoutePoiSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.routepoisearch.RoutePOISearchQuery var1 = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearch ref = (com.amap.api.services.routepoisearch.RoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearch::searchRoutePOIAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearch ref = (com.amap.api.services.routepoisearch.RoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearch@" + refId + "::searchRoutePOIAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchRoutePOIAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearch::searchRoutePOI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearch ref = (com.amap.api.services.routepoisearch.RoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearch@" + refId + "::searchRoutePOI(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.routepoisearch.RoutePOISearchResult result;
            try {
                result = ref.searchRoutePOI();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchResult::getRoutePois", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchResult ref = (com.amap.api.services.routepoisearch.RoutePOISearchResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchResult@" + refId + "::getRoutePois(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.routepoisearch.RoutePOIItem> result;
            try {
                result = ref.getRoutePois();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.routepoisearch.RoutePOIItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchResult::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchResult ref = (com.amap.api.services.routepoisearch.RoutePOISearchResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchResult@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.routepoisearch.RoutePOISearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener::onRoutePoiSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.routepoisearch.RoutePOISearchResult var1 = (com.amap.api.services.routepoisearch.RoutePOISearchResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener ref = (com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener@" + refId + "::onRoutePoiSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onRoutePoiSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::getFrom", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::getFrom(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getFrom();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::getTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::getTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::getMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::getMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::getSearchType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::getSearchType(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.routepoisearch.RoutePOISearch.RoutePOISearchType result;
            try {
                result = ref.getSearchType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::getRange", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::getRange(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRange();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::getPolylines", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::getPolylines(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolylines();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.routepoisearch.RoutePOISearchQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.routepoisearch.RoutePOISearchQuery ref = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.routepoisearch.RoutePOISearchQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.routepoisearch.RoutePOISearchQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getTitle", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getTitle(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTitle();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getSnippet", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getSnippet(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getSnippet();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getCreatetime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getCreatetime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCreatetime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::setCreatetime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::setCreatetime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCreatetime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getUpdatetime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getUpdatetime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUpdatetime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::setUpdatetime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::setUpdatetime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUpdatetime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::getCloudImage", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::getCloudImage(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.cloud.CloudImage> result;
            try {
                result = ref.getCloudImage();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.cloud.CloudImage item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudItem::setmCloudImage", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.cloud.CloudImage> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.cloud.CloudImage) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudItem ref = (com.amap.api.services.cloud.CloudItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudItem@" + refId + "::setmCloudImage(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setmCloudImage(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getQueryString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getQueryString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getQueryString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::setTableID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::setTableID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTableID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getTableID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getTableID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTableID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getPageNum", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getPageNum(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageNum();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::setPageNum", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::setPageNum(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageNum(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::setPageSize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::setPageSize(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageSize(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getPageSize", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getPageSize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageSize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::setBound", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudSearch.SearchBound var1 = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::setBound(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBound(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getBound", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getBound(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudSearch.SearchBound result;
            try {
                result = ref.getBound();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::addFilterString", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::addFilterString(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.addFilterString(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getFilterString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getFilterString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFilterString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::addFilterNum", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::addFilterNum(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.addFilterNum(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getFilterNumString", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getFilterNumString(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFilterNumString();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::setSortingrules", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudSearch.Sortingrules var1 = (com.amap.api.services.cloud.CloudSearch.Sortingrules) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::setSortingrules(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSortingrules(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::getSortingrules", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::getSortingrules(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudSearch.Sortingrules result;
            try {
                result = ref.getSortingrules();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::queryEquals", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudSearch.Query var1 = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::queryEquals(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.queryEquals(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.Query::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.Query ref = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.Query@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudSearch.Query result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudResult::createPagedResult", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudSearch.Query var0 = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get((int) args.get("var0"));
            // jsonable arg
            int var1 = (int) args.get("var1");
            // ref arg
            com.amap.api.services.cloud.CloudSearch.SearchBound var2 = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            int var3 = (int) args.get("var3");
            // list arg
            List<Integer> var4RefIdList = (List<Integer>) args.get("var4");
            List<com.amap.api.services.cloud.CloudItem> var4 = new ArrayList<>();
            for (int refId : var4RefIdList) {
                var4.add((com.amap.api.services.cloud.CloudItem) getHEAP().get(refId));
            }
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudResult::createPagedResult(" + var0 + var1 + var2 + var3 + var4 + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudResult result;
            try {
                result = com.amap.api.services.cloud.CloudResult.createPagedResult(var0, var1, var2, var3, new ArrayList(var4));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudResult::getPageCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudResult ref = (com.amap.api.services.cloud.CloudResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudResult@" + refId + "::getPageCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudResult::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudResult ref = (com.amap.api.services.cloud.CloudResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudResult@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudSearch.Query result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudResult::getBound", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudResult ref = (com.amap.api.services.cloud.CloudResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudResult@" + refId + "::getBound(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudSearch.SearchBound result;
            try {
                result = ref.getBound();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudResult::getClouds", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudResult ref = (com.amap.api.services.cloud.CloudResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudResult@" + refId + "::getClouds(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.cloud.CloudItem> result;
            try {
                result = ref.getClouds();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.cloud.CloudItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudResult::getTotalCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudResult ref = (com.amap.api.services.cloud.CloudResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudResult@" + refId + "::getTotalCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getTotalCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch::setOnCloudSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch ref = (com.amap.api.services.cloud.CloudSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch@" + refId + "::setOnCloudSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnCloudSearchListener(new com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.cloud.CloudSearch::setOnCloudSearchListener::Callback");
        
                // call dart method
                @Override
                public void onCloudSearched(com.amap.api.services.cloud.CloudResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCloudSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener::onCloudSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onCloudItemDetailSearched(com.amap.api.services.cloud.CloudItemDetail var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCloudItemDetailSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener::onCloudItemDetailSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch::searchCloudAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudSearch.Query var1 = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch ref = (com.amap.api.services.cloud.CloudSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch@" + refId + "::searchCloudAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchCloudAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch::searchCloudDetailAsyn", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch ref = (com.amap.api.services.cloud.CloudSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch@" + refId + "::searchCloudDetailAsyn(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.searchCloudDetailAsyn(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getLowerLeft", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getLowerLeft(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLowerLeft();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getUpperRight", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getUpperRight(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getUpperRight();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getCenter", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getCenter(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getCenter();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getRange", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getRange(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getRange();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getShape", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getShape(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getShape();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::getPolyGonList", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::getPolyGonList(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.LatLonPoint> result;
            try {
                result = ref.getPolyGonList();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.LatLonPoint item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.SearchBound::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.SearchBound ref = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.SearchBound@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.cloud.CloudSearch.SearchBound result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.cloud.CloudImage::getId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudImage ref = (com.amap.api.services.cloud.CloudImage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudImage@" + refId + "::getId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudImage::setId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudImage ref = (com.amap.api.services.cloud.CloudImage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudImage@" + refId + "::setId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudImage::getPreurl", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudImage ref = (com.amap.api.services.cloud.CloudImage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudImage@" + refId + "::getPreurl(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPreurl();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudImage::setPreurl", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudImage ref = (com.amap.api.services.cloud.CloudImage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudImage@" + refId + "::setPreurl(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPreurl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudImage::getUrl", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudImage ref = (com.amap.api.services.cloud.CloudImage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudImage@" + refId + "::getUrl(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getUrl();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.cloud.CloudImage::setUrl", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudImage ref = (com.amap.api.services.cloud.CloudImage) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudImage@" + refId + "::setUrl(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener::onCloudSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudResult var1 = (com.amap.api.services.cloud.CloudResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener ref = (com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener@" + refId + "::onCloudSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onCloudSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener::onCloudItemDetailSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudItemDetail var1 = (com.amap.api.services.cloud.CloudItemDetail) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener ref = (com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener@" + refId + "::onCloudItemDetailSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onCloudItemDetailSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getDate", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getDate(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDate();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setDate", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setDate(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDate(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getWeek", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getWeek(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getWeek();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setWeek", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setWeek(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWeek(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getDayWeather", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getDayWeather(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDayWeather();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setDayWeather", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setDayWeather(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDayWeather(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getNightWeather", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getNightWeather(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNightWeather();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setNightWeather", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setNightWeather(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNightWeather(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getDayTemp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getDayTemp(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDayTemp();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setDayTemp", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setDayTemp(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDayTemp(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getNightTemp", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getNightTemp(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNightTemp();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setNightTemp", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setNightTemp(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNightTemp(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getDayWindDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getDayWindDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDayWindDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setDayWindDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setDayWindDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDayWindDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getNightWindDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getNightWindDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNightWindDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setNightWindDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setNightWindDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNightWindDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getDayWindPower", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getDayWindPower(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDayWindPower();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setDayWindPower", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setDayWindPower(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDayWindPower(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::getNightWindPower", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::getNightWindPower(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNightWindPower();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalDayWeatherForecast::setNightWindPower", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalDayWeatherForecast ref = (com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalDayWeatherForecast@" + refId + "::setNightWindPower(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNightWindPower(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.WeatherSearchQuery::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearchQuery ref = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearchQuery@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.WeatherSearchQuery::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearchQuery ref = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearchQuery@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.WeatherSearchQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearchQuery ref = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearchQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.WeatherSearchQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener::onWeatherLiveSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.weather.LocalWeatherLiveResult var1 = (com.amap.api.services.weather.LocalWeatherLiveResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener ref = (com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener@" + refId + "::onWeatherLiveSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onWeatherLiveSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener::onWeatherForecastSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.weather.LocalWeatherForecastResult var1 = (com.amap.api.services.weather.LocalWeatherForecastResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener ref = (com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener@" + refId + "::onWeatherForecastSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onWeatherForecastSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecastResult::createPagedResult", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.weather.WeatherSearchQuery var0 = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get((int) args.get("var0"));
            // ref arg
            com.amap.api.services.weather.LocalWeatherForecast var1 = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecastResult::createPagedResult(" + var0 + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.LocalWeatherForecastResult result;
            try {
                result = com.amap.api.services.weather.LocalWeatherForecastResult.createPagedResult(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecastResult::getWeatherForecastQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecastResult ref = (com.amap.api.services.weather.LocalWeatherForecastResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecastResult@" + refId + "::getWeatherForecastQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.WeatherSearchQuery result;
            try {
                result = ref.getWeatherForecastQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecastResult::getForecastResult", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecastResult ref = (com.amap.api.services.weather.LocalWeatherForecastResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecastResult@" + refId + "::getForecastResult(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.LocalWeatherForecast result;
            try {
                result = ref.getForecastResult();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::getProvince", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::getProvince(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getProvince();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::setProvince", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::setProvince(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProvince(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::getReportTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::getReportTime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getReportTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::setReportTime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::setReportTime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setReportTime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::getWeatherForecast", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::getWeatherForecast(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.weather.LocalDayWeatherForecast> result;
            try {
                result = ref.getWeatherForecast();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.weather.LocalDayWeatherForecast item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherForecast::setWeatherForecast", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.weather.LocalDayWeatherForecast> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.weather.LocalDayWeatherForecast) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherForecast ref = (com.amap.api.services.weather.LocalWeatherForecast) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherForecast@" + refId + "::setWeatherForecast(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWeatherForecast(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.WeatherSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearch ref = (com.amap.api.services.weather.WeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.WeatherSearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.WeatherSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.weather.WeatherSearchQuery var1 = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearch ref = (com.amap.api.services.weather.WeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.WeatherSearch::searchWeatherAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearch ref = (com.amap.api.services.weather.WeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearch@" + refId + "::searchWeatherAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchWeatherAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.WeatherSearch::setOnWeatherSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.WeatherSearch ref = (com.amap.api.services.weather.WeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.WeatherSearch@" + refId + "::setOnWeatherSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnWeatherSearchListener(new com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.weather.WeatherSearch::setOnWeatherSearchListener::Callback");
        
                // call dart method
                @Override
                public void onWeatherLiveSearched(com.amap.api.services.weather.LocalWeatherLiveResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWeatherLiveSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener::onWeatherLiveSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWeatherForecastSearched(com.amap.api.services.weather.LocalWeatherForecastResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWeatherForecastSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener::onWeatherForecastSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getProvince", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getProvince(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getProvince();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getWeather", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getWeather(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getWeather();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getTemperature", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getTemperature(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTemperature();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getWindDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getWindDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getWindDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getWindPower", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getWindPower(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getWindPower();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getHumidity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getHumidity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getHumidity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::getReportTime", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::getReportTime(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getReportTime();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setProvince", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setProvince(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProvince(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setWeather", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setWeather(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWeather(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setTemperature", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setTemperature(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTemperature(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setWindDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setWindDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWindDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setWindPower", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setWindPower(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setWindPower(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setHumidity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setHumidity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setHumidity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLive::setReportTime", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLive ref = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLive@" + refId + "::setReportTime(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setReportTime(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLiveResult::createPagedResult", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.weather.WeatherSearchQuery var0 = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get((int) args.get("var0"));
            // ref arg
            com.amap.api.services.weather.LocalWeatherLive var1 = (com.amap.api.services.weather.LocalWeatherLive) getHEAP().get((int) args.get("var1"));
        
            // ref
        
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLiveResult::createPagedResult(" + var0 + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.LocalWeatherLiveResult result;
            try {
                result = com.amap.api.services.weather.LocalWeatherLiveResult.createPagedResult(var0, var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLiveResult::getWeatherLiveQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLiveResult ref = (com.amap.api.services.weather.LocalWeatherLiveResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLiveResult@" + refId + "::getWeatherLiveQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.WeatherSearchQuery result;
            try {
                result = ref.getWeatherLiveQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.weather.LocalWeatherLiveResult::getLiveResult", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.weather.LocalWeatherLiveResult ref = (com.amap.api.services.weather.LocalWeatherLiveResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.weather.LocalWeatherLiveResult@" + refId + "::getLiveResult(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.LocalWeatherLive result;
            try {
                result = ref.getLiveResult();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.BusinessArea::getCenterPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.BusinessArea ref = (com.amap.api.services.geocoder.BusinessArea) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.BusinessArea@" + refId + "::getCenterPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getCenterPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.BusinessArea::setCenterPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.BusinessArea ref = (com.amap.api.services.geocoder.BusinessArea) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.BusinessArea@" + refId + "::setCenterPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCenterPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.BusinessArea::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.BusinessArea ref = (com.amap.api.services.geocoder.BusinessArea) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.BusinessArea@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.BusinessArea::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.BusinessArea ref = (com.amap.api.services.geocoder.BusinessArea) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.BusinessArea@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeQuery::getLocationName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeQuery ref = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeQuery@" + refId + "::getLocationName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLocationName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeQuery::setLocationName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeQuery ref = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeQuery@" + refId + "::setLocationName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLocationName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeQuery::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeQuery ref = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeQuery@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeQuery::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeQuery ref = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeQuery@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch::getFromLocation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeQuery var1 = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch ref = (com.amap.api.services.geocoder.GeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch@" + refId + "::getFromLocation(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.geocoder.RegeocodeAddress result;
            try {
                result = ref.getFromLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch::getFromLocationName", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeQuery var1 = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch ref = (com.amap.api.services.geocoder.GeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch@" + refId + "::getFromLocationName(" + var1 + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.geocoder.GeocodeAddress> result;
            try {
                result = ref.getFromLocationName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.geocoder.GeocodeAddress item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch::setOnGeocodeSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch ref = (com.amap.api.services.geocoder.GeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch@" + refId + "::setOnGeocodeSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnGeocodeSearchListener(new com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.geocoder.GeocodeSearch::setOnGeocodeSearchListener::Callback");
        
                // call dart method
                @Override
                public void onRegeocodeSearched(com.amap.api.services.geocoder.RegeocodeResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRegeocodeSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener::onRegeocodeSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onGeocodeSearched(com.amap.api.services.geocoder.GeocodeResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onGeocodeSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener::onGeocodeSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch::getFromLocationAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeQuery var1 = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch ref = (com.amap.api.services.geocoder.GeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch@" + refId + "::getFromLocationAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.getFromLocationAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch::getFromLocationNameAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeQuery var1 = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch ref = (com.amap.api.services.geocoder.GeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch@" + refId + "::getFromLocationNameAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.getFromLocationNameAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeResult::getRegeocodeQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeResult ref = (com.amap.api.services.geocoder.RegeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeResult@" + refId + "::getRegeocodeQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.geocoder.RegeocodeQuery result;
            try {
                result = ref.getRegeocodeQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeResult::setRegeocodeQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeQuery var1 = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeResult ref = (com.amap.api.services.geocoder.RegeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeResult@" + refId + "::setRegeocodeQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRegeocodeQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeResult::getRegeocodeAddress", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeResult ref = (com.amap.api.services.geocoder.RegeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeResult@" + refId + "::getRegeocodeAddress(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.geocoder.RegeocodeAddress result;
            try {
                result = ref.getRegeocodeAddress();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeResult::setRegeocodeAddress", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeAddress var1 = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeResult ref = (com.amap.api.services.geocoder.RegeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeResult@" + refId + "::setRegeocodeAddress(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRegeocodeAddress(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeResult::getGeocodeQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeResult ref = (com.amap.api.services.geocoder.GeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeResult@" + refId + "::getGeocodeQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.geocoder.GeocodeQuery result;
            try {
                result = ref.getGeocodeQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeResult::setGeocodeQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeQuery var1 = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeResult ref = (com.amap.api.services.geocoder.GeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeResult@" + refId + "::setGeocodeQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setGeocodeQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeResult::getGeocodeAddressList", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeResult ref = (com.amap.api.services.geocoder.GeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeResult@" + refId + "::getGeocodeAddressList(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.geocoder.GeocodeAddress> result;
            try {
                result = ref.getGeocodeAddressList();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.geocoder.GeocodeAddress item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeResult::setGeocodeAddressList", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.geocoder.GeocodeAddress> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeResult ref = (com.amap.api.services.geocoder.GeocodeResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeResult@" + refId + "::setGeocodeAddressList(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setGeocodeAddressList(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::getAoiId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::getAoiId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAoiId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::getAoiName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::getAoiName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAoiName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::getAoiCenterPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::getAoiCenterPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getAoiCenterPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::getAoiArea", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::getAoiArea(" + "" + ")");
            }
        
            // invoke native method
            Float result;
            try {
                result = ref.getAoiArea();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::setId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::setId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::setAdcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::setAdcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::setLocation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::setLocation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.AoiItem::setArea", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.AoiItem ref = (com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.AoiItem@" + refId + "::setArea(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setArea(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener::onRegeocodeSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeResult var1 = (com.amap.api.services.geocoder.RegeocodeResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener ref = (com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener@" + refId + "::onRegeocodeSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onRegeocodeSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener::onGeocodeSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeResult var1 = (com.amap.api.services.geocoder.GeocodeResult) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener ref = (com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener@" + refId + "::onGeocodeSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onGeocodeSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::getId", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::getId(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getId();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::setId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::setId(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::getDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::getDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::setDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::setDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::getLatLngPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::getLatLngPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLngPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeRoad::setLatLngPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeRoad ref = (com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeRoad@" + refId + "::setLatLngPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLngPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getFormatAddress", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getFormatAddress(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFormatAddress();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setFormatAddress", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setFormatAddress(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFormatAddress(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getProvince", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getProvince(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getProvince();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setProvince", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setProvince(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProvince(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getDistrict(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setDistrict", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setDistrict(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrict(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getTownship", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getTownship(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTownship();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setTownship", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setTownship(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTownship(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getNeighborhood", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getNeighborhood(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNeighborhood();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setNeighborhood", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setNeighborhood(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNeighborhood(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getBuilding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getBuilding(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBuilding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setBuilding", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setBuilding(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBuilding(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getAdcode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getAdcode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdcode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setAdcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setAdcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setLatLonPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setLatLonPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLonPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::getLevel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::getLevel(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.GeocodeAddress::setLevel", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.GeocodeAddress ref = (com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.GeocodeAddress@" + refId + "::setLevel(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLevel(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::getPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::getPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::setPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::setPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::getRadius", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::getRadius(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getRadius();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::setRadius", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::setRadius(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRadius(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::getLatLonType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::getLatLonType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLatLonType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::setLatLonType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::setLatLonType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLonType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::getPoiType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::getPoiType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPoiType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeQuery::setPoiType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeQuery ref = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeQuery@" + refId + "::setPoiType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPoiType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::getStreet", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::getStreet(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getStreet();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::setStreet", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::setStreet(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStreet(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::getNumber", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::getNumber(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNumber();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::setNumber", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::setNumber(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNumber(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::getLatLonPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::getLatLonPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLatLonPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::setLatLonPoint", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::setLatLonPoint(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLatLonPoint(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::getDirection", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::getDirection(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDirection();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::setDirection", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::setDirection(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDirection(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::getDistance", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::getDistance(" + "" + ")");
            }
        
            // invoke native method
            float result;
            try {
                result = ref.getDistance();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.StreetNumber::setDistance", (args, methodResult) -> {
            // args
            // jsonable arg
            Double var1 = (Double) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.StreetNumber ref = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.StreetNumber@" + refId + "::setDistance(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistance(new Double(var1).floatValue());
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getFormatAddress", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getFormatAddress(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFormatAddress();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setFormatAddress", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setFormatAddress(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFormatAddress(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getProvince", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getProvince(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getProvince();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setProvince", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setProvince(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setProvince(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setCity", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setCity(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCity(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getCityCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getCityCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCityCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setCityCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setCityCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getAdCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getAdCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setAdCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setAdCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getDistrict(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setDistrict", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setDistrict(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrict(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getTownship", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getTownship(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTownship();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setTownship", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setTownship(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTownship(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getNeighborhood", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getNeighborhood(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getNeighborhood();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setNeighborhood", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setNeighborhood(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setNeighborhood(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getBuilding", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getBuilding(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getBuilding();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setBuilding", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setBuilding(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBuilding(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getStreetNumber", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getStreetNumber(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.geocoder.StreetNumber result;
            try {
                result = ref.getStreetNumber();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setStreetNumber", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.StreetNumber var1 = (com.amap.api.services.geocoder.StreetNumber) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setStreetNumber(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setStreetNumber(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getRoads", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getRoads(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.geocoder.RegeocodeRoad> result;
            try {
                result = ref.getRoads();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.geocoder.RegeocodeRoad item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setRoads", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.geocoder.RegeocodeRoad> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.geocoder.RegeocodeRoad) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setRoads(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setRoads(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getPois", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getPois(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.core.PoiItem> result;
            try {
                result = ref.getPois();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.core.PoiItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setPois", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.PoiItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.PoiItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setPois(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPois(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getCrossroads", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getCrossroads(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.road.Crossroad> result;
            try {
                result = ref.getCrossroads();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.road.Crossroad item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setCrossroads", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.road.Crossroad> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.road.Crossroad) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setCrossroads(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCrossroads(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getBusinessAreas", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getBusinessAreas(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.geocoder.BusinessArea> result;
            try {
                result = ref.getBusinessAreas();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.geocoder.BusinessArea item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setBusinessAreas", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.geocoder.BusinessArea> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.geocoder.BusinessArea) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setBusinessAreas(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBusinessAreas(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getAois", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getAois(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.geocoder.AoiItem> result;
            try {
                result = ref.getAois();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.geocoder.AoiItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setAois", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.geocoder.AoiItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.geocoder.AoiItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setAois(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAois(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getTowncode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getTowncode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTowncode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setTowncode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setTowncode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTowncode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::setCountry", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::setCountry(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCountry(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.geocoder.RegeocodeAddress::getCountry", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.geocoder.RegeocodeAddress ref = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.geocoder.RegeocodeAddress@" + refId + "::getCountry(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCountry();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setShowBoundary", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setShowBoundary(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setShowBoundary(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::isShowBoundary", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::isShowBoundary(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isShowBoundary();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::getPageNum", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::getPageNum(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageNum();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setPageNum", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setPageNum(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageNum(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::getPageSize", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::getPageSize(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageSize();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setPageSize", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setPageSize(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageSize(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::getKeywords", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::getKeywords(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getKeywords();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setKeywords", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setKeywords(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setKeywords(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::getKeywordsLevel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::getKeywordsLevel(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getKeywordsLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setKeywordsLevel", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setKeywordsLevel(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setKeywordsLevel(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::isShowChild", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::isShowChild(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isShowChild();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setShowChild", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setShowChild(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setShowChild(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::isShowBusinessArea", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::isShowBusinessArea(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.isShowBusinessArea();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::setShowBusinessArea", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::setShowBusinessArea(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setShowBusinessArea(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::checkLevels", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::checkLevels(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.checkLevels();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::checkKeyWords", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::checkKeyWords(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.checkKeyWords();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::weakEquals", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.district.DistrictSearchQuery var1 = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::weakEquals(" + var1 + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.weakEquals(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictSearchQuery::clone", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearchQuery ref = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearchQuery@" + refId + "::clone(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.district.DistrictSearchQuery result;
            try {
                result = ref.clone();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch ref = (com.amap.api.services.district.DistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.district.DistrictSearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.district.DistrictSearchQuery var1 = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch ref = (com.amap.api.services.district.DistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearch::searchDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch ref = (com.amap.api.services.district.DistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch@" + refId + "::searchDistrict(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.district.DistrictResult result;
            try {
                result = ref.searchDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictSearch::searchDistrictAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch ref = (com.amap.api.services.district.DistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch@" + refId + "::searchDistrictAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchDistrictAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearch::searchDistrictAnsy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch ref = (com.amap.api.services.district.DistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch@" + refId + "::searchDistrictAnsy(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchDistrictAnsy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearch::setOnDistrictSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch ref = (com.amap.api.services.district.DistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch@" + refId + "::setOnDistrictSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnDistrictSearchListener(new com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.district.DistrictSearch::setOnDistrictSearchListener::Callback");
        
                // call dart method
                @Override
                public void onDistrictSearched(com.amap.api.services.district.DistrictResult var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDistrictSearched(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener::onDistrictSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictResult::getDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::getDistrict(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.district.DistrictItem> result;
            try {
                result = ref.getDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.district.DistrictItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictResult::setDistrict", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.district.DistrictItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.district.DistrictItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::setDistrict(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrict(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictResult::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.district.DistrictSearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictResult::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.district.DistrictSearchQuery var1 = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictResult::getPageCount", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::getPageCount(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getPageCount();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictResult::setPageCount", (args, methodResult) -> {
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::setPageCount(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPageCount(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictResult::getAMapException", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::getAMapException(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.AMapException result;
            try {
                result = ref.getAMapException();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictResult::setAMapException", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.AMapException var1 = (com.amap.api.services.core.AMapException) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictResult ref = (com.amap.api.services.district.DistrictResult) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictResult@" + refId + "::setAMapException(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAMapException(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setDistrictBoundary", (args, methodResult) -> {
            // args
            // jsonable arg
            List<String> var1 = (List<String>) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setDistrictBoundary(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrictBoundary(var1.toArray(new String[var1.size()]));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::districtBoundary", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::districtBoundary(" + "" + ")");
            }
        
            // invoke native method
            String[] result;
            try {
                result = ref.districtBoundary();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(new ArrayList<String>(java.util.Arrays.asList(result)));
        });
        // method
        put("com.amap.api.services.district.DistrictItem::getCitycode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::getCitycode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCitycode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setCitycode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setCitycode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCitycode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::getAdcode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::getAdcode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdcode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setAdcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setAdcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::getCenter", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::getCenter(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getCenter();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setCenter", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setCenter(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCenter(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::getLevel", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::getLevel(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLevel();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setLevel", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setLevel(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLevel(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictItem::getSubDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::getSubDistrict(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.district.DistrictItem> result;
            try {
                result = ref.getSubDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.district.DistrictItem item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.district.DistrictItem::setSubDistrict", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.district.DistrictItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.district.DistrictItem) getHEAP().get(refId));
            }
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictItem ref = (com.amap.api.services.district.DistrictItem) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictItem@" + refId + "::setSubDistrict(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setSubDistrict(new ArrayList(var1));
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener::onDistrictSearched", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.district.DistrictResult var1 = (com.amap.api.services.district.DistrictResult) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener ref = (com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener@" + refId + "::onDistrictSearched(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.onDistrictSearched(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Inputtips.InputtipsListener::onGetInputtips", (args, methodResult) -> {
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.help.Tip> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.help.Tip) getHEAP().get(refId));
            }
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips.InputtipsListener ref = (com.amap.api.services.help.Inputtips.InputtipsListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips.InputtipsListener@" + refId + "::onGetInputtips(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onGetInputtips(new ArrayList(var1), var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getPoiID", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getPoiID(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getPoiID();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.Tip::setID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getPoint", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getPoint(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getPoint();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.help.Tip::setPostion", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setPostion(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setPostion(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.Tip::setName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getDistrict(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.Tip::setDistrict", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setDistrict(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setDistrict(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getAdcode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getAdcode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAdcode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.Tip::setAdcode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setAdcode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAdcode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getAddress", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getAddress(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getAddress();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.Tip::setAddress", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setAddress(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setAddress(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::setTypeCode", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::setTypeCode(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setTypeCode(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Tip::getTypeCode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Tip ref = (com.amap.api.services.help.Tip) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Tip@" + refId + "::getTypeCode(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getTypeCode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::getKeyword", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::getKeyword(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getKeyword();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::getCity", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::getCity(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getCity();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::setType", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::setType(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setType(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::getType", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::getType(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getType();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::setCityLimit", (args, methodResult) -> {
            // args
            // jsonable arg
            boolean var1 = (boolean) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::setCityLimit(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setCityLimit(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::getCityLimit", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::getCityLimit(" + "" + ")");
            }
        
            // invoke native method
            boolean result;
            try {
                result = ref.getCityLimit();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::setLocation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::setLocation(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.InputtipsQuery::getLocation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.InputtipsQuery ref = (com.amap.api.services.help.InputtipsQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.InputtipsQuery@" + refId + "::getLocation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getLocation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.help.Inputtips::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.help.InputtipsQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.help.Inputtips::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.help.InputtipsQuery var1 = (com.amap.api.services.help.InputtipsQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Inputtips::setInputtipsListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::setInputtipsListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setInputtipsListener(new com.amap.api.services.help.Inputtips.InputtipsListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.help.Inputtips::setInputtipsListener::Callback");
        
                // call dart method
                @Override
                public void onGetInputtips(List<com.amap.api.services.help.Tip> var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onGetInputtips(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // list arg
                    List<Integer> argvar1 = new ArrayList<>();
                    for (com.amap.api.services.help.Tip item : var1) {
                        getHEAP().put(item.hashCode(), item);
                        argvar1.add(item.hashCode());
                    }
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.help.Inputtips.InputtipsListener::onGetInputtips",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Inputtips::requestInputtipsAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::requestInputtipsAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.requestInputtipsAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Inputtips::requestInputtips", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::requestInputtips(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.help.Tip> result;
            try {
                result = ref.requestInputtips();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.help.Tip item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.help.Inputtips::requestInputtips__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::requestInputtips(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.requestInputtips(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.help.Inputtips::requestInputtips__String__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.help.Inputtips ref = (com.amap.api.services.help.Inputtips) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.help.Inputtips@" + refId + "::requestInputtips(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.requestInputtips(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistrictSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistrictSearch ref = (com.amap.api.services.interfaces.IDistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistrictSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.district.DistrictSearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IDistrictSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.district.DistrictSearchQuery var1 = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistrictSearch ref = (com.amap.api.services.interfaces.IDistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistrictSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistrictSearch::searchDistrictAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistrictSearch ref = (com.amap.api.services.interfaces.IDistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistrictSearch@" + refId + "::searchDistrictAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchDistrictAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistrictSearch::searchDistrictAnsy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistrictSearch ref = (com.amap.api.services.interfaces.IDistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistrictSearch@" + refId + "::searchDistrictAnsy(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchDistrictAnsy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistrictSearch::setOnDistrictSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistrictSearch ref = (com.amap.api.services.interfaces.IDistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistrictSearch@" + refId + "::setOnDistrictSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnDistrictSearchListener(new com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IDistrictSearch::setOnDistrictSearchListener::Callback");
        
                // call dart method
                @Override
                public void onDistrictSearched(com.amap.api.services.district.DistrictResult var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDistrictSearched(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.district.DistrictSearch.OnDistrictSearchListener::onDistrictSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistrictSearch::searchDistrict", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistrictSearch ref = (com.amap.api.services.interfaces.IDistrictSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistrictSearch@" + refId + "::searchDistrict(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.district.DistrictResult result;
            try {
                result = ref.searchDistrict();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IBusStationSearch::searchBusStation", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusStationSearch ref = (com.amap.api.services.interfaces.IBusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusStationSearch@" + refId + "::searchBusStation(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationResult result;
            try {
                result = ref.searchBusStation();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IBusStationSearch::setOnBusStationSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusStationSearch ref = (com.amap.api.services.interfaces.IBusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusStationSearch@" + refId + "::setOnBusStationSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnBusStationSearchListener(new com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IBusStationSearch::setOnBusStationSearchListener::Callback");
        
                // call dart method
                @Override
                public void onBusStationSearched(com.amap.api.services.busline.BusStationResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusStationSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener::onBusStationSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusStationSearch::searchBusStationAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusStationSearch ref = (com.amap.api.services.interfaces.IBusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusStationSearch@" + refId + "::searchBusStationAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchBusStationAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusStationSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusStationQuery var1 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusStationSearch ref = (com.amap.api.services.interfaces.IBusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusStationSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusStationSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusStationSearch ref = (com.amap.api.services.interfaces.IBusStationSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusStationSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusStationQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::setRouteSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::setRouteSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setRouteSearchListener(new com.amap.api.services.route.RouteSearch.OnRouteSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IRouteSearch::setRouteSearchListener::Callback");
        
                // call dart method
                @Override
                public void onBusRouteSearched(com.amap.api.services.route.BusRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onBusRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onDriveRouteSearched(com.amap.api.services.route.DriveRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDriveRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onDriveRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWalkRouteSearched(com.amap.api.services.route.WalkRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWalkRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onWalkRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onRideRouteSearched(com.amap.api.services.route.RideRouteResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRideRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRouteSearchListener::onRideRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::setOnTruckRouteSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::setOnTruckRouteSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnTruckRouteSearchListener(new com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IRouteSearch::setOnTruckRouteSearchListener::Callback");
        
                // call dart method
                @Override
                public void onTruckRouteSearched(com.amap.api.services.route.TruckRouteRestult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onTruckRouteSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnTruckRouteSearchListener::onTruckRouteSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::setOnRoutePlanSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::setOnRoutePlanSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnRoutePlanSearchListener(new com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IRouteSearch::setOnRoutePlanSearchListener::Callback");
        
                // call dart method
                @Override
                public void onDriveRoutePlanSearched(com.amap.api.services.route.DriveRoutePlanResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDriveRoutePlanSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.RouteSearch.OnRoutePlanSearchListener::onDriveRoutePlanSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateWalkRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateWalkRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.WalkRouteResult result;
            try {
                result = ref.calculateWalkRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateWalkRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.WalkRouteQuery var1 = (com.amap.api.services.route.RouteSearch.WalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateWalkRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateWalkRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateBusRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateBusRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.BusRouteResult result;
            try {
                result = ref.calculateBusRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateBusRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.BusRouteQuery var1 = (com.amap.api.services.route.RouteSearch.BusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateBusRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateBusRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateDriveRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateDriveRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DriveRouteResult result;
            try {
                result = ref.calculateDriveRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateDriveRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DriveRouteQuery var1 = (com.amap.api.services.route.RouteSearch.DriveRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateDriveRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateDriveRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateRideRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateRideRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.RideRouteResult result;
            try {
                result = ref.calculateRideRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateRideRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.RideRouteQuery var1 = (com.amap.api.services.route.RouteSearch.RideRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateRideRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateRideRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateTruckRoute", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateTruckRoute(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.TruckRouteRestult result;
            try {
                result = ref.calculateTruckRoute(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateTruckRouteAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.TruckRouteQuery var1 = (com.amap.api.services.route.RouteSearch.TruckRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateTruckRouteAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateTruckRouteAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateDrivePlan", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateDrivePlan(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DriveRoutePlanResult result;
            try {
                result = ref.calculateDrivePlan(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRouteSearch::calculateDrivePlanAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.DrivePlanQuery var1 = (com.amap.api.services.route.RouteSearch.DrivePlanQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRouteSearch ref = (com.amap.api.services.interfaces.IRouteSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRouteSearch@" + refId + "::calculateDrivePlanAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateDrivePlanAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::setOnShareSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::setOnShareSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnShareSearchListener(new com.amap.api.services.share.ShareSearch.OnShareSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IShareSearch::setOnShareSearchListener::Callback");
        
                // call dart method
                @Override
                public void onPoiShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPoiShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onPoiShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onLocationShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onLocationShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onLocationShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNaviShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNaviShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onNaviShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBusRouteShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusRouteShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onBusRouteShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWalkRouteShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWalkRouteShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onWalkRouteShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onDrivingRouteShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDrivingRouteShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onDrivingRouteShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchPoiShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.PoiItem var1 = (com.amap.api.services.core.PoiItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchPoiShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchPoiShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchBusRouteShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareBusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchBusRouteShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchBusRouteShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchWalkRouteShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchWalkRouteShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchWalkRouteShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchDrivingRouteShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchDrivingRouteShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchDrivingRouteShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchNaviShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareNaviQuery var1 = (com.amap.api.services.share.ShareSearch.ShareNaviQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchNaviShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchNaviShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchLocationShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonSharePoint var1 = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchLocationShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchLocationShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchPoiShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.PoiItem var1 = (com.amap.api.services.core.PoiItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchPoiShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchPoiShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchNaviShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareNaviQuery var1 = (com.amap.api.services.share.ShareSearch.ShareNaviQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchNaviShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchNaviShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchLocationShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonSharePoint var1 = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchLocationShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchLocationShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchBusRouteShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareBusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchBusRouteShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchBusRouteShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchDrivingRouteShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchDrivingRouteShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchDrivingRouteShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IShareSearch::searchWalkRouteShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IShareSearch ref = (com.amap.api.services.interfaces.IShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IShareSearch@" + refId + "::searchWalkRouteShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchWalkRouteShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IRoutePOISearch::setRoutePOISearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRoutePOISearch ref = (com.amap.api.services.interfaces.IRoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRoutePOISearch@" + refId + "::setRoutePOISearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setRoutePOISearchListener(new com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IRoutePOISearch::setRoutePOISearchListener::Callback");
        
                // call dart method
                @Override
                public void onRoutePoiSearched(com.amap.api.services.routepoisearch.RoutePOISearchResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRoutePoiSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.routepoisearch.RoutePOISearch.OnRoutePOISearchListener::onRoutePoiSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRoutePOISearch::searchRoutePOIAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRoutePOISearch ref = (com.amap.api.services.interfaces.IRoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRoutePOISearch@" + refId + "::searchRoutePOIAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchRoutePOIAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRoutePOISearch::searchRoutePOI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRoutePOISearch ref = (com.amap.api.services.interfaces.IRoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRoutePOISearch@" + refId + "::searchRoutePOI(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.routepoisearch.RoutePOISearchResult result;
            try {
                result = ref.searchRoutePOI();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IRoutePOISearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.routepoisearch.RoutePOISearchQuery var1 = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRoutePOISearch ref = (com.amap.api.services.interfaces.IRoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRoutePOISearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IRoutePOISearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IRoutePOISearch ref = (com.amap.api.services.interfaces.IRoutePOISearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IRoutePOISearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.routepoisearch.RoutePOISearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.ITrafficSearch::setTrafficSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.ITrafficSearch ref = (com.amap.api.services.interfaces.ITrafficSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.ITrafficSearch@" + refId + "::setTrafficSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setTrafficSearchListener(new com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.ITrafficSearch::setTrafficSearchListener::Callback");
        
                // call dart method
                @Override
                public void onRoadTrafficSearched(com.amap.api.services.traffic.TrafficStatusResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRoadTrafficSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener::onRoadTrafficSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.help.InputtipsQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.help.InputtipsQuery var1 = (com.amap.api.services.help.InputtipsQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::setInputtipsListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::setInputtipsListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setInputtipsListener(new com.amap.api.services.help.Inputtips.InputtipsListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IInputtipsSearch::setInputtipsListener::Callback");
        
                // call dart method
                @Override
                public void onGetInputtips(List<com.amap.api.services.help.Tip> var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onGetInputtips(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // list arg
                    List<Integer> argvar1 = new ArrayList<>();
                    for (com.amap.api.services.help.Tip item : var1) {
                        getHEAP().put(item.hashCode(), item);
                        argvar1.add(item.hashCode());
                    }
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.help.Inputtips.InputtipsListener::onGetInputtips",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::requestInputtipsAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::requestInputtipsAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.requestInputtipsAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::requestInputtips", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::requestInputtips(" + "" + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.help.Tip> result;
            try {
                result = ref.requestInputtips();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.help.Tip item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::requestInputtips__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::requestInputtips(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.requestInputtips(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IInputtipsSearch::requestInputtips__String__String__String", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IInputtipsSearch ref = (com.amap.api.services.interfaces.IInputtipsSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IInputtipsSearch@" + refId + "::requestInputtips(" + var1 + var2 + var3 + ")");
            }
        
            // invoke native method
            try {
                ref.requestInputtips(var1, var2, var3);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IGeocodeSearch::getFromLocation", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeQuery var1 = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IGeocodeSearch ref = (com.amap.api.services.interfaces.IGeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IGeocodeSearch@" + refId + "::getFromLocation(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.geocoder.RegeocodeAddress result;
            try {
                result = ref.getFromLocation(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IGeocodeSearch::getFromLocationName", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeQuery var1 = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IGeocodeSearch ref = (com.amap.api.services.interfaces.IGeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IGeocodeSearch@" + refId + "::getFromLocationName(" + var1 + ")");
            }
        
            // invoke native method
            List<com.amap.api.services.geocoder.GeocodeAddress> result;
            try {
                result = ref.getFromLocationName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                List<Integer> resultRefIdList = new ArrayList<>();
                for (com.amap.api.services.geocoder.GeocodeAddress item : result) {
                    getHEAP().put(item.hashCode(), item);
                    resultRefIdList.add(item.hashCode());
                }
                methodResult.success(resultRefIdList);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IGeocodeSearch::setOnGeocodeSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IGeocodeSearch ref = (com.amap.api.services.interfaces.IGeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IGeocodeSearch@" + refId + "::setOnGeocodeSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnGeocodeSearchListener(new com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IGeocodeSearch::setOnGeocodeSearchListener::Callback");
        
                // call dart method
                @Override
                public void onRegeocodeSearched(com.amap.api.services.geocoder.RegeocodeResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onRegeocodeSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener::onRegeocodeSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onGeocodeSearched(com.amap.api.services.geocoder.GeocodeResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onGeocodeSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.geocoder.GeocodeSearch.OnGeocodeSearchListener::onGeocodeSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IGeocodeSearch::getFromLocationAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeQuery var1 = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IGeocodeSearch ref = (com.amap.api.services.interfaces.IGeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IGeocodeSearch@" + refId + "::getFromLocationAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.getFromLocationAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IGeocodeSearch::getFromLocationNameAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeQuery var1 = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IGeocodeSearch ref = (com.amap.api.services.interfaces.IGeocodeSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IGeocodeSearch@" + refId + "::getFromLocationNameAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.getFromLocationNameAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.ICloudSearch::setOnCloudSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.ICloudSearch ref = (com.amap.api.services.interfaces.ICloudSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.ICloudSearch@" + refId + "::setOnCloudSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnCloudSearchListener(new com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.ICloudSearch::setOnCloudSearchListener::Callback");
        
                // call dart method
                @Override
                public void onCloudSearched(com.amap.api.services.cloud.CloudResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCloudSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener::onCloudSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onCloudItemDetailSearched(com.amap.api.services.cloud.CloudItemDetail var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onCloudItemDetailSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.cloud.CloudSearch.OnCloudSearchListener::onCloudItemDetailSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.ICloudSearch::searchCloudAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.cloud.CloudSearch.Query var1 = (com.amap.api.services.cloud.CloudSearch.Query) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.ICloudSearch ref = (com.amap.api.services.interfaces.ICloudSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.ICloudSearch@" + refId + "::searchCloudAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchCloudAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.ICloudSearch::searchCloudDetailAsyn", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.ICloudSearch ref = (com.amap.api.services.interfaces.ICloudSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.ICloudSearch@" + refId + "::searchCloudDetailAsyn(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.searchCloudDetailAsyn(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistanceSearch::calculateRouteDistance", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DistanceSearch.DistanceQuery var1 = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistanceSearch ref = (com.amap.api.services.interfaces.IDistanceSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistanceSearch@" + refId + "::calculateRouteDistance(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.route.DistanceResult result;
            try {
                result = ref.calculateRouteDistance(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IDistanceSearch::calculateRouteDistanceAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.route.DistanceSearch.DistanceQuery var1 = (com.amap.api.services.route.DistanceSearch.DistanceQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistanceSearch ref = (com.amap.api.services.interfaces.IDistanceSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistanceSearch@" + refId + "::calculateRouteDistanceAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.calculateRouteDistanceAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IDistanceSearch::setDistanceSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IDistanceSearch ref = (com.amap.api.services.interfaces.IDistanceSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IDistanceSearch@" + refId + "::setDistanceSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setDistanceSearchListener(new com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IDistanceSearch::setDistanceSearchListener::Callback");
        
                // call dart method
                @Override
                public void onDistanceSearched(com.amap.api.services.route.DistanceResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDistanceSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.route.DistanceSearch.OnDistanceSearchListener::onDistanceSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::setOnPoiSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::setOnPoiSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnPoiSearchListener(new com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IPoiSearch::setOnPoiSearchListener::Callback");
        
                // call dart method
                @Override
                public void onPoiSearched(com.amap.api.services.poisearch.PoiResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPoiSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener::onPoiSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onPoiItemSearched(com.amap.api.services.core.PoiItem var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPoiItemSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.poisearch.PoiSearch.OnPoiSearchListener::onPoiItemSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::setLanguage", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::setLanguage(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setLanguage(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::getLanguage", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::getLanguage(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getLanguage();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::searchPOI", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::searchPOI(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiResult result;
            try {
                result = ref.searchPOI();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::searchPOIAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::searchPOIAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchPOIAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::searchPOIId", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::searchPOIId(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.PoiItem result;
            try {
                result = ref.searchPOIId(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::searchPOIIdAsyn", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::searchPOIIdAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchPOIIdAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.Query var1 = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::setBound", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.SearchBound var1 = (com.amap.api.services.poisearch.PoiSearch.SearchBound) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::setBound(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setBound(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.Query result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IPoiSearch::getBound", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IPoiSearch ref = (com.amap.api.services.interfaces.IPoiSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IPoiSearch@" + refId + "::getBound(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.poisearch.PoiSearch.SearchBound result;
            try {
                result = ref.getBound();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IWeatherSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IWeatherSearch ref = (com.amap.api.services.interfaces.IWeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IWeatherSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.weather.WeatherSearchQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IWeatherSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.weather.WeatherSearchQuery var1 = (com.amap.api.services.weather.WeatherSearchQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IWeatherSearch ref = (com.amap.api.services.interfaces.IWeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IWeatherSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IWeatherSearch::searchWeatherAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IWeatherSearch ref = (com.amap.api.services.interfaces.IWeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IWeatherSearch@" + refId + "::searchWeatherAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchWeatherAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IWeatherSearch::setOnWeatherSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IWeatherSearch ref = (com.amap.api.services.interfaces.IWeatherSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IWeatherSearch@" + refId + "::setOnWeatherSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnWeatherSearchListener(new com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IWeatherSearch::setOnWeatherSearchListener::Callback");
        
                // call dart method
                @Override
                public void onWeatherLiveSearched(com.amap.api.services.weather.LocalWeatherLiveResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWeatherLiveSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener::onWeatherLiveSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWeatherForecastSearched(com.amap.api.services.weather.LocalWeatherForecastResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWeatherForecastSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.weather.WeatherSearch.OnWeatherSearchListener::onWeatherForecastSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::addNearbyListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::addNearbyListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.addNearbyListener(new com.amap.api.services.nearby.NearbySearch.NearbyListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.INearbySearch::addNearbyListener::Callback");
        
                // call dart method
                @Override
                public void onUserInfoCleared(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onUserInfoCleared(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onUserInfoCleared",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoSearched(com.amap.api.services.nearby.NearbySearchResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoUploaded(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoUploaded(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoUploaded",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::removeNearbyListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::removeNearbyListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.removeNearbyListener(new com.amap.api.services.nearby.NearbySearch.NearbyListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.INearbySearch::removeNearbyListener::Callback");
        
                // call dart method
                @Override
                public void onUserInfoCleared(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onUserInfoCleared(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onUserInfoCleared",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoSearched(com.amap.api.services.nearby.NearbySearchResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNearbyInfoUploaded(int var1) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNearbyInfoUploaded(" + var1 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    int argvar1 = var1;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.NearbySearch.NearbyListener::onNearbyInfoUploaded",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::clearUserInfoAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::clearUserInfoAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.clearUserInfoAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::setUserID", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::setUserID(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setUserID(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::startUploadNearbyInfoAuto", (args, methodResult) -> {
            // args
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::startUploadNearbyInfoAuto(" + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.startUploadNearbyInfoAuto(new com.amap.api.services.nearby.UploadInfoCallback() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.INearbySearch::startUploadNearbyInfoAuto::Callback");
        
                // call dart method
                @Override
                public com.amap.api.services.nearby.UploadInfo OnUploadInfoCallback() {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: OnUploadInfoCallback(" + "" + ")");
                    }
        
                    // convert to jsonable data
        
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.nearby.UploadInfoCallback::OnUploadInfoCallback",
                            new HashMap<String, Object>() {{
                
                            }}
                    );
        
                    // method result
                    return null;
                }
        
            }, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::stopUploadNearbyInfoAuto", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::stopUploadNearbyInfoAuto(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.stopUploadNearbyInfoAuto();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::uploadNearbyInfoAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.UploadInfo var1 = (com.amap.api.services.nearby.UploadInfo) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::uploadNearbyInfoAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.uploadNearbyInfoAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::searchNearbyInfoAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.NearbySearch.NearbyQuery var1 = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::searchNearbyInfoAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchNearbyInfoAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::searchNearbyInfo", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.nearby.NearbySearch.NearbyQuery var1 = (com.amap.api.services.nearby.NearbySearch.NearbyQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::searchNearbyInfo(" + var1 + ")");
            }
        
            // invoke native method
            com.amap.api.services.nearby.NearbySearchResult result;
            try {
                result = ref.searchNearbyInfo(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.INearbySearch::destroy", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.INearbySearch ref = (com.amap.api.services.interfaces.INearbySearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.INearbySearch@" + refId + "::destroy(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.destroy();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusLineSearch::searchBusLine", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusLineSearch ref = (com.amap.api.services.interfaces.IBusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusLineSearch@" + refId + "::searchBusLine(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineResult result;
            try {
                result = ref.searchBusLine();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.interfaces.IBusLineSearch::setOnBusLineSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusLineSearch ref = (com.amap.api.services.interfaces.IBusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusLineSearch@" + refId + "::setOnBusLineSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnBusLineSearchListener(new com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.interfaces.IBusLineSearch::setOnBusLineSearchListener::Callback");
        
                // call dart method
                @Override
                public void onBusLineSearched(com.amap.api.services.busline.BusLineResult var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusLineSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // ref arg
                    int argvar1 = var1.hashCode();
                    getHEAP().put(argvar1, var1);
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener::onBusLineSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusLineSearch::searchBusLineAsyn", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusLineSearch ref = (com.amap.api.services.interfaces.IBusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusLineSearch@" + refId + "::searchBusLineAsyn(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.searchBusLineAsyn();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusLineSearch::setQuery", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.busline.BusLineQuery var1 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusLineSearch ref = (com.amap.api.services.interfaces.IBusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusLineSearch@" + refId + "::setQuery(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setQuery(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.interfaces.IBusLineSearch::getQuery", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.interfaces.IBusLineSearch ref = (com.amap.api.services.interfaces.IBusLineSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.interfaces.IBusLineSearch@" + refId + "::getQuery(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.busline.BusLineQuery result;
            try {
                result = ref.getQuery();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareNaviQuery::getFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareNaviQuery ref = (com.amap.api.services.share.ShareSearch.ShareNaviQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareNaviQuery@" + refId + "::getFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.share.ShareSearch.ShareFromAndTo result;
            try {
                result = ref.getFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareNaviQuery::getNaviMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareNaviQuery ref = (com.amap.api.services.share.ShareSearch.ShareNaviQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareNaviQuery@" + refId + "::getNaviMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getNaviMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareBusRouteQuery::getBusMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery ref = (com.amap.api.services.share.ShareSearch.ShareBusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareBusRouteQuery@" + refId + "::getBusMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getBusMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareBusRouteQuery::getShareFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery ref = (com.amap.api.services.share.ShareSearch.ShareBusRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareBusRouteQuery@" + refId + "::getShareFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.share.ShareSearch.ShareFromAndTo result;
            try {
                result = ref.getShareFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch::setOnShareSearchListener", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::setOnShareSearchListener(" + "" + ")");
            }
        
            // invoke native method
            try {
                ref.setOnShareSearchListener(new com.amap.api.services.share.ShareSearch.OnShareSearchListener() {
                // method channel
                MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.share.ShareSearch::setOnShareSearchListener::Callback");
        
                // call dart method
                @Override
                public void onPoiShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onPoiShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onPoiShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onLocationShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onLocationShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onLocationShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onNaviShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onNaviShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onNaviShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onBusRouteShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onBusRouteShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onBusRouteShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onWalkRouteShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onWalkRouteShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onWalkRouteShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
                @Override
                public void onDrivingRouteShareUrlSearched(String var1, int var2) {
                    // print log
                    if (getEnableLog()) {
                        Log.d("java-callback", "fluttify-java-callback: onDrivingRouteShareUrlSearched(" + var1 + var2 + ")");
                    }
        
                    // convert to jsonable data
                    // jsonable arg
                    String argvar1 = var1;
                    // jsonable arg
                    int argvar2 = var2;
        
                    // call dart method
                    callbackChannel.invokeMethod(
                            "Callback::com.amap.api.services.share.ShareSearch.OnShareSearchListener::onDrivingRouteShareUrlSearched",
                            new HashMap<String, Object>() {{
                                put("var1", argvar1);
                                put("var2", argvar2);
                            }}
                    );
        
                    // method result
        
                }
        
            });
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchPoiShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.PoiItem var1 = (com.amap.api.services.core.PoiItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchPoiShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchPoiShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchBusRouteShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareBusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchBusRouteShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchBusRouteShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchWalkRouteShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchWalkRouteShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchWalkRouteShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchDrivingRouteShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchDrivingRouteShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchDrivingRouteShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchNaviShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareNaviQuery var1 = (com.amap.api.services.share.ShareSearch.ShareNaviQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchNaviShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchNaviShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchLocationShareUrlAsyn", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonSharePoint var1 = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchLocationShareUrlAsyn(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.searchLocationShareUrlAsyn(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchPoiShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.PoiItem var1 = (com.amap.api.services.core.PoiItem) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchPoiShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchPoiShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchNaviShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareNaviQuery var1 = (com.amap.api.services.share.ShareSearch.ShareNaviQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchNaviShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchNaviShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchLocationShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.core.LatLonSharePoint var1 = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchLocationShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchLocationShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchBusRouteShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareBusRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchBusRouteShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchBusRouteShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchDrivingRouteShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchDrivingRouteShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchDrivingRouteShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch::searchWalkRouteShareUrl", (args, methodResult) -> {
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery var1 = (com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery) getHEAP().get((int) args.get("var1"));
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch ref = (com.amap.api.services.share.ShareSearch) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch@" + refId + "::searchWalkRouteShareUrl(" + var1 + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.searchWalkRouteShareUrl(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareFromAndTo::setFromName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareFromAndTo ref = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareFromAndTo@" + refId + "::setFromName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setFromName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareFromAndTo::setToName", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareFromAndTo ref = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareFromAndTo@" + refId + "::setToName(" + var1 + ")");
            }
        
            // invoke native method
            try {
                ref.setToName(var1);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareFromAndTo::getFrom", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareFromAndTo ref = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareFromAndTo@" + refId + "::getFrom(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getFrom();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareFromAndTo::getTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareFromAndTo ref = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareFromAndTo@" + refId + "::getTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.core.LatLonPoint result;
            try {
                result = ref.getTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareFromAndTo::getFromName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareFromAndTo ref = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareFromAndTo@" + refId + "::getFromName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getFromName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareFromAndTo::getToName", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareFromAndTo ref = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareFromAndTo@" + refId + "::getToName(" + "" + ")");
            }
        
            // invoke native method
            String result;
            try {
                result = ref.getToName();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery::getWalkMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery ref = (com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery@" + refId + "::getWalkMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getWalkMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery::getShareFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery ref = (com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery@" + refId + "::getShareFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.share.ShareSearch.ShareFromAndTo result;
            try {
                result = ref.getShareFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery::getDrivingMode", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery ref = (com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery@" + refId + "::getDrivingMode(" + "" + ")");
            }
        
            // invoke native method
            int result;
            try {
                result = ref.getDrivingMode();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success(result);
        });
        // method
        put("com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery::getShareFromAndTo", (args, methodResult) -> {
            // args
        
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery ref = (com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery@" + refId + "::getShareFromAndTo(" + "" + ")");
            }
        
            // invoke native method
            com.amap.api.services.share.ShareSearch.ShareFromAndTo result;
            try {
                result = ref.getShareFromAndTo();
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            if (result != null) {
                int returnRefId = result.hashCode();
                getHEAP().put(returnRefId, result);
        
                methodResult.success(returnRefId);
            } else {
                methodResult.success(null);
            }
        });
        // method
        put("com.amap.api.services.share.ShareSearch.OnShareSearchListener::onPoiShareUrlSearched", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.OnShareSearchListener ref = (com.amap.api.services.share.ShareSearch.OnShareSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.OnShareSearchListener@" + refId + "::onPoiShareUrlSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onPoiShareUrlSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.OnShareSearchListener::onLocationShareUrlSearched", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.OnShareSearchListener ref = (com.amap.api.services.share.ShareSearch.OnShareSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.OnShareSearchListener@" + refId + "::onLocationShareUrlSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onLocationShareUrlSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.OnShareSearchListener::onNaviShareUrlSearched", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.OnShareSearchListener ref = (com.amap.api.services.share.ShareSearch.OnShareSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.OnShareSearchListener@" + refId + "::onNaviShareUrlSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onNaviShareUrlSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.OnShareSearchListener::onBusRouteShareUrlSearched", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.OnShareSearchListener ref = (com.amap.api.services.share.ShareSearch.OnShareSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.OnShareSearchListener@" + refId + "::onBusRouteShareUrlSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onBusRouteShareUrlSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.OnShareSearchListener::onWalkRouteShareUrlSearched", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.OnShareSearchListener ref = (com.amap.api.services.share.ShareSearch.OnShareSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.OnShareSearchListener@" + refId + "::onWalkRouteShareUrlSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onWalkRouteShareUrlSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // method
        put("com.amap.api.services.share.ShareSearch.OnShareSearchListener::onDrivingRouteShareUrlSearched", (args, methodResult) -> {
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // ref
            int refId = (int) args.get("refId");
            com.amap.api.services.share.ShareSearch.OnShareSearchListener ref = (com.amap.api.services.share.ShareSearch.OnShareSearchListener) getHEAP().get(refId);
        
            // print log
            if (getEnableLog()) {
                Log.d("fluttify-java", "fluttify-java: com.amap.api.services.share.ShareSearch.OnShareSearchListener@" + refId + "::onDrivingRouteShareUrlSearched(" + var1 + var2 + ")");
            }
        
            // invoke native method
            try {
                ref.onDrivingRouteShareUrlSearched(var1, var2);
            } catch (Throwable throwable) {
                throwable.printStackTrace();
                if (getEnableLog()) {
                    Log.d("Current HEAP: ", getHEAP().toString());
                }
                methodResult.error(throwable.getMessage(), null, null);
                return;
            }
        
            // result
            methodResult.success("success");
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_traffic_TrafficStatusInfo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficStatusInfo__");
        
            // args
        
        
            // create target object
            com.amap.api.services.traffic.TrafficStatusInfo obj = new com.amap.api.services.traffic.TrafficStatusInfo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_traffic_TrafficStatusResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficStatusResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.traffic.TrafficStatusResult obj = new com.amap.api.services.traffic.TrafficStatusResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_traffic_TrafficSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.traffic.TrafficSearch obj = new com.amap.api.services.traffic.TrafficSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_traffic_TrafficStatusEvaluation__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_traffic_TrafficStatusEvaluation__");
        
            // args
        
        
            // create target object
            com.amap.api.services.traffic.TrafficStatusEvaluation obj = new com.amap.api.services.traffic.TrafficStatusEvaluation();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_busline_BusLineItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusLineItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.busline.BusLineItem obj = new com.amap.api.services.busline.BusLineItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_busline_BusStationSearch__android_content_Context__com_amap_api_services_busline_BusStationQuery", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusStationSearch__android_content_Context__com_amap_api_services_busline_BusStationQuery");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.busline.BusStationQuery var2 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.busline.BusStationSearch obj = new com.amap.api.services.busline.BusStationSearch(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_busline_BusLineSearch__android_content_Context__com_amap_api_services_busline_BusLineQuery", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusLineSearch__android_content_Context__com_amap_api_services_busline_BusLineQuery");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.busline.BusLineQuery var2 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.busline.BusLineSearch obj = new com.amap.api.services.busline.BusLineSearch(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_busline_BusLineQuery__String__com_amap_api_services_busline_BusLineQuery_SearchType__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusLineQuery__String__com_amap_api_services_busline_BusLineQuery_SearchType__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // enum arg
            com.amap.api.services.busline.BusLineQuery.SearchType var2 = com.amap.api.services.busline.BusLineQuery.SearchType.values()[(int) args.get("var2")];
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // create target object
            com.amap.api.services.busline.BusLineQuery obj = new com.amap.api.services.busline.BusLineQuery(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_busline_BusStationItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusStationItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.busline.BusStationItem obj = new com.amap.api.services.busline.BusStationItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_busline_BusStationQuery__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_busline_BusStationQuery__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.busline.BusStationQuery obj = new com.amap.api.services.busline.BusStationQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_AMapException__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_AMapException__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.amap.api.services.core.AMapException obj = new com.amap.api.services.core.AMapException(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_AMapException__String__int__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_AMapException__String__int__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // create target object
            com.amap.api.services.core.AMapException obj = new com.amap.api.services.core.AMapException(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_AMapException__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_AMapException__");
        
            // args
        
        
            // create target object
            com.amap.api.services.core.AMapException obj = new com.amap.api.services.core.AMapException();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_SearchUtils__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_SearchUtils__");
        
            // args
        
        
            // create target object
            com.amap.api.services.core.SearchUtils obj = new com.amap.api.services.core.SearchUtils();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_LatLonSharePoint__double__double__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_LatLonSharePoint__double__double__String");
        
            // args
            // jsonable arg
            double var1 = (double) args.get("var1");
            // jsonable arg
            double var3 = (double) args.get("var3");
            // jsonable arg
            String var5 = (String) args.get("var5");
        
            // create target object
            com.amap.api.services.core.LatLonSharePoint obj = new com.amap.api.services.core.LatLonSharePoint(var1, var3, var5);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_LatLonPoint__double__double", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_LatLonPoint__double__double");
        
            // args
            // jsonable arg
            double var1 = (double) args.get("var1");
            // jsonable arg
            double var3 = (double) args.get("var3");
        
            // create target object
            com.amap.api.services.core.LatLonPoint obj = new com.amap.api.services.core.LatLonPoint(var1, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_PoiItem__String__com_amap_api_services_core_LatLonPoint__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_PoiItem__String__com_amap_api_services_core_LatLonPoint__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
        
            // create target object
            com.amap.api.services.core.PoiItem obj = new com.amap.api.services.core.PoiItem(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_core_SuggestionCity__String__String__String__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_core_SuggestionCity__String__String__String__int");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // create target object
            com.amap.api.services.core.SuggestionCity obj = new com.amap.api.services.core.SuggestionCity(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_Photo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_Photo__");
        
            // args
        
        
            // create target object
            com.amap.api.services.poisearch.Photo obj = new com.amap.api.services.poisearch.Photo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_Photo__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_Photo__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.poisearch.Photo obj = new com.amap.api.services.poisearch.Photo(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_SubPoiItem__String__com_amap_api_services_core_LatLonPoint__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_SubPoiItem__String__com_amap_api_services_core_LatLonPoint__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
        
            // create target object
            com.amap.api.services.poisearch.SubPoiItem obj = new com.amap.api.services.poisearch.SubPoiItem(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiItemExtension__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiItemExtension__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.poisearch.PoiItemExtension obj = new com.amap.api.services.poisearch.PoiItemExtension(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch.SearchBound obj = new com.amap.api.services.poisearch.PoiSearch.SearchBound(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int__boolean", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int__boolean");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            boolean var3 = (boolean) args.get("var3");
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch.SearchBound obj = new com.amap.api.services.poisearch.PoiSearch.SearchBound(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch.SearchBound obj = new com.amap.api.services.poisearch.PoiSearch.SearchBound(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_SearchBound__com_amap_api_services_core_LatLonPoint");
        
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch.SearchBound obj = new com.amap.api.services.poisearch.PoiSearch.SearchBound(new ArrayList(var1));
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch__android_content_Context__com_amap_api_services_poisearch_PoiSearch_Query", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch__android_content_Context__com_amap_api_services_poisearch_PoiSearch_Query");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.poisearch.PoiSearch.Query var2 = (com.amap.api.services.poisearch.PoiSearch.Query) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch obj = new com.amap.api.services.poisearch.PoiSearch(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_Query__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_Query__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch.Query obj = new com.amap.api.services.poisearch.PoiSearch.Query(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_PoiSearch_Query__String__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_PoiSearch_Query__String__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // create target object
            com.amap.api.services.poisearch.PoiSearch.Query obj = new com.amap.api.services.poisearch.PoiSearch.Query(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_poisearch_IndoorData__String__int__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_poisearch_IndoorData__String__int__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // create target object
            com.amap.api.services.poisearch.IndoorData obj = new com.amap.api.services.poisearch.IndoorData(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_Railway__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_Railway__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.Railway obj = new com.amap.api.services.route.Railway();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_BusPath__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_BusPath__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.BusPath obj = new com.amap.api.services.route.BusPath();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DriveRoutePlanResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DriveRoutePlanResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DriveRoutePlanResult obj = new com.amap.api.services.route.DriveRoutePlanResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_TruckRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__com_amap_api_services_core_LatLonPoint__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_TruckRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__com_amap_api_services_core_LatLonPoint__int");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
            // list arg
            List<Integer> var3RefIdList = (List<Integer>) args.get("var3");
            List<com.amap.api.services.core.LatLonPoint> var3 = new ArrayList<>();
            for (int refId : var3RefIdList) {
                var3.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // create target object
            com.amap.api.services.route.RouteSearch.TruckRouteQuery obj = new com.amap.api.services.route.RouteSearch.TruckRouteQuery(var1, var2, new ArrayList(var3), var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TMC__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TMC__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TMC obj = new com.amap.api.services.route.TMC();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteBusWalkItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteBusWalkItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteBusWalkItem obj = new com.amap.api.services.route.RouteBusWalkItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteResult obj = new com.amap.api.services.route.RouteResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.route.RouteSearch obj = new com.amap.api.services.route.RouteSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_BusStep__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_BusStep__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.BusStep obj = new com.amap.api.services.route.BusStep();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TaxiItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TaxiItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TaxiItem obj = new com.amap.api.services.route.TaxiItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_BusRouteResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_BusRouteResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.BusRouteResult obj = new com.amap.api.services.route.BusRouteResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RoutePlanResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RoutePlanResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RoutePlanResult obj = new com.amap.api.services.route.RoutePlanResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RailwaySpace__String__float", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RailwaySpace__String__float");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            Double var2 = (Double) args.get("var2");
        
            // create target object
            com.amap.api.services.route.RailwaySpace obj = new com.amap.api.services.route.RailwaySpace(var1, new Double(var2).floatValue());
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TruckRouteRestult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TruckRouteRestult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TruckRouteRestult obj = new com.amap.api.services.route.TruckRouteRestult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.route.RouteSearch.RideRouteQuery obj = new com.amap.api.services.route.RouteSearch.RideRouteQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_RideRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.route.RouteSearch.RideRouteQuery obj = new com.amap.api.services.route.RouteSearch.RideRouteQuery(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_RideRouteQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_RideRouteQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearch.RideRouteQuery obj = new com.amap.api.services.route.RouteSearch.RideRouteQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DriveRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DriveRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint__String");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
            // list arg
            List<Integer> var3RefIdList = (List<Integer>) args.get("var3");
            List<com.amap.api.services.core.LatLonPoint> var3 = new ArrayList<>();
            for (int refId : var3RefIdList) {
                var3.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
            List<com.amap.api.services.core.LatLonPoint> var4 = new ArrayList<>();
            // jsonable arg
            String var5 = (String) args.get("var5");
        
            // create target object
            com.amap.api.services.route.RouteSearch.DriveRouteQuery obj = new com.amap.api.services.route.RouteSearch.DriveRouteQuery(var1, var2, new ArrayList(var3), new ArrayList(var4), var5);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DriveRouteQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DriveRouteQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearch.DriveRouteQuery obj = new com.amap.api.services.route.RouteSearch.DriveRouteQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteRailwayItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteRailwayItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteRailwayItem obj = new com.amap.api.services.route.RouteRailwayItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_WalkStep__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_WalkStep__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.WalkStep obj = new com.amap.api.services.route.WalkStep();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RailwayStationItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RailwayStationItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RailwayStationItem obj = new com.amap.api.services.route.RailwayStationItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RideRouteResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RideRouteResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RideRouteResult obj = new com.amap.api.services.route.RideRouteResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_FromAndTo__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_FromAndTo__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.route.RouteSearch.FromAndTo obj = new com.amap.api.services.route.RouteSearch.FromAndTo(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_FromAndTo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_FromAndTo__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearch.FromAndTo obj = new com.amap.api.services.route.RouteSearch.FromAndTo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RidePath__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RidePath__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RidePath obj = new com.amap.api.services.route.RidePath();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_BusRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__String__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_BusRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__String__int");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // create target object
            com.amap.api.services.route.RouteSearch.BusRouteQuery obj = new com.amap.api.services.route.RouteSearch.BusRouteQuery(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_BusRouteQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_BusRouteQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearch.BusRouteQuery obj = new com.amap.api.services.route.RouteSearch.BusRouteQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RideStep__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RideStep__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RideStep obj = new com.amap.api.services.route.RideStep();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearchCity__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearchCity__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearchCity obj = new com.amap.api.services.route.RouteSearchCity();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DistanceResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DistanceResult obj = new com.amap.api.services.route.DistanceResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.route.RouteSearch.WalkRouteQuery obj = new com.amap.api.services.route.RouteSearch.WalkRouteQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_WalkRouteQuery__com_amap_api_services_route_RouteSearch_FromAndTo");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.route.RouteSearch.WalkRouteQuery obj = new com.amap.api.services.route.RouteSearch.WalkRouteQuery(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_WalkRouteQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_WalkRouteQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearch.WalkRouteQuery obj = new com.amap.api.services.route.RouteSearch.WalkRouteQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_District__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_District__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.District obj = new com.amap.api.services.route.District();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_WalkRouteResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_WalkRouteResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.WalkRouteResult obj = new com.amap.api.services.route.WalkRouteResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DistanceSearch_DistanceQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceSearch_DistanceQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DistanceSearch.DistanceQuery obj = new com.amap.api.services.route.DistanceSearch.DistanceQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_SearchCity__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_SearchCity__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.SearchCity obj = new com.amap.api.services.route.SearchCity();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DistanceSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.route.DistanceSearch obj = new com.amap.api.services.route.DistanceSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_WalkPath__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_WalkPath__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.WalkPath obj = new com.amap.api.services.route.WalkPath();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteBusLineItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteBusLineItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteBusLineItem obj = new com.amap.api.services.route.RouteBusLineItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DrivePlanQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__int__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DrivePlanQuery__com_amap_api_services_route_RouteSearch_FromAndTo__int__int__int");
        
            // args
            // ref arg
            com.amap.api.services.route.RouteSearch.FromAndTo var1 = (com.amap.api.services.route.RouteSearch.FromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            int var4 = (int) args.get("var4");
        
            // create target object
            com.amap.api.services.route.RouteSearch.DrivePlanQuery obj = new com.amap.api.services.route.RouteSearch.DrivePlanQuery(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_RouteSearch_DrivePlanQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_RouteSearch_DrivePlanQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.RouteSearch.DrivePlanQuery obj = new com.amap.api.services.route.RouteSearch.DrivePlanQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DrivePlanStep__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DrivePlanStep__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DrivePlanStep obj = new com.amap.api.services.route.DrivePlanStep();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TimeInfo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TimeInfo__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TimeInfo obj = new com.amap.api.services.route.TimeInfo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DriveStep__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DriveStep__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DriveStep obj = new com.amap.api.services.route.DriveStep();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TruckStep__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TruckStep__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TruckStep obj = new com.amap.api.services.route.TruckStep();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DriveRouteResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DriveRouteResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DriveRouteResult obj = new com.amap.api.services.route.DriveRouteResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DrivePath__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DrivePath__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DrivePath obj = new com.amap.api.services.route.DrivePath();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TruckPath__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TruckPath__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TruckPath obj = new com.amap.api.services.route.TruckPath();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_Doorway__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_Doorway__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.Doorway obj = new com.amap.api.services.route.Doorway();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DrivePlanPath__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DrivePlanPath__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DrivePlanPath obj = new com.amap.api.services.route.DrivePlanPath();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_TimeInfosElement__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_TimeInfosElement__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.TimeInfosElement obj = new com.amap.api.services.route.TimeInfosElement();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_DistanceItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_DistanceItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.DistanceItem obj = new com.amap.api.services.route.DistanceItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_route_Path__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_route_Path__");
        
            // args
        
        
            // create target object
            com.amap.api.services.route.Path obj = new com.amap.api.services.route.Path();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_road_Road__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_road_Road__");
        
            // args
        
        
            // create target object
            com.amap.api.services.road.Road obj = new com.amap.api.services.road.Road();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_road_Road__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_road_Road__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.road.Road obj = new com.amap.api.services.road.Road(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_road_Crossroad__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_road_Crossroad__");
        
            // args
        
        
            // create target object
            com.amap.api.services.road.Crossroad obj = new com.amap.api.services.road.Crossroad();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_nearby_NearbyInfo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_nearby_NearbyInfo__");
        
            // args
        
        
            // create target object
            com.amap.api.services.nearby.NearbyInfo obj = new com.amap.api.services.nearby.NearbyInfo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_nearby_UploadInfo__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_nearby_UploadInfo__");
        
            // args
        
        
            // create target object
            com.amap.api.services.nearby.UploadInfo obj = new com.amap.api.services.nearby.UploadInfo();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_nearby_NearbySearchResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_nearby_NearbySearchResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.nearby.NearbySearchResult obj = new com.amap.api.services.nearby.NearbySearchResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_nearby_NearbySearch_NearbyQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_nearby_NearbySearch_NearbyQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.nearby.NearbySearch.NearbyQuery obj = new com.amap.api.services.nearby.NearbySearch.NearbyQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_routepoisearch_RoutePOIItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_routepoisearch_RoutePOIItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.routepoisearch.RoutePOIItem obj = new com.amap.api.services.routepoisearch.RoutePOIItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_routepoisearch_RoutePOISearch__android_content_Context__com_amap_api_services_routepoisearch_RoutePOISearchQuery", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_routepoisearch_RoutePOISearch__android_content_Context__com_amap_api_services_routepoisearch_RoutePOISearchQuery");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.routepoisearch.RoutePOISearchQuery var2 = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.routepoisearch.RoutePOISearch obj = new com.amap.api.services.routepoisearch.RoutePOISearch(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_routepoisearch_RoutePOISearchResult__com_amap_api_services_routepoisearch_RoutePOIItem__com_amap_api_services_routepoisearch_RoutePOISearchQuery", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_routepoisearch_RoutePOISearchResult__com_amap_api_services_routepoisearch_RoutePOIItem__com_amap_api_services_routepoisearch_RoutePOISearchQuery");
        
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.routepoisearch.RoutePOIItem> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.routepoisearch.RoutePOIItem) getHEAP().get(refId));
            }
            // ref arg
            com.amap.api.services.routepoisearch.RoutePOISearchQuery var2 = (com.amap.api.services.routepoisearch.RoutePOISearchQuery) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.routepoisearch.RoutePOISearchResult obj = new com.amap.api.services.routepoisearch.RoutePOISearchResult(new ArrayList(var1), var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_routepoisearch_RoutePOISearchQuery__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint__int__com_amap_api_services_routepoisearch_RoutePOISearch_RoutePOISearchType__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_routepoisearch_RoutePOISearchQuery__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint__int__com_amap_api_services_routepoisearch_RoutePOISearch_RoutePOISearchType__int");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            int var3 = (int) args.get("var3");
            // enum arg
            com.amap.api.services.routepoisearch.RoutePOISearch.RoutePOISearchType var4 = com.amap.api.services.routepoisearch.RoutePOISearch.RoutePOISearchType.values()[(int) args.get("var4")];
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // create target object
            com.amap.api.services.routepoisearch.RoutePOISearchQuery obj = new com.amap.api.services.routepoisearch.RoutePOISearchQuery(var1, var2, var3, var4, var5);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_routepoisearch_RoutePOISearchQuery__com_amap_api_services_core_LatLonPoint__com_amap_api_services_routepoisearch_RoutePOISearch_RoutePOISearchType__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_routepoisearch_RoutePOISearchQuery__com_amap_api_services_core_LatLonPoint__com_amap_api_services_routepoisearch_RoutePOISearch_RoutePOISearchType__int");
        
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
            // enum arg
            com.amap.api.services.routepoisearch.RoutePOISearch.RoutePOISearchType var2 = com.amap.api.services.routepoisearch.RoutePOISearch.RoutePOISearchType.values()[(int) args.get("var2")];
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // create target object
            com.amap.api.services.routepoisearch.RoutePOISearchQuery obj = new com.amap.api.services.routepoisearch.RoutePOISearchQuery(new ArrayList(var1), var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudItem__String__com_amap_api_services_core_LatLonPoint__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudItem__String__com_amap_api_services_core_LatLonPoint__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
        
            // create target object
            com.amap.api.services.cloud.CloudItem obj = new com.amap.api.services.cloud.CloudItem(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_Query__String__String__com_amap_api_services_cloud_CloudSearch_SearchBound", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_Query__String__String__com_amap_api_services_cloud_CloudSearch_SearchBound");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // ref arg
            com.amap.api.services.cloud.CloudSearch.SearchBound var3 = (com.amap.api.services.cloud.CloudSearch.SearchBound) getHEAP().get((int) args.get("var3"));
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.Query obj = new com.amap.api.services.cloud.CloudSearch.Query(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.cloud.CloudSearch obj = new com.amap.api.services.cloud.CloudSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_SearchBound__com_amap_api_services_core_LatLonPoint__int");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.SearchBound obj = new com.amap.api.services.cloud.CloudSearch.SearchBound(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_SearchBound__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_SearchBound__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.SearchBound obj = new com.amap.api.services.cloud.CloudSearch.SearchBound(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_SearchBound__com_amap_api_services_core_LatLonPoint", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_SearchBound__com_amap_api_services_core_LatLonPoint");
        
            // args
            // list arg
            List<Integer> var1RefIdList = (List<Integer>) args.get("var1");
            List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
            for (int refId : var1RefIdList) {
                var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
            }
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.SearchBound obj = new com.amap.api.services.cloud.CloudSearch.SearchBound(new ArrayList(var1));
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_SearchBound__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_SearchBound__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.SearchBound obj = new com.amap.api.services.cloud.CloudSearch.SearchBound(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudImage__String__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudImage__String__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // create target object
            com.amap.api.services.cloud.CloudImage obj = new com.amap.api.services.cloud.CloudImage(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_Sortingrules__String__boolean", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_Sortingrules__String__boolean");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            boolean var2 = (boolean) args.get("var2");
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.Sortingrules obj = new com.amap.api.services.cloud.CloudSearch.Sortingrules(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudSearch_Sortingrules__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudSearch_Sortingrules__int");
        
            // args
            // jsonable arg
            int var1 = (int) args.get("var1");
        
            // create target object
            com.amap.api.services.cloud.CloudSearch.Sortingrules obj = new com.amap.api.services.cloud.CloudSearch.Sortingrules(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_cloud_CloudItemDetail__String__com_amap_api_services_core_LatLonPoint__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_cloud_CloudItemDetail__String__com_amap_api_services_core_LatLonPoint__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
            // jsonable arg
            String var3 = (String) args.get("var3");
            // jsonable arg
            String var4 = (String) args.get("var4");
        
            // create target object
            com.amap.api.services.cloud.CloudItemDetail obj = new com.amap.api.services.cloud.CloudItemDetail(var1, var2, var3, var4);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_weather_LocalDayWeatherForecast__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_weather_LocalDayWeatherForecast__");
        
            // args
        
        
            // create target object
            com.amap.api.services.weather.LocalDayWeatherForecast obj = new com.amap.api.services.weather.LocalDayWeatherForecast();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_weather_WeatherSearchQuery__String__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_weather_WeatherSearchQuery__String__int");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.weather.WeatherSearchQuery obj = new com.amap.api.services.weather.WeatherSearchQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_weather_WeatherSearchQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_weather_WeatherSearchQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.weather.WeatherSearchQuery obj = new com.amap.api.services.weather.WeatherSearchQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_weather_LocalWeatherForecast__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_weather_LocalWeatherForecast__");
        
            // args
        
        
            // create target object
            com.amap.api.services.weather.LocalWeatherForecast obj = new com.amap.api.services.weather.LocalWeatherForecast();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_weather_WeatherSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_weather_WeatherSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.weather.WeatherSearch obj = new com.amap.api.services.weather.WeatherSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_weather_LocalWeatherLive__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_weather_LocalWeatherLive__");
        
            // args
        
        
            // create target object
            com.amap.api.services.weather.LocalWeatherLive obj = new com.amap.api.services.weather.LocalWeatherLive();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_BusinessArea__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_BusinessArea__");
        
            // args
        
        
            // create target object
            com.amap.api.services.geocoder.BusinessArea obj = new com.amap.api.services.geocoder.BusinessArea();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_GeocodeQuery__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_GeocodeQuery__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.geocoder.GeocodeQuery obj = new com.amap.api.services.geocoder.GeocodeQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_GeocodeSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_GeocodeSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.geocoder.GeocodeSearch obj = new com.amap.api.services.geocoder.GeocodeSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_RegeocodeResult__com_amap_api_services_geocoder_RegeocodeQuery__com_amap_api_services_geocoder_RegeocodeAddress", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_RegeocodeResult__com_amap_api_services_geocoder_RegeocodeQuery__com_amap_api_services_geocoder_RegeocodeAddress");
        
            // args
            // ref arg
            com.amap.api.services.geocoder.RegeocodeQuery var1 = (com.amap.api.services.geocoder.RegeocodeQuery) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.geocoder.RegeocodeAddress var2 = (com.amap.api.services.geocoder.RegeocodeAddress) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.geocoder.RegeocodeResult obj = new com.amap.api.services.geocoder.RegeocodeResult(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_GeocodeResult__com_amap_api_services_geocoder_GeocodeQuery__com_amap_api_services_geocoder_GeocodeAddress", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_GeocodeResult__com_amap_api_services_geocoder_GeocodeQuery__com_amap_api_services_geocoder_GeocodeAddress");
        
            // args
            // ref arg
            com.amap.api.services.geocoder.GeocodeQuery var1 = (com.amap.api.services.geocoder.GeocodeQuery) getHEAP().get((int) args.get("var1"));
            // list arg
            List<Integer> var2RefIdList = (List<Integer>) args.get("var2");
            List<com.amap.api.services.geocoder.GeocodeAddress> var2 = new ArrayList<>();
            for (int refId : var2RefIdList) {
                var2.add((com.amap.api.services.geocoder.GeocodeAddress) getHEAP().get(refId));
            }
        
            // create target object
            com.amap.api.services.geocoder.GeocodeResult obj = new com.amap.api.services.geocoder.GeocodeResult(var1, new ArrayList(var2));
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_AoiItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_AoiItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.geocoder.AoiItem obj = new com.amap.api.services.geocoder.AoiItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_RegeocodeRoad__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_RegeocodeRoad__");
        
            // args
        
        
            // create target object
            com.amap.api.services.geocoder.RegeocodeRoad obj = new com.amap.api.services.geocoder.RegeocodeRoad();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_GeocodeAddress__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_GeocodeAddress__");
        
            // args
        
        
            // create target object
            com.amap.api.services.geocoder.GeocodeAddress obj = new com.amap.api.services.geocoder.GeocodeAddress();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_RegeocodeQuery__com_amap_api_services_core_LatLonPoint__float__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_RegeocodeQuery__com_amap_api_services_core_LatLonPoint__float__String");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            Double var2 = (Double) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
        
            // create target object
            com.amap.api.services.geocoder.RegeocodeQuery obj = new com.amap.api.services.geocoder.RegeocodeQuery(var1, new Double(var2).floatValue(), var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_StreetNumber__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_StreetNumber__");
        
            // args
        
        
            // create target object
            com.amap.api.services.geocoder.StreetNumber obj = new com.amap.api.services.geocoder.StreetNumber();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_geocoder_RegeocodeAddress__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_geocoder_RegeocodeAddress__");
        
            // args
        
        
            // create target object
            com.amap.api.services.geocoder.RegeocodeAddress obj = new com.amap.api.services.geocoder.RegeocodeAddress();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictSearchQuery__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictSearchQuery__");
        
            // args
        
        
            // create target object
            com.amap.api.services.district.DistrictSearchQuery obj = new com.amap.api.services.district.DistrictSearchQuery();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictSearchQuery__String__String__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictSearchQuery__String__String__int");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
        
            // create target object
            com.amap.api.services.district.DistrictSearchQuery obj = new com.amap.api.services.district.DistrictSearchQuery(var1, var2, var3);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictSearchQuery__String__String__int__boolean__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictSearchQuery__String__String__int__boolean__int");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            int var3 = (int) args.get("var3");
            // jsonable arg
            boolean var4 = (boolean) args.get("var4");
            // jsonable arg
            int var5 = (int) args.get("var5");
        
            // create target object
            com.amap.api.services.district.DistrictSearchQuery obj = new com.amap.api.services.district.DistrictSearchQuery(var1, var2, var3, var4, var5);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.district.DistrictSearch obj = new com.amap.api.services.district.DistrictSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictResult__com_amap_api_services_district_DistrictSearchQuery__com_amap_api_services_district_DistrictItem", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictResult__com_amap_api_services_district_DistrictSearchQuery__com_amap_api_services_district_DistrictItem");
        
            // args
            // ref arg
            com.amap.api.services.district.DistrictSearchQuery var1 = (com.amap.api.services.district.DistrictSearchQuery) getHEAP().get((int) args.get("var1"));
            // list arg
            List<Integer> var2RefIdList = (List<Integer>) args.get("var2");
            List<com.amap.api.services.district.DistrictItem> var2 = new ArrayList<>();
            for (int refId : var2RefIdList) {
                var2.add((com.amap.api.services.district.DistrictItem) getHEAP().get(refId));
            }
        
            // create target object
            com.amap.api.services.district.DistrictResult obj = new com.amap.api.services.district.DistrictResult(var1, new ArrayList(var2));
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictResult__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictResult__");
        
            // args
        
        
            // create target object
            com.amap.api.services.district.DistrictResult obj = new com.amap.api.services.district.DistrictResult();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictItem__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictItem__");
        
            // args
        
        
            // create target object
            com.amap.api.services.district.DistrictItem obj = new com.amap.api.services.district.DistrictItem();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_district_DistrictItem__String__String__String__com_amap_api_services_core_LatLonPoint__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_district_DistrictItem__String__String__String__com_amap_api_services_core_LatLonPoint__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
            // jsonable arg
            String var3 = (String) args.get("var3");
            // ref arg
            com.amap.api.services.core.LatLonPoint var4 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var4"));
            // jsonable arg
            String var5 = (String) args.get("var5");
        
            // create target object
            com.amap.api.services.district.DistrictItem obj = new com.amap.api.services.district.DistrictItem(var1, var2, var3, var4, var5);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_help_Tip__", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_help_Tip__");
        
            // args
        
        
            // create target object
            com.amap.api.services.help.Tip obj = new com.amap.api.services.help.Tip();
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_help_InputtipsQuery__String__String", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_help_InputtipsQuery__String__String");
        
            // args
            // jsonable arg
            String var1 = (String) args.get("var1");
            // jsonable arg
            String var2 = (String) args.get("var2");
        
            // create target object
            com.amap.api.services.help.InputtipsQuery obj = new com.amap.api.services.help.InputtipsQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_help_Inputtips__android_content_Context__com_amap_api_services_help_InputtipsQuery", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_help_Inputtips__android_content_Context__com_amap_api_services_help_InputtipsQuery");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.help.InputtipsQuery var2 = (com.amap.api.services.help.InputtipsQuery) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.help.Inputtips obj = new com.amap.api.services.help.Inputtips(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_share_ShareSearch_ShareNaviQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_share_ShareSearch_ShareNaviQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int");
        
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareFromAndTo var1 = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.share.ShareSearch.ShareNaviQuery obj = new com.amap.api.services.share.ShareSearch.ShareNaviQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_share_ShareSearch_ShareBusRouteQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_share_ShareSearch_ShareBusRouteQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int");
        
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareFromAndTo var1 = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.share.ShareSearch.ShareBusRouteQuery obj = new com.amap.api.services.share.ShareSearch.ShareBusRouteQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_share_ShareSearch__android_content_Context", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_share_ShareSearch__android_content_Context");
        
            // args
            // ref arg
            android.content.Context var1 = (android.content.Context) getHEAP().get((int) args.get("var1"));
        
            // create target object
            com.amap.api.services.share.ShareSearch obj = new com.amap.api.services.share.ShareSearch(var1);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_share_ShareSearch_ShareFromAndTo__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_share_ShareSearch_ShareFromAndTo__com_amap_api_services_core_LatLonPoint__com_amap_api_services_core_LatLonPoint");
        
            // args
            // ref arg
            com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var1"));
            // ref arg
            com.amap.api.services.core.LatLonPoint var2 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) args.get("var2"));
        
            // create target object
            com.amap.api.services.share.ShareSearch.ShareFromAndTo obj = new com.amap.api.services.share.ShareSearch.ShareFromAndTo(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_share_ShareSearch_ShareWalkRouteQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_share_ShareSearch_ShareWalkRouteQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int");
        
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareFromAndTo var1 = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery obj = new com.amap.api.services.share.ShareSearch.ShareWalkRouteQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
        // factory
        put("ObjectFactory::createcom_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int", (args, methodResult) -> {
            Log.d("ObjectFactory", "创建对象: com_amap_api_services_share_ShareSearch_ShareDrivingRouteQuery__com_amap_api_services_share_ShareSearch_ShareFromAndTo__int");
        
            // args
            // ref arg
            com.amap.api.services.share.ShareSearch.ShareFromAndTo var1 = (com.amap.api.services.share.ShareSearch.ShareFromAndTo) getHEAP().get((int) args.get("var1"));
            // jsonable arg
            int var2 = (int) args.get("var2");
        
            // create target object
            com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery obj = new com.amap.api.services.share.ShareSearch.ShareDrivingRouteQuery(var1, var2);
            getHEAP().put(obj.hashCode(), obj);
        
            // print current HEAP
            if (getEnableLog()) {
                Log.d("ObjectFactory", "HEAP: " + getHEAP());
            }
        
            methodResult.success(obj.hashCode());
        });
    }};

    // v1 android embedding for compatible
    public static void registerWith(Registrar registrar) {
        final MethodChannel channel = new MethodChannel(registrar.messenger(), "me.yohom/amap_search_fluttify");

        AmapSearchFluttifyPlugin plugin = new AmapSearchFluttifyPlugin();
        BinaryMessenger messenger = registrar.messenger();
        plugin.messenger = messenger;

        channel.setMethodCallHandler(plugin);

        // register platform view
        PlatformViewRegistry platformViewRegistry = registrar.platformViewRegistry();
        
    }

    // v2 android embedding
    @Override
    public void onAttachedToEngine(FlutterPluginBinding binding) {
        final MethodChannel channel = new MethodChannel(binding.getBinaryMessenger(), "me.yohom/amap_search_fluttify");

        messenger = binding.getBinaryMessenger();

        channel.setMethodCallHandler(this);


        // register platform view
        PlatformViewRegistry platformViewRegistry = binding.getPlatformViewRegistry();
        
    }

    @Override
    public void onDetachedFromEngine(FlutterPluginBinding binding) {

    }

    @Override
    public void onMethodCall(@NonNull MethodCall methodCall, @NonNull MethodChannel.Result methodResult) {
        Map<String, Object> args = (Map<String, Object>) methodCall.arguments;
        Handler handler = handlerMap.get(methodCall.method);
        if (handler != null) {
            try {
                handler.call(args, methodResult);
            } catch (Exception e) {
                e.printStackTrace();
                methodResult.error(e.getMessage(), null, null);
            }
        } else {
            methodResult.notImplemented();
        }
    }

    @FunctionalInterface
    interface Handler {
        void call(Map<String, Object> args, MethodChannel.Result methodResult) throws Exception;
    }
}
