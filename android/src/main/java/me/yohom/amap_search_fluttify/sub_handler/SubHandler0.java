//////////////////////////////////////////////////////////
// GENERATED BY FLUTTIFY. DO NOT EDIT IT.
//////////////////////////////////////////////////////////

package me.yohom.amap_search_fluttify.sub_handler;

import android.os.Bundle;
import android.util.Log;

import java.util.ArrayList;
import java.util.Collection;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

import androidx.annotation.NonNull;
import io.flutter.embedding.engine.plugins.FlutterPlugin;
import io.flutter.plugin.common.BinaryMessenger;
import io.flutter.plugin.common.MethodCall;
import io.flutter.plugin.common.MethodChannel;
import io.flutter.plugin.common.PluginRegistry.Registrar;
import io.flutter.plugin.platform.PlatformViewRegistry;

import me.yohom.amap_search_fluttify.AmapSearchFluttifyPlugin.Handler;

import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getEnableLog;
import static me.yohom.foundation_fluttify.FoundationFluttifyPluginKt.getHEAP;

@SuppressWarnings("ALL")
public class SubHandler0 {
    public static Map<String, Handler> getSubHandler(BinaryMessenger messenger) {
        return new HashMap<String, Handler>() {{
            // getter
            put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_NO_DRIVE", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
            
                int result = ref.ERROR_CODE_NO_DRIVE;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_TOO_FAR", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
            
                int result = ref.ERROR_CODE_TOO_FAR;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_NOT_IN_CHINA", (args, methodResult) -> {
                // ref object
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get(refId);
            
                int result = ref.ERROR_CODE_NOT_IN_CHINA;
            
            
            
                methodResult.success(result);
            });
            // getter
            put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_NO_DRIVE_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.ERROR_CODE_NO_DRIVE;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_TOO_FAR_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.ERROR_CODE_TOO_FAR;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // getter
            put("com.amap.api.services.route.DistanceItem::get_ERROR_CODE_NOT_IN_CHINA_batch", (argsBatch, methodResult) -> {
                List<Integer> resultList = new ArrayList<>();
            
                for (int __i__ = 0; __i__ < ((List<Map<String, Object>>) argsBatch).size(); __i__++) {
                    Map<String, Object> args = ((List<Map<String, Object>>) argsBatch).get(__i__);
            
                    // ref object
                    com.amap.api.services.route.DistanceItem ref = (com.amap.api.services.route.DistanceItem) getHEAP().get((int) args.get("refId"));
            
                    int result = ref.ERROR_CODE_NOT_IN_CHINA;
            
                    int jsonableResult = result;
            
                    resultList.add(jsonableResult);
                }
            
                methodResult.success(resultList);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getStatus", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getStatus(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getStatus();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setStatus", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setStatus(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStatus(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getDirection", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getDirection(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getDirection();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setDirection", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setDirection(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDirection(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getAngle", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getAngle(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getAngle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setAngle", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setAngle(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAngle(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getSpeed", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getSpeed(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getSpeed();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setSpeed", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setSpeed(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSpeed(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getLcodes", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getLcodes(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getLcodes();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setLcodes", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setLcodes(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLcodes(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::getCoordinates", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::getCoordinates(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.core.LatLonPoint> result;
                try {
                    result = ref.getCoordinates();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.core.LatLonPoint item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusInfo::setCoordinates", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusInfo ref = (com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusInfo@" + refId + "::setCoordinates(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCoordinates(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusResult::getDescription", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::getDescription(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getDescription();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusResult::setDescription", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::setDescription(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDescription(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusResult::getEvaluation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::getEvaluation(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.traffic.TrafficStatusEvaluation result;
                try {
                    result = ref.getEvaluation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusResult::setEvaluation", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.traffic.TrafficStatusEvaluation var1 = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::setEvaluation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setEvaluation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusResult::getRoads", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::getRoads(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.traffic.TrafficStatusInfo> result;
                try {
                    result = ref.getRoads();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.traffic.TrafficStatusInfo item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusResult::setRoads", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.traffic.TrafficStatusInfo> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.traffic.TrafficStatusInfo) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusResult ref = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusResult@" + refId + "::setRoads(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRoads(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficSearch::setTrafficSearchListener", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficSearch ref = (com.amap.api.services.traffic.TrafficSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficSearch@" + refId + "::setTrafficSearchListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setTrafficSearchListener(new com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.traffic.TrafficSearch::setTrafficSearchListener::Callback");
            
                    // call dart method
                    @Override
                    public void onRoadTrafficSearched(com.amap.api.services.traffic.TrafficStatusResult var1, int var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onRoadTrafficSearched(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        int argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener::onRoadTrafficSearched",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener::onRoadTrafficSearched", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.traffic.TrafficStatusResult var1 = (com.amap.api.services.traffic.TrafficStatusResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener ref = (com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficSearch.OnTrafficSearchListener@" + refId + "::onRoadTrafficSearched(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onRoadTrafficSearched(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.RoadTrafficQuery::getName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.RoadTrafficQuery ref = (com.amap.api.services.traffic.RoadTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.RoadTrafficQuery@" + refId + "::getName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.RoadTrafficQuery::setName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.RoadTrafficQuery ref = (com.amap.api.services.traffic.RoadTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.RoadTrafficQuery@" + refId + "::setName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.RoadTrafficQuery::getAdCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.RoadTrafficQuery ref = (com.amap.api.services.traffic.RoadTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.RoadTrafficQuery@" + refId + "::getAdCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getAdCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.RoadTrafficQuery::setAdCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.RoadTrafficQuery ref = (com.amap.api.services.traffic.RoadTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.RoadTrafficQuery@" + refId + "::setAdCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAdCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.RoadTrafficQuery::clone", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.RoadTrafficQuery ref = (com.amap.api.services.traffic.RoadTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.RoadTrafficQuery@" + refId + "::clone(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.traffic.RoadTrafficQuery result;
                try {
                    result = ref.clone();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.CircleTrafficQuery::getCenterPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.CircleTrafficQuery ref = (com.amap.api.services.traffic.CircleTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.CircleTrafficQuery@" + refId + "::getCenterPoint(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.LatLonPoint result;
                try {
                    result = ref.getCenterPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.CircleTrafficQuery::setCenterPoint", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.CircleTrafficQuery ref = (com.amap.api.services.traffic.CircleTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.CircleTrafficQuery@" + refId + "::setCenterPoint(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCenterPoint(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.CircleTrafficQuery::getRadius", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.CircleTrafficQuery ref = (com.amap.api.services.traffic.CircleTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.CircleTrafficQuery@" + refId + "::getRadius(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getRadius();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.CircleTrafficQuery::setRadius", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.CircleTrafficQuery ref = (com.amap.api.services.traffic.CircleTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.CircleTrafficQuery@" + refId + "::setRadius(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setRadius(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.CircleTrafficQuery::clone", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.CircleTrafficQuery ref = (com.amap.api.services.traffic.CircleTrafficQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.CircleTrafficQuery@" + refId + "::clone(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.traffic.CircleTrafficQuery result;
                try {
                    result = ref.clone();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::getExpedite", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getExpedite(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getExpedite();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::setExpedite", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setExpedite(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setExpedite(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::getCongested", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getCongested(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCongested();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::setCongested", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setCongested(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCongested(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::getBlocked", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getBlocked(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBlocked();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::setBlocked", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setBlocked(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBlocked(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::getUnknown", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getUnknown(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getUnknown();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::setUnknown", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setUnknown(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setUnknown(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::getStatus", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getStatus(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getStatus();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::setStatus", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setStatus(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setStatus(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::getDescription", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::getDescription(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getDescription();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.traffic.TrafficStatusEvaluation::setDescription", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.traffic.TrafficStatusEvaluation ref = (com.amap.api.services.traffic.TrafficStatusEvaluation) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.traffic.TrafficStatusEvaluation@" + refId + "::setDescription(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDescription(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener::onBusLineSearched", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusLineResult var1 = (com.amap.api.services.busline.BusLineResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener ref = (com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener@" + refId + "::onBusLineSearched(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onBusLineSearched(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener::onBusStationSearched", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusStationResult var1 = (com.amap.api.services.busline.BusStationResult) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
                // jsonable arg
                int var2 = (int) ((Map<String, Object>) args).get("var2");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener ref = (com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener@" + refId + "::onBusStationSearched(" + var1 + var2 + ")");
                }
            
                // invoke native method
                try {
                    ref.onBusStationSearched(var1, var2);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getDistance", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getDistance(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getDistance();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setDistance", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setDistance(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDistance(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBusLineName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusLineName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusLineName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBusLineName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusLineName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusLineName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBusLineType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusLineType(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusLineType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBusLineType", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusLineType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusLineType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getCityCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getCityCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCityCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setCityCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setCityCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCityCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getDirectionsCoordinates", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getDirectionsCoordinates(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.core.LatLonPoint> result;
                try {
                    result = ref.getDirectionsCoordinates();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.core.LatLonPoint item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setDirectionsCoordinates", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setDirectionsCoordinates(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDirectionsCoordinates(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBounds", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBounds(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.core.LatLonPoint> result;
                try {
                    result = ref.getBounds();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.core.LatLonPoint item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBounds", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.core.LatLonPoint> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.core.LatLonPoint) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBounds(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBounds(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBusLineId", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusLineId(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusLineId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBusLineId", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusLineId(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusLineId(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getOriginatingStation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getOriginatingStation(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getOriginatingStation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setOriginatingStation", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setOriginatingStation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setOriginatingStation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getTerminalStation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getTerminalStation(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getTerminalStation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setTerminalStation", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setTerminalStation(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTerminalStation(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBusCompany", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusCompany(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusCompany();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBusCompany", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusCompany(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusCompany(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBasicPrice", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBasicPrice(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getBasicPrice();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBasicPrice", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBasicPrice(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBasicPrice(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getTotalPrice", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getTotalPrice(" + "" + ")");
                }
            
                // invoke native method
                float result;
                try {
                    result = ref.getTotalPrice();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                float jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setTotalPrice", (args, methodResult) -> {
                // args
                // jsonable arg
                Double var1 = (Double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setTotalPrice(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTotalPrice(new Double(var1).floatValue());
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::getBusStations", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::getBusStations(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.busline.BusStationItem> result;
                try {
                    result = ref.getBusStations();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.busline.BusStationItem item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineItem::setBusStations", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.busline.BusStationItem> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.busline.BusStationItem) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineItem ref = (com.amap.api.services.busline.BusLineItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineItem@" + refId + "::setBusStations(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusStations(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationResult::createPagedResult", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusStationQuery var0 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // list arg
                List<Integer> var2RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var2");
                List<com.amap.api.services.core.SuggestionCity> var2 = new ArrayList<>();
                for (int refId : var2RefIdList) {
                    var2.add((com.amap.api.services.core.SuggestionCity) getHEAP().get(refId));
                }
                // jsonable arg
                List<String> var3 = (List<String>) ((Map<String, Object>) args).get("var3");
                // list arg
                List<Integer> var4RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var4");
                List<com.amap.api.services.busline.BusStationItem> var4 = new ArrayList<>();
                for (int refId : var4RefIdList) {
                    var4.add((com.amap.api.services.busline.BusStationItem) getHEAP().get(refId));
                }
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult::createPagedResult(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusStationResult result;
                try {
                    result = com.amap.api.services.busline.BusStationResult.createPagedResult(var0, var1, new ArrayList(var2), new ArrayList(var3), new ArrayList(var4));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationResult::getPageCount", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getPageCount(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPageCount();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationResult::getQuery", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getQuery(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusStationQuery result;
                try {
                    result = ref.getQuery();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationResult::getSearchSuggestionKeywords", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getSearchSuggestionKeywords(" + "" + ")");
                }
            
                // invoke native method
                List<String> result;
                try {
                    result = ref.getSearchSuggestionKeywords();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationResult::getSearchSuggestionCities", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getSearchSuggestionCities(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.core.SuggestionCity> result;
                try {
                    result = ref.getSearchSuggestionCities();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.core.SuggestionCity item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationResult::getBusStations", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationResult ref = (com.amap.api.services.busline.BusStationResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationResult@" + refId + "::getBusStations(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.busline.BusStationItem> result;
                try {
                    result = ref.getBusStations();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.busline.BusStationItem item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationSearch::searchBusStation", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::searchBusStation(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusStationResult result;
                try {
                    result = ref.searchBusStation();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationSearch::setOnBusStationSearchListener", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::setOnBusStationSearchListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnBusStationSearchListener(new com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.busline.BusStationSearch::setOnBusStationSearchListener::Callback");
            
                    // call dart method
                    @Override
                    public void onBusStationSearched(com.amap.api.services.busline.BusStationResult var1, int var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBusStationSearched(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        int argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.services.busline.BusStationSearch.OnBusStationSearchListener::onBusStationSearched",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationSearch::searchBusStationAsyn", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::searchBusStationAsyn(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.searchBusStationAsyn();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationSearch::setQuery", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusStationQuery var1 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::setQuery(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setQuery(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationSearch::getQuery", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationSearch ref = (com.amap.api.services.busline.BusStationSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationSearch@" + refId + "::getQuery(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusStationQuery result;
                try {
                    result = ref.getQuery();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineSearch::searchBusLine", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::searchBusLine(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusLineResult result;
                try {
                    result = ref.searchBusLine();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineSearch::setOnBusLineSearchListener", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::setOnBusLineSearchListener(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.setOnBusLineSearchListener(new com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener() {
                    // method channel
                    MethodChannel callbackChannel = new MethodChannel(messenger, "com.amap.api.services.busline.BusLineSearch::setOnBusLineSearchListener::Callback");
            
                    // call dart method
                    @Override
                    public void onBusLineSearched(com.amap.api.services.busline.BusLineResult var1, int var2) {
                        // print log
                        if (getEnableLog()) {
                            Log.d("java-callback", "fluttify-java-callback: onBusLineSearched(" + var1 + var2 + ")");
                        }
            
                        // convert to jsonable data
                        // ref arg
                        final Integer argvar1;
                        if (var1 != null) {
                            argvar1 = System.identityHashCode(var1);
                            getHEAP().put(argvar1, var1);
                        } else {
                            argvar1 = null;
                        }
                        // jsonable arg
                        int argvar2 = var2;
            
                        // call dart method
                        callbackChannel.invokeMethod(
                                "Callback::com.amap.api.services.busline.BusLineSearch.OnBusLineSearchListener::onBusLineSearched",
                                new HashMap<String, Object>() {{
                                    put("var1", argvar1);
                                    put("var2", argvar2);
                                }}
                        );
            
                        // method result
            
                    }
            
                });
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineSearch::searchBusLineAsyn", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::searchBusLineAsyn(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.searchBusLineAsyn();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineSearch::setQuery", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusLineQuery var1 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::setQuery(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setQuery(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineSearch::getQuery", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineSearch ref = (com.amap.api.services.busline.BusLineSearch) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineSearch@" + refId + "::getQuery(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusLineQuery result;
                try {
                    result = ref.getQuery();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::getCategory", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getCategory(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusLineQuery.SearchType result;
                try {
                    result = ref.getCategory();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::getQueryString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getQueryString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getQueryString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::setQueryString", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setQueryString(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setQueryString(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::getCity", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getCity(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCity();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::setCity", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setCity(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCity(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::getPageSize", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getPageSize(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPageSize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::setPageSize", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setPageSize(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPageSize(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::getPageNumber", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::getPageNumber(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPageNumber();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::setPageNumber", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setPageNumber(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPageNumber(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::setCategory", (args, methodResult) -> {
                // args
                // enum arg
                com.amap.api.services.busline.BusLineQuery.SearchType var1 = com.amap.api.services.busline.BusLineQuery.SearchType.values()[(int) ((Map<String, Object>) args).get("var1")];
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::setCategory(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCategory(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::clone", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::clone(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusLineQuery result;
                try {
                    result = ref.clone();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineQuery::weakEquals", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusLineQuery var1 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineQuery ref = (com.amap.api.services.busline.BusLineQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineQuery@" + refId + "::weakEquals(" + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.weakEquals(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineResult::createPagedResult", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusLineQuery var0 = (com.amap.api.services.busline.BusLineQuery) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
                // list arg
                List<Integer> var2RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var2");
                List<com.amap.api.services.core.SuggestionCity> var2 = new ArrayList<>();
                for (int refId : var2RefIdList) {
                    var2.add((com.amap.api.services.core.SuggestionCity) getHEAP().get(refId));
                }
                // jsonable arg
                List<String> var3 = (List<String>) ((Map<String, Object>) args).get("var3");
                // list arg
                List<Integer> var4RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var4");
                List<com.amap.api.services.busline.BusLineItem> var4 = new ArrayList<>();
                for (int refId : var4RefIdList) {
                    var4.add((com.amap.api.services.busline.BusLineItem) getHEAP().get(refId));
                }
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult::createPagedResult(" + var0 + var1 + var2 + var3 + var4 + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusLineResult result;
                try {
                    result = com.amap.api.services.busline.BusLineResult.createPagedResult(var0, var1, new ArrayList(var2), new ArrayList(var3), new ArrayList(var4));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineResult::getPageCount", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getPageCount(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPageCount();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineResult::getQuery", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getQuery(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusLineQuery result;
                try {
                    result = ref.getQuery();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineResult::getSearchSuggestionKeywords", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getSearchSuggestionKeywords(" + "" + ")");
                }
            
                // invoke native method
                List<String> result;
                try {
                    result = ref.getSearchSuggestionKeywords();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<String> jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineResult::getSearchSuggestionCities", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getSearchSuggestionCities(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.core.SuggestionCity> result;
                try {
                    result = ref.getSearchSuggestionCities();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.core.SuggestionCity item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusLineResult::getBusLines", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusLineResult ref = (com.amap.api.services.busline.BusLineResult) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusLineResult@" + refId + "::getBusLines(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.busline.BusLineItem> result;
                try {
                    result = ref.getBusLines();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.busline.BusLineItem item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::getBusStationId", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getBusStationId(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusStationId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::setBusStationId", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setBusStationId(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusStationId(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::getBusStationName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getBusStationName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusStationName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::setBusStationName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setBusStationName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusStationName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::getLatLonPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getLatLonPoint(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.LatLonPoint result;
                try {
                    result = ref.getLatLonPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::setLatLonPoint", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setLatLonPoint(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLatLonPoint(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::getCityCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getCityCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCityCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::setCityCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setCityCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCityCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::getAdCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getAdCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getAdCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::setAdCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setAdCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAdCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::getBusLineItems", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::getBusLineItems(" + "" + ")");
                }
            
                // invoke native method
                List<com.amap.api.services.busline.BusLineItem> result;
                try {
                    result = ref.getBusLineItems();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                List<Integer> jsonableResult = null;
                if (result != null) {
                    jsonableResult = new ArrayList<>();
                    for (com.amap.api.services.busline.BusLineItem item : result) {
                        getHEAP().put(System.identityHashCode(item), item);
                        jsonableResult.add(System.identityHashCode(item));
                    }
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationItem::setBusLineItems", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.busline.BusLineItem> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.busline.BusLineItem) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationItem ref = (com.amap.api.services.busline.BusStationItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationItem@" + refId + "::setBusLineItems(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusLineItems(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::getQueryString", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getQueryString(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getQueryString();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::getCity", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getCity(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCity();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::getPageSize", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getPageSize(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPageSize();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::getPageNumber", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::getPageNumber(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getPageNumber();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::setQueryString", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setQueryString(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setQueryString(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::setCity", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setCity(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCity(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::setPageSize", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setPageSize(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPageSize(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::setPageNumber", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::setPageNumber(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPageNumber(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::clone", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::clone(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.busline.BusStationQuery result;
                try {
                    result = ref.clone();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.busline.BusStationQuery::weakEquals", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.busline.BusStationQuery var1 = (com.amap.api.services.busline.BusStationQuery) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.busline.BusStationQuery ref = (com.amap.api.services.busline.BusStationQuery) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.busline.BusStationQuery@" + refId + "::weakEquals(" + var1 + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.weakEquals(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.AMapException::getErrorLevel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorLevel(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getErrorLevel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.AMapException::getErrorType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorType(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getErrorType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.AMapException::getErrorMessage", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorMessage(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getErrorMessage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.AMapException::getErrorCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.AMapException ref = (com.amap.api.services.core.AMapException) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.AMapException@" + refId + "::getErrorCode(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getErrorCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::getConnectionTimeOut", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getConnectionTimeOut(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getConnectionTimeOut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::getSoTimeOut", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getSoTimeOut(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getSoTimeOut();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::setConnectionTimeOut", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setConnectionTimeOut(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setConnectionTimeOut(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::setSoTimeOut", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setSoTimeOut(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSoTimeOut(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::getInstance", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings::getInstance(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.ServiceSettings result;
                try {
                    result = com.amap.api.services.core.ServiceSettings.getInstance();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::setLanguage", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setLanguage(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLanguage(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::setProtocol", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setProtocol(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setProtocol(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::getLanguage", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getLanguage(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getLanguage();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::getProtocol", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::getProtocol(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getProtocol();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::setApiKey", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::setApiKey(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setApiKey(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.ServiceSettings::destroyInnerAsynThreadPool", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.ServiceSettings ref = (com.amap.api.services.core.ServiceSettings) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.ServiceSettings@" + refId + "::destroyInnerAsynThreadPool(" + "" + ")");
                }
            
                // invoke native method
                try {
                    ref.destroyInnerAsynThreadPool();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.SearchUtils::getSHA1", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SearchUtils::getSHA1(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.amap.api.services.core.SearchUtils.getSHA1(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.SearchUtils::getPkgName", (args, methodResult) -> {
                // args
                // ref arg
                android.content.Context var0 = (android.content.Context) getHEAP().get((int) ((Map<String, Object>) args).get("var0"));
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SearchUtils::getPkgName(" + var0 + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.amap.api.services.core.SearchUtils.getPkgName(var0);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.SearchUtils::getVersion", (args, methodResult) -> {
                // args
            
            
                // ref
            
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.SearchUtils::getVersion(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = com.amap.api.services.core.SearchUtils.getVersion();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonSharePoint::getSharePointName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonSharePoint ref = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonSharePoint@" + refId + "::getSharePointName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getSharePointName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonSharePoint::setSharePointName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonSharePoint ref = (com.amap.api.services.core.LatLonSharePoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonSharePoint@" + refId + "::setSharePointName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSharePointName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonPoint::getLongitude", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::getLongitude(" + "" + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = ref.getLongitude();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonPoint::setLongitude", (args, methodResult) -> {
                // args
                // jsonable arg
                double var1 = (double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::setLongitude(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLongitude(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonPoint::getLatitude", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::getLatitude(" + "" + ")");
                }
            
                // invoke native method
                double result;
                try {
                    result = ref.getLatitude();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                double jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonPoint::setLatitude", (args, methodResult) -> {
                // args
                // jsonable arg
                double var1 = (double) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::setLatitude(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setLatitude(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.LatLonPoint::copy", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.LatLonPoint ref = (com.amap.api.services.core.LatLonPoint) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.LatLonPoint@" + refId + "::copy(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.LatLonPoint result;
                try {
                    result = ref.copy();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getBusinessArea", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getBusinessArea(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getBusinessArea();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setBusinessArea", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setBusinessArea(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setBusinessArea(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getAdName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getAdName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getAdName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setAdName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setAdName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAdName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getCityName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getCityName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCityName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setCityName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setCityName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCityName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getProvinceName", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getProvinceName(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getProvinceName();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setProvinceName", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setProvinceName(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setProvinceName(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getTypeDes", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTypeDes(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getTypeDes();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setTypeDes", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setTypeDes(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTypeDes(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getTel", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTel(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getTel();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setTel", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setTel(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setTel(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getAdCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getAdCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getAdCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setAdCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setAdCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setAdCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getPoiId", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getPoiId(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getPoiId();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getDistance", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getDistance(" + "" + ")");
                }
            
                // invoke native method
                int result;
                try {
                    result = ref.getDistance();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                int jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setDistance", (args, methodResult) -> {
                // args
                // jsonable arg
                int var1 = (int) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setDistance(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDistance(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getTitle", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getTitle(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getTitle();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getSnippet", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getSnippet(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getSnippet();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getLatLonPoint", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getLatLonPoint(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.LatLonPoint result;
                try {
                    result = ref.getLatLonPoint();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getCityCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getCityCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getCityCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setCityCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setCityCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setCityCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getEnter", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getEnter(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.LatLonPoint result;
                try {
                    result = ref.getEnter();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setEnter", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setEnter(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setEnter(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getExit", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getExit(" + "" + ")");
                }
            
                // invoke native method
                com.amap.api.services.core.LatLonPoint result;
                try {
                    result = ref.getExit();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                Integer jsonableResult = null;
                if (result != null) {
                    jsonableResult = System.identityHashCode(result);
                    getHEAP().put(jsonableResult, result);
                }
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setExit", (args, methodResult) -> {
                // args
                // ref arg
                com.amap.api.services.core.LatLonPoint var1 = (com.amap.api.services.core.LatLonPoint) getHEAP().get((int) ((Map<String, Object>) args).get("var1"));
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setExit(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setExit(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getWebsite", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getWebsite(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getWebsite();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setWebsite", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setWebsite(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setWebsite(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getPostcode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getPostcode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getPostcode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setPostcode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setPostcode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setPostcode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getEmail", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getEmail(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getEmail();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setEmail", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setEmail(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setEmail(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getDirection", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getDirection(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getDirection();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setDirection", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setDirection(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setDirection(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setIndoorMap", (args, methodResult) -> {
                // args
                // jsonable arg
                boolean var1 = (boolean) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setIndoorMap(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setIndoorMap(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::isIndoorMap", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::isIndoorMap(" + "" + ")");
                }
            
                // invoke native method
                boolean result;
                try {
                    result = ref.isIndoorMap();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                boolean jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setProvinceCode", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setProvinceCode(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setProvinceCode(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getProvinceCode", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getProvinceCode(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getProvinceCode();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setParkingType", (args, methodResult) -> {
                // args
                // jsonable arg
                String var1 = (String) ((Map<String, Object>) args).get("var1");
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setParkingType(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setParkingType(var1);
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::getParkingType", (args, methodResult) -> {
                // args
            
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::getParkingType(" + "" + ")");
                }
            
                // invoke native method
                String result;
                try {
                    result = ref.getParkingType();
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = result;
            
                methodResult.success(jsonableResult);
            });
            // method
            put("com.amap.api.services.core.PoiItem::setSubPois", (args, methodResult) -> {
                // args
                // list arg
                List<Integer> var1RefIdList = (List<Integer>) ((Map<String, Object>) args).get("var1");
                List<com.amap.api.services.poisearch.SubPoiItem> var1 = new ArrayList<>();
                for (int refId : var1RefIdList) {
                    var1.add((com.amap.api.services.poisearch.SubPoiItem) getHEAP().get(refId));
                }
            
                // ref
                int refId = (int) ((Map<String, Object>) args).get("refId");
                com.amap.api.services.core.PoiItem ref = (com.amap.api.services.core.PoiItem) getHEAP().get(refId);
            
                // print log
                if (getEnableLog()) {
                    Log.d("fluttify-java", "fluttify-java: com.amap.api.services.core.PoiItem@" + refId + "::setSubPois(" + var1 + ")");
                }
            
                // invoke native method
                try {
                    ref.setSubPois(new ArrayList(var1));
                } catch (Throwable throwable) {
                    throwable.printStackTrace();
                    if (getEnableLog()) {
                        Log.d("Current HEAP: ", getHEAP().toString());
                    }
                    methodResult.error(throwable.getMessage(), null, null);
                    return;
                }
            
                // convert result to jsonable result
                String jsonableResult = "success";
            
                methodResult.success(jsonableResult);
            });
        }};
    }
}
